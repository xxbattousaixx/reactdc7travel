{"version":3,"file":"static/js/main.b7c1c137.js","mappings":"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UT,OAPAisD,GAAS2W,GAAY,CAAC5iE,EAAWlU,KAC3B06D,GAAGxqF,IAAI4mG,KACT92E,EAAMy6D,GAAevmD,IAEvB8kD,EAASh5D,GAAOg5D,EAAS9kD,EAAU,IAG9B,CACL8kD,WAEJ,CqBlDage,CEd2B,CACtC,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,MAEA,SACA,WACA,OACA,UACA,gBACA,IACA,QACA,OACA,iBACA,OACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,MACA,OACA,SFxHkC,CAClC/c,oBFOK,SAA6B5wD,EAAoBoM,GACtD,IAAKpM,EAASpc,WAAaoc,EAAStiB,aAClC,OAAO,EAGT,MAAMkwF,EACkB,WAAtB5tE,EAASvf,UACRuf,EAASvX,YAA+C,WAAjCuX,EAASvX,WAAWhI,UAExC,MAAEoG,EAAA,SAAOnE,EAAA,UAAUub,EAAA,WAAWF,EAAA,QAAY8vE,KAAYC,GAC1D1hE,EAEI43C,EAAS96E,OAAO86E,OAAO8pB,GACvBC,EAAQ7kG,OAAO6d,KAAK+mF,GAAYpiD,KAAIjzC,GACxCm1F,GAAmB5tE,EAASguE,aAAav1F,GACrCA,EACAwqF,GAAexqF,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","sources":["../node_modules/base64-js/index.js","../node_modules/buffer/index.js","../node_modules/ieee754/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../ReactPaginate/webpack/universalModuleDefinition","../ReactPaginate/node_modules/prop-types/factoryWithThrowingShims.js","../ReactPaginate/node_modules/prop-types/index.js","../ReactPaginate/node_modules/prop-types/lib/ReactPropTypesSecret.js","../ReactPaginate/external umd {\"root\":\"React\",\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}","../ReactPaginate/webpack/bootstrap","../ReactPaginate/webpack/runtime/compat get default export","../ReactPaginate/webpack/runtime/define property getters","../ReactPaginate/webpack/runtime/hasOwnProperty shorthand","../ReactPaginate/webpack/runtime/make namespace object","../ReactPaginate/react_components/PageView.js","../ReactPaginate/react_components/BreakView.js","../ReactPaginate/react_components/utils.js","../ReactPaginate/react_components/PaginationBoxView.js","../ReactPaginate/react_components/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","reportWebVitals.js","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/@babel/runtime/helpers/esm/extends.js","helpers/history.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/@react-spring/shared/src/globals.ts","../node_modules/@react-spring/rafz/src/index.ts","../node_modules/@react-spring/shared/src/helpers.ts","../node_modules/@react-spring/shared/src/FrameLoop.ts","../node_modules/@react-spring/shared/src/clamp.ts","../node_modules/@react-spring/shared/src/colorMatchers.ts","../node_modules/@react-spring/shared/src/normalizeColor.ts","../node_modules/@react-spring/shared/src/colorToRgba.ts","../node_modules/@react-spring/shared/src/createInterpolator.ts","../node_modules/@react-spring/shared/src/easings.ts","../node_modules/@react-spring/shared/src/fluids.ts","../node_modules/@react-spring/shared/src/stringInterpolation.ts","../node_modules/@react-spring/shared/src/regexs.ts","../node_modules/@react-spring/shared/src/variableToRgba.ts","../node_modules/@react-spring/shared/src/deprecations.ts","../node_modules/@react-spring/shared/src/isAnimatedString.ts","../node_modules/@react-spring/shared/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/@react-spring/shared/src/hooks/useIsMounted.ts","../node_modules/@react-spring/shared/src/hooks/useForceUpdate.ts","../node_modules/@react-spring/shared/src/hooks/useOnce.ts","../node_modules/@react-spring/shared/src/hooks/usePrev.ts","../node_modules/@react-spring/shared/src/hooks/useReducedMotion.ts","../node_modules/@react-spring/animated/src/Animated.ts","../node_modules/@react-spring/animated/src/AnimatedValue.ts","../node_modules/@react-spring/animated/src/AnimatedString.ts","../node_modules/@react-spring/animated/src/context.ts","../node_modules/@react-spring/animated/src/AnimatedObject.ts","../node_modules/@react-spring/animated/src/AnimatedArray.ts","../node_modules/@react-spring/animated/src/getAnimatedType.ts","../node_modules/@react-spring/animated/src/withAnimated.tsx","../node_modules/@react-spring/animated/src/createHost.ts","../node_modules/@react-spring/core/src/helpers.ts","../node_modules/@react-spring/core/src/constants.ts","../node_modules/@react-spring/core/src/AnimationConfig.ts","../node_modules/@react-spring/core/src/Animation.ts","../node_modules/@react-spring/core/src/scheduleProps.ts","../node_modules/@react-spring/core/src/AnimationResult.ts","../node_modules/@react-spring/core/src/runAsync.ts","../node_modules/@react-spring/core/src/FrameValue.ts","../node_modules/@react-spring/core/src/SpringPhase.ts","../node_modules/@react-spring/core/src/SpringValue.ts","../node_modules/@react-spring/core/src/Controller.ts","../node_modules/@react-spring/core/src/SpringContext.tsx","../node_modules/@react-spring/shared/src/hooks/useMemoOne.ts","../node_modules/@react-spring/core/src/SpringRef.ts","../node_modules/@react-spring/core/src/hooks/useSprings.ts","../node_modules/@react-spring/core/src/hooks/useSpring.ts","../node_modules/@react-spring/core/src/Interpolation.ts","../node_modules/@react-spring/core/src/globals.ts","../node_modules/@react-spring/web/src/applyAnimatedValues.ts","../node_modules/@react-spring/web/src/AnimatedStyle.ts","../node_modules/@react-spring/web/src/index.ts","../node_modules/@react-spring/shared/src/colors.ts","../node_modules/@react-spring/web/src/primitives.ts","hooks/useAuth.jsx","hooks/useLocalStorage.jsx","components/CreateTrip.js","components/TripCard.js","components/ShowTripList.js","components/ShowTripDetails.js","components/ShowPublicTrip.js","components/ShowPublicProfile.js","components/TripCard2.js","components/Dashboard.js","components/ProtectedRoute.js","components/UpdateTripInfo.js","components/UpdateProfileInfo.js","components/ShowProfile.js","components/Profile.js","components/Login.js","App.js","index.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPaginate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactPaginate\"] = factory(root[\"React\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__98__) => {\nreturn ","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__98__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = (props) => {\n  let { pageClassName, pageLinkClassName } = props;\n  const {\n    page,\n    selected,\n    activeClassName,\n    activeLinkClassName,\n    getEventListener,\n    pageSelectedHandler,\n    href,\n    extraAriaContext,\n    pageLabelBuilder,\n    rel,\n  } = props;\n\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' + page + (extraAriaContext ? ' ' + extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel = props.ariaLabel || 'Page ' + page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + activeClassName;\n    } else {\n      pageClassName = activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        rel={rel}\n        role={!href ? 'button' : undefined}\n        className={pageLinkClassName}\n        href={href}\n        tabIndex={selected ? '-1' : '0'}\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={pageSelectedHandler}\n        {...getEventListener(pageSelectedHandler)}\n      >\n        {pageLabelBuilder(page)}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  pageSelectedHandler: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n  pageLabelBuilder: PropTypes.func.isRequired,\n  rel: PropTypes.string,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = (props) => {\n  const {\n    breakLabel,\n    breakAriaLabel,\n    breakClassName,\n    breakLinkClassName,\n    breakHandler,\n    getEventListener,\n  } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        role=\"button\"\n        tabIndex=\"0\"\n        aria-label={breakAriaLabel}\n        onKeyPress={breakHandler}\n        {...getEventListener(breakHandler)}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakAriaLabel: PropTypes.string,\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  breakHandler: PropTypes.func.isRequired,\n  getEventListener: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","export function classNameIfDefined(className, orClassName = '') {\n  return className !== undefined && className !== null\n    ? className\n    : orClassName;\n}\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\nimport { classNameIfDefined } from './utils';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number,\n    marginPagesDisplayed: PropTypes.number,\n    previousLabel: PropTypes.node,\n    previousAriaLabel: PropTypes.string,\n    prevPageRel: PropTypes.string,\n    prevRel: PropTypes.string,\n    nextLabel: PropTypes.node,\n    nextAriaLabel: PropTypes.string,\n    nextPageRel: PropTypes.string,\n    nextRel: PropTypes.string,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    breakAriaLabels: PropTypes.shape({\n      forward: PropTypes.string,\n      backward: PropTypes.string,\n    }),\n    hrefBuilder: PropTypes.func,\n    hrefAllControls: PropTypes.bool,\n    onPageChange: PropTypes.func,\n    onPageActive: PropTypes.func,\n    onClick: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    className: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    pageLabelBuilder: PropTypes.func,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    disabledLinkClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n    eventListener: PropTypes.string,\n    renderOnZeroPageCount: PropTypes.func,\n    selectedPageRel: PropTypes.string,\n  };\n\n  static defaultProps = {\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousLabel: 'Previous',\n    previousClassName: 'previous',\n    previousAriaLabel: 'Previous page',\n    prevPageRel: 'prev',\n    prevRel: 'prev',\n    nextLabel: 'Next',\n    nextClassName: 'next',\n    nextAriaLabel: 'Next page',\n    nextPageRel: 'next',\n    nextRel: 'next',\n    breakLabel: '...',\n    breakAriaLabels: { forward: 'Jump forward', backward: 'Jump backward' },\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n    pageLabelBuilder: (page) => page,\n    eventListener: 'onClick',\n    renderOnZeroPageCount: undefined,\n    selectedPageRel: 'canonical',\n    hrefAllControls: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (props.initialPage !== undefined && props.forcePage !== undefined) {\n      console.warn(\n        `(react-paginate): Both initialPage (${props.initialPage}) and forcePage (${props.forcePage}) props are provided, which is discouraged.` +\n          ' Use exclusively forcePage prop for a controlled component.\\nSee https://reactjs.org/docs/forms.html#controlled-components'\n      );\n    }\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n      pageCount,\n      forcePage,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n\n    if (!Number.isInteger(pageCount)) {\n      console.warn(\n        `(react-paginate): The pageCount prop value provided is not an integer (${pageCount}). Did you forget a Math.ceil()?`\n      );\n    }\n\n    if (initialPage !== undefined && initialPage > pageCount - 1) {\n      console.warn(\n        `(react-paginate): The initialPage prop provided is greater than the maximum page index from pageCount prop (${initialPage} > ${\n          pageCount - 1\n        }).`\n      );\n    }\n\n    if (forcePage !== undefined && forcePage > pageCount - 1) {\n      console.warn(\n        `(react-paginate): The forcePage prop provided is greater than the maximum page index from pageCount prop (${forcePage} > ${\n          pageCount - 1\n        }).`\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.forcePage !== undefined &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      if (this.props.forcePage > this.props.pageCount - 1) {\n        console.warn(\n          `(react-paginate): The forcePage prop provided is greater than the maximum page index from pageCount prop (${\n            this.props.forcePage\n          } > ${this.props.pageCount - 1}).`\n        );\n      }\n\n      this.setState({ selected: this.props.forcePage });\n    }\n\n    if (\n      Number.isInteger(prevProps.pageCount) &&\n      !Number.isInteger(this.props.pageCount)\n    ) {\n      console.warn(\n        `(react-paginate): The pageCount prop value provided is not an integer (${this.props.pageCount}). Did you forget a Math.ceil()?`\n      );\n    }\n  }\n\n  handlePreviousPage = (event) => {\n    const { selected } = this.state;\n\n    this.handleClick(event, null, selected > 0 ? selected - 1 : undefined, {\n      isPrevious: true,\n    });\n  };\n\n  handleNextPage = (event) => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    this.handleClick(\n      event,\n      null,\n      selected < pageCount - 1 ? selected + 1 : undefined,\n      { isNext: true }\n    );\n  };\n\n  handlePageSelected = (selected, event) => {\n    if (this.state.selected === selected) {\n      this.callActiveCallback(selected);\n      this.handleClick(event, null, undefined, { isActive: true });\n      return;\n    }\n\n    this.handleClick(event, null, selected);\n  };\n\n  handlePageChange = (selected) => {\n    if (this.state.selected === selected) {\n      return;\n    }\n    this.setState({ selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getEventListener = (handlerFunction) => {\n    const { eventListener } = this.props;\n    return {\n      [eventListener]: handlerFunction,\n    };\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleClick = (\n    event,\n    index,\n    nextSelectedPage,\n    {\n      isPrevious = false,\n      isNext = false,\n      isBreak = false,\n      isActive = false,\n    } = {}\n  ) => {\n    event.preventDefault ? event.preventDefault() : (event.returnValue = false);\n    const { selected } = this.state;\n    const { onClick } = this.props;\n\n    let newPage = nextSelectedPage;\n\n    if (onClick) {\n      const onClickReturn = onClick({\n        index,\n        selected,\n        nextSelectedPage,\n        event,\n        isPrevious,\n        isNext,\n        isBreak,\n        isActive,\n      });\n      if (onClickReturn === false) {\n        // We abord standard behavior and let parent handle\n        // all behavior.\n        return;\n      }\n      if (Number.isInteger(onClickReturn)) {\n        // We assume parent want to go to the returned page.\n        newPage = onClickReturn;\n      }\n    }\n\n    if (newPage !== undefined) {\n      this.handlePageChange(newPage);\n    }\n  };\n\n  handleBreakClick = (index, event) => {\n    const { selected } = this.state;\n\n    this.handleClick(\n      event,\n      index,\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      { isBreak: true }\n    );\n  };\n\n  getElementHref(pageIndex) {\n    const { hrefBuilder, pageCount, hrefAllControls } = this.props;\n    if (!hrefBuilder) return;\n    if (hrefAllControls || (pageIndex >= 0 && pageIndex < pageCount)) {\n      return hrefBuilder(pageIndex + 1, pageCount, this.state.selected);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (\n      this.props.onPageChange !== undefined &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  callActiveCallback = (selectedItem) => {\n    if (\n      this.props.onPageActive !== undefined &&\n      typeof this.props.onPageActive === 'function'\n    ) {\n      this.props.onPageActive({ selected: selectedItem });\n    }\n  };\n\n  getElementPageRel = (index) => {\n    const { selected } = this.state;\n    const { nextPageRel, prevPageRel, selectedPageRel } = this.props;\n\n    if (selected - 1 === index) {\n      return prevPageRel;\n    } else if (selected === index) {\n      return selectedPageRel;\n    } else if (selected + 1 === index) {\n      return nextPageRel;\n    }\n    return undefined;\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n      pageLabelBuilder,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        pageSelectedHandler={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        rel={this.getElementPageRel(index)}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.getElementHref(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n        pageLabelBuilder={pageLabelBuilder}\n        getEventListener={this.getEventListener}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n      breakAriaLabels,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let createPageView = (index) => this.getPageElement(index);\n      let index;\n      let breakView;\n\n      // First pass: process the pages or breaks to display (or not).\n      const pagesBreaking = [];\n      for (index = 0; index < pageCount; index++) {\n        const page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          pagesBreaking.push({\n            type: 'page',\n            index,\n            display: createPageView(index),\n          });\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          pagesBreaking.push({\n            type: 'page',\n            index,\n            display: createPageView(index),\n          });\n          continue;\n        }\n\n        // If it is the first element of the array the rightSide need to be adjusted,\n        //  otherwise an extra element will be rendered\n        const adjustedRightSide =\n          selected === 0 && pageRangeDisplayed > 1 ? rightSide - 1 : rightSide;\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (\n          index >= selected - leftSide &&\n          index <= selected + adjustedRightSide\n        ) {\n          pagesBreaking.push({\n            type: 'page',\n            index,\n            display: createPageView(index),\n          });\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (\n          breakLabel &&\n          pagesBreaking.length > 0 &&\n          pagesBreaking[pagesBreaking.length - 1].display !== breakView &&\n          // We do not show break if only one active page is displayed.\n          (pageRangeDisplayed > 0 || marginPagesDisplayed > 0)\n        ) {\n          const useBreakAriaLabel =\n            index < selected\n              ? breakAriaLabels.backward\n              : breakAriaLabels.forward;\n          breakView = (\n            <BreakView\n              key={index}\n              breakAriaLabel={useBreakAriaLabel}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              breakHandler={this.handleBreakClick.bind(null, index)}\n              getEventListener={this.getEventListener}\n            />\n          );\n          pagesBreaking.push({ type: 'break', index, display: breakView });\n        }\n      }\n      // Second pass: we remove breaks containing one page to the actual page.\n      pagesBreaking.forEach((pageElement, i) => {\n        let actualPageElement = pageElement;\n        // 1 2 3 4 5 6 7 ... 9 10\n        //         |\n        // 1 2 ... 4 5 6 7 8 9 10\n        //             |\n        // The break should be replaced by the page.\n        if (\n          pageElement.type === 'break' &&\n          pagesBreaking[i - 1] &&\n          pagesBreaking[i - 1].type === 'page' &&\n          pagesBreaking[i + 1] &&\n          pagesBreaking[i + 1].type === 'page' &&\n          pagesBreaking[i + 1].index - pagesBreaking[i - 1].index <= 2\n        ) {\n          actualPageElement = {\n            type: 'page',\n            index: pageElement.index,\n            display: createPageView(pageElement.index),\n          };\n        }\n        // We add the displayed elements in the same pass, to avoid another iteration.\n        items.push(actualPageElement.display);\n      });\n    }\n\n    return items;\n  };\n\n  render() {\n    const { renderOnZeroPageCount } = this.props;\n    if (this.props.pageCount === 0 && renderOnZeroPageCount !== undefined) {\n      return renderOnZeroPageCount\n        ? renderOnZeroPageCount(this.props)\n        : renderOnZeroPageCount;\n    }\n    const {\n      disabledClassName,\n      disabledLinkClassName,\n      pageCount,\n      className,\n      containerClassName,\n      previousLabel,\n      previousClassName,\n      previousLinkClassName,\n      previousAriaLabel,\n      prevRel,\n      nextLabel,\n      nextClassName,\n      nextLinkClassName,\n      nextAriaLabel,\n      nextRel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const isPreviousDisabled = selected === 0;\n    const isNextDisabled = selected === pageCount - 1;\n\n    const previousClasses = `${classNameIfDefined(previousClassName)}${\n      isPreviousDisabled ? ` ${classNameIfDefined(disabledClassName)}` : ''\n    }`;\n    const nextClasses = `${classNameIfDefined(nextClassName)}${\n      isNextDisabled ? ` ${classNameIfDefined(disabledClassName)}` : ''\n    }`;\n\n    const previousLinkClasses = `${classNameIfDefined(previousLinkClassName)}${\n      isPreviousDisabled ? ` ${classNameIfDefined(disabledLinkClassName)}` : ''\n    }`;\n    const nextLinkClasses = `${classNameIfDefined(nextLinkClassName)}${\n      isNextDisabled ? ` ${classNameIfDefined(disabledLinkClassName)}` : ''\n    }`;\n\n    const previousAriaDisabled = isPreviousDisabled ? 'true' : 'false';\n    const nextAriaDisabled = isNextDisabled ? 'true' : 'false';\n\n    return (\n      <ul\n        className={className || containerClassName}\n        role=\"navigation\"\n        aria-label=\"Pagination\"\n      >\n        <li className={previousClasses}>\n          <a\n            className={previousLinkClasses}\n            href={this.getElementHref(selected - 1)}\n            tabIndex={isPreviousDisabled ? '-1' : '0'}\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            aria-label={previousAriaLabel}\n            rel={prevRel}\n            {...this.getEventListener(this.handlePreviousPage)}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            className={nextLinkClasses}\n            href={this.getElementHref(selected + 1)}\n            tabIndex={isNextDisabled ? '-1' : '0'}\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            aria-label={nextAriaLabel}\n            rel={nextRel}\n            {...this.getEventListener(this.handleNextPage)}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"5052d22a\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"dc7travel:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdc7travel\"] = self[\"webpackChunkdc7travel\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (args: LoaderFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (args: ActionFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(branches[i], decoded);\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nfunction decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === matches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  ActionFunction,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  AgnosticRouteObject,\n  DataResult,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  ImmutableRouteKey,\n  LoaderFunction,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized: boolean;\n  let hasLazyRoutes = initialMatches.some((m) => m.route.lazy);\n  let hasLoaders = initialMatches.some((m) => m.route.loader);\n  if (hasLazyRoutes) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!hasLoaders) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = (m: AgnosticDataRouteMatch) => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) return true;\n      // Explicitly opting-in to running on hydration\n      if (m.route.loader.hydrate === true) return false;\n      // Otherwise, initialized if hydrated with data or an error\n      return (\n        (loaderData && loaderData[m.route.id] !== undefined) ||\n        (errors && errors[m.route.id] !== undefined)\n      );\n    };\n\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        future.v7_relativeSplatPath\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingError || null,\n          ...(pendingActionData ? { actionData: pendingActionData } : {}),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    if (\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration)\n    ) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(\n        {\n          navigation: loadingNavigation,\n          ...(actionData\n            ? Object.keys(actionData).length === 0\n              ? { actionData: null }\n              : { actionData }\n            : {}),\n          ...(revalidatingFetchers.length > 0\n            ? { fetchers: new Map(state.fetchers) }\n            : {}),\n        },\n        {\n          flushSync,\n        }\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors)\n        .filter(([id]) => !matchesToLoad.some((m) => m.route.id === id))\n        .forEach(([routeId, error]) => {\n          errors = Object.assign(errors || {}, { [routeId]: error });\n        });\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename,\n      future.v7_relativeSplatPath\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(state, actionResult, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename,\n      future.v7_relativeSplatPath\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true,\n    });\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          future.v7_relativeSplatPath\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        future.v7_relativeSplatPath,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          future.v7_relativeSplatPath,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  v7_relativeSplatPath: boolean,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location,\n          v7_relativeSplatPath\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this navigation's state updates\n   */\n  unstable_flushSync?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={{\n                  v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n                }}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <DataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import { createBrowserHistory } from 'history';\n \nexport const history = createBrowserHistory();","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.8\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n\n        if (!err.stack) {\n          err.stack = stack;\n          // match without the 2 top stack lines\n        } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n          err.stack += '\\n' + stack\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import { raf, Rafz } from '@react-spring/rafz'\nimport {\n  OneOrMore,\n  InterpolatorConfig,\n  InterpolatorArgs,\n} from '@react-spring/types'\n\nimport { FluidValue } from './fluids'\nimport type { OpaqueAnimation } from './FrameLoop'\nimport { noop } from './helpers'\n\n//\n// Required\n//\n\nexport let createStringInterpolator: (\n  config: InterpolatorConfig<string>\n) => (input: number) => string\n\n//\n// Optional\n//\n\nexport let to: <Input, Output>(\n  source: OneOrMore<FluidValue>,\n  args: InterpolatorArgs<Input, Output>\n) => FluidValue<Output>\n\nexport let colors = null as { [key: string]: number } | null\n\nexport let skipAnimation = false as boolean\n\nexport let willAdvance: (animation: OpaqueAnimation) => void = noop\n\n//\n// Configuration\n//\n\nexport interface AnimatedGlobals {\n  /** Returns a new `Interpolation` object */\n  to?: typeof to\n  /** Used to measure frame length. Read more [here](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now) */\n  now?: typeof raf.now\n  /** Provide custom color names for interpolation */\n  colors?: typeof colors\n  /** Make all animations instant and skip the frameloop entirely */\n  skipAnimation?: typeof skipAnimation\n  /** Provide custom logic for string interpolation */\n  createStringInterpolator?: typeof createStringInterpolator\n  /** Schedule a function to run on the next frame */\n  requestAnimationFrame?: (cb: () => void) => void\n  /** Event props are called with `batchedUpdates` to reduce extraneous renders */\n  batchedUpdates?: typeof raf.batchedUpdates\n  /** @internal Exposed for testing purposes */\n  willAdvance?: typeof willAdvance\n  /** sets the global frameLoop setting for the global raf instance */\n  frameLoop?: Rafz['frameLoop']\n}\n\nexport const assign = (globals: AnimatedGlobals) => {\n  if (globals.to) to = globals.to\n  if (globals.now) raf.now = globals.now\n  if (globals.colors !== undefined) colors = globals.colors\n  if (globals.skipAnimation != null) skipAnimation = globals.skipAnimation\n  if (globals.createStringInterpolator)\n    createStringInterpolator = globals.createStringInterpolator\n  if (globals.requestAnimationFrame) raf.use(globals.requestAnimationFrame)\n  if (globals.batchedUpdates) raf.batchedUpdates = globals.batchedUpdates\n  if (globals.willAdvance) willAdvance = globals.willAdvance\n  if (globals.frameLoop) raf.frameLoop = globals.frameLoop\n}\n","import type {\n  FrameFn,\n  FrameUpdateFn,\n  NativeRaf,\n  Rafz,\n  Timeout,\n  Throttled,\n} from './types'\n\nexport type { FrameFn, FrameUpdateFn, Timeout, Throttled, Rafz }\n\nlet updateQueue = makeQueue<FrameUpdateFn>()\n\n/**\n * Schedule an update for next frame.\n * Your function can return `true` to repeat next frame.\n */\nexport const raf: Rafz = fn => schedule(fn, updateQueue)\n\nlet writeQueue = makeQueue<FrameFn>()\nraf.write = fn => schedule(fn, writeQueue)\n\nlet onStartQueue = makeQueue<FrameFn>()\nraf.onStart = fn => schedule(fn, onStartQueue)\n\nlet onFrameQueue = makeQueue<FrameFn>()\nraf.onFrame = fn => schedule(fn, onFrameQueue)\n\nlet onFinishQueue = makeQueue<FrameFn>()\nraf.onFinish = fn => schedule(fn, onFinishQueue)\n\nlet timeouts: Timeout[] = []\nraf.setTimeout = (handler, ms) => {\n  const time = raf.now() + ms\n  const cancel = () => {\n    const i = timeouts.findIndex(t => t.cancel == cancel)\n    if (~i) timeouts.splice(i, 1)\n    pendingCount -= ~i ? 1 : 0\n  }\n\n  const timeout: Timeout = { time, handler, cancel }\n  timeouts.splice(findTimeout(time), 0, timeout)\n  pendingCount += 1\n\n  start()\n  return timeout\n}\n\n/** Find the index where the given time is not greater. */\nconst findTimeout = (time: number) =>\n  ~(~timeouts.findIndex(t => t.time > time) || ~timeouts.length)\n\nraf.cancel = fn => {\n  onStartQueue.delete(fn)\n  onFrameQueue.delete(fn)\n  onFinishQueue.delete(fn)\n  updateQueue.delete(fn)\n  writeQueue.delete(fn)\n}\n\nraf.sync = fn => {\n  sync = true\n  raf.batchedUpdates(fn)\n  sync = false\n}\n\nraf.throttle = fn => {\n  let lastArgs: any\n  function queuedFn() {\n    try {\n      fn(...lastArgs)\n    } finally {\n      lastArgs = null\n    }\n  }\n  function throttled(...args: any) {\n    lastArgs = args\n    raf.onStart(queuedFn)\n  }\n  throttled.handler = fn\n  throttled.cancel = () => {\n    onStartQueue.delete(queuedFn)\n    lastArgs = null\n  }\n  return throttled as any\n}\n\nlet nativeRaf =\n  typeof window != 'undefined'\n    ? (window.requestAnimationFrame as NativeRaf)\n    : // eslint-disable-next-line @typescript-eslint/no-empty-function\n      () => {}\n\nraf.use = impl => (nativeRaf = impl)\nraf.now = typeof performance != 'undefined' ? () => performance.now() : Date.now\nraf.batchedUpdates = fn => fn()\nraf.catch = console.error\n\nraf.frameLoop = 'always'\n\nraf.advance = () => {\n  if (raf.frameLoop !== 'demand') {\n    console.warn(\n      'Cannot call the manual advancement of rafz whilst frameLoop is not set as demand'\n    )\n  } else {\n    update()\n  }\n}\n\n/** The most recent timestamp. */\nlet ts = -1\n\n/** The number of pending tasks  */\nlet pendingCount = 0\n\n/** When true, scheduling is disabled. */\nlet sync = false\n\nfunction schedule<T extends Function>(fn: T, queue: Queue<T>) {\n  if (sync) {\n    queue.delete(fn)\n    fn(0)\n  } else {\n    queue.add(fn)\n    start()\n  }\n}\n\nfunction start() {\n  if (ts < 0) {\n    ts = 0\n    if (raf.frameLoop !== 'demand') {\n      nativeRaf(loop)\n    }\n  }\n}\n\nfunction stop() {\n  ts = -1\n}\n\nfunction loop() {\n  if (~ts) {\n    nativeRaf(loop)\n    raf.batchedUpdates(update)\n  }\n}\n\nfunction update() {\n  const prevTs = ts\n  ts = raf.now()\n\n  // Flush timeouts whose time is up.\n  const count = findTimeout(ts)\n  if (count) {\n    eachSafely(timeouts.splice(0, count), t => t.handler())\n    pendingCount -= count\n  }\n\n  if (!pendingCount) {\n    stop()\n\n    return\n  }\n\n  onStartQueue.flush()\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667)\n  onFrameQueue.flush()\n  writeQueue.flush()\n  onFinishQueue.flush()\n}\n\ninterface Queue<T extends Function = any> {\n  add: (fn: T) => void\n  delete: (fn: T) => boolean\n  flush: (arg?: any) => void\n}\n\nfunction makeQueue<T extends Function>(): Queue<T> {\n  let next = new Set<T>()\n  let current = next\n  return {\n    add(fn) {\n      pendingCount += current == next && !next.has(fn) ? 1 : 0\n      next.add(fn)\n    },\n    delete(fn) {\n      pendingCount -= current == next && next.has(fn) ? 1 : 0\n      return next.delete(fn)\n    },\n    flush(arg) {\n      if (current.size) {\n        next = new Set()\n        pendingCount -= current.size\n        eachSafely(current, fn => fn(arg) && next.add(fn))\n        pendingCount += next.size\n        current = next\n      }\n    },\n  }\n}\n\ninterface Eachable<T> {\n  forEach(cb: (value: T) => void): void\n}\n\nfunction eachSafely<T>(values: Eachable<T>, each: (value: T) => void) {\n  values.forEach(value => {\n    try {\n      each(value)\n    } catch (e) {\n      raf.catch(e as Error)\n    }\n  })\n}\n\n/** Tree-shakable state for testing purposes */\nexport const __raf = {\n  /** The number of pending tasks */\n  count(): number {\n    return pendingCount\n  },\n  /** Whether there's a raf update loop running */\n  isRunning(): boolean {\n    return ts >= 0\n  },\n  /** Clear internal state. Never call from update loop! */\n  clear() {\n    ts = -1\n    timeouts = []\n    onStartQueue = makeQueue()\n    updateQueue = makeQueue()\n    onFrameQueue = makeQueue()\n    writeQueue = makeQueue()\n    onFinishQueue = makeQueue()\n    pendingCount = 0\n  },\n}\n","import { Lookup, Arrify, AnyFn, Any } from '@react-spring/types'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport const defineHidden = (obj: any, key: any, value: any) =>\n  Object.defineProperty(obj, key, { value, writable: true, configurable: true })\n\ntype IsType<U> = <T>(arg: T & any) => arg is Narrow<T, U>\ntype Narrow<T, U> = [T] extends [Any] ? U : [T] extends [U] ? Extract<T, U> : U\n\ntype PlainObject<T> = Exclude<T & Lookup, Function | readonly any[]>\n\nexport const is = {\n  arr: Array.isArray as IsType<readonly any[]>,\n  obj: <T>(a: T & any): a is PlainObject<T> =>\n    !!a && a.constructor.name === 'Object',\n  fun: ((a: unknown) => typeof a === 'function') as IsType<Function>,\n  str: (a: unknown): a is string => typeof a === 'string',\n  num: (a: unknown): a is number => typeof a === 'number',\n  und: (a: unknown): a is undefined => a === undefined,\n}\n\n/** Compare animatable values */\nexport function isEqual(a: any, b: any) {\n  if (is.arr(a)) {\n    if (!is.arr(b) || a.length !== b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false\n    }\n    return true\n  }\n  return a === b\n}\n\ntype EachFn<Value, Key, This> = (this: This, value: Value, key: Key) => void\ntype Eachable<Value = any, Key = any, This = any> = {\n  forEach(cb: EachFn<Value, Key, This>, ctx?: This): void\n}\n\n/** Minifiable `.forEach` call */\nexport const each = <Value, Key, This>(\n  obj: Eachable<Value, Key, This>,\n  fn: EachFn<Value, Key, This>\n) => obj.forEach(fn)\n\n/** Iterate the properties of an object */\nexport function eachProp<T extends object, This>(\n  obj: T,\n  fn: (\n    this: This,\n    value: T extends any[] ? T[number] : T[keyof T],\n    key: string\n  ) => void,\n  ctx?: This\n) {\n  if (is.arr(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn.call(ctx as any, obj[i] as any, `${i}`)\n    }\n    return\n  }\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn.call(ctx as any, obj[key] as any, key)\n    }\n  }\n}\n\nexport const toArray = <T>(a: T): Arrify<Exclude<T, void>> =>\n  is.und(a) ? [] : is.arr(a) ? (a as any) : [a]\n\n/** Copy the `queue`, then iterate it after the `queue` is cleared */\nexport function flush<P, T>(\n  queue: Map<P, T>,\n  iterator: (entry: [P, T]) => void\n): void\nexport function flush<T>(queue: Set<T>, iterator: (value: T) => void): void\nexport function flush(queue: any, iterator: any) {\n  if (queue.size) {\n    const items = Array.from(queue)\n    queue.clear()\n    each(items, iterator)\n  }\n}\n\n/** Call every function in the queue with the same arguments. */\nexport const flushCalls = <T extends AnyFn>(\n  queue: Set<T>,\n  ...args: Parameters<T>\n) => flush(queue, fn => fn(...args))\n\n// For server-side rendering: https://github.com/react-spring/zustand/pull/34\n// Deno support: https://github.com/pmndrs/zustand/issues/347\n\nexport const isSSR = () =>\n  typeof window === 'undefined' ||\n  !window.navigator ||\n  /ServerSideRendering|^Deno\\//.test(window.navigator.userAgent)\n","import { raf } from '@react-spring/rafz'\nimport * as G from './globals'\n\nexport interface OpaqueAnimation {\n  idle: boolean\n  priority: number\n  advance(dt: number): void\n}\n\n// Animations starting on the next frame\nconst startQueue = new Set<OpaqueAnimation>()\n\n// The animations being updated in the current frame, sorted by lowest\n// priority first. These two arrays are swapped at the end of each frame.\nlet currentFrame: OpaqueAnimation[] = []\nlet prevFrame: OpaqueAnimation[] = []\n\n// The priority of the currently advancing animation.\n// To protect against a race condition whenever a frame is being processed,\n// where the filtering of `animations` is corrupted with a shifting index,\n// causing animations to potentially advance 2x faster than intended.\nlet priority = 0\n\n/**\n * The frameloop executes its animations in order of lowest priority first.\n * Animations are retained until idle.\n */\nexport const frameLoop = {\n  get idle() {\n    return !startQueue.size && !currentFrame.length\n  },\n\n  /** Advance the given animation on every frame until idle. */\n  start(animation: OpaqueAnimation) {\n    // An animation can be added while a frame is being processed,\n    // unless its priority is lower than the animation last updated.\n    if (priority > animation.priority) {\n      startQueue.add(animation)\n      raf.onStart(flushStartQueue)\n    } else {\n      startSafely(animation)\n      raf(advance)\n    }\n  },\n\n  /** Advance all animations by the given time. */\n  advance,\n\n  /** Call this when an animation's priority changes. */\n  sort(animation: OpaqueAnimation) {\n    if (priority) {\n      raf.onFrame(() => frameLoop.sort(animation))\n    } else {\n      const prevIndex = currentFrame.indexOf(animation)\n      if (~prevIndex) {\n        currentFrame.splice(prevIndex, 1)\n        startUnsafely(animation)\n      }\n    }\n  },\n\n  /**\n   * Clear all animations. For testing purposes.\n   *\n   * ☠️ Never call this from within the frameloop.\n   */\n  clear() {\n    currentFrame = []\n    startQueue.clear()\n  },\n}\n\nfunction flushStartQueue() {\n  startQueue.forEach(startSafely)\n  startQueue.clear()\n  raf(advance)\n}\n\nfunction startSafely(animation: OpaqueAnimation) {\n  if (!currentFrame.includes(animation)) startUnsafely(animation)\n}\n\nfunction startUnsafely(animation: OpaqueAnimation) {\n  currentFrame.splice(\n    findIndex(currentFrame, other => other.priority > animation.priority),\n    0,\n    animation\n  )\n}\n\nfunction advance(dt: number) {\n  const nextFrame = prevFrame\n\n  for (let i = 0; i < currentFrame.length; i++) {\n    const animation = currentFrame[i]\n    priority = animation.priority\n\n    // Animations may go idle before advancing.\n    if (!animation.idle) {\n      G.willAdvance(animation)\n      animation.advance(dt)\n      if (!animation.idle) {\n        nextFrame.push(animation)\n      }\n    }\n  }\n  priority = 0\n\n  // Reuse the `currentFrame` array to avoid garbage collection.\n  prevFrame = currentFrame\n  prevFrame.length = 0\n\n  // Set `currentFrame` for next frame, so the `start` function\n  // adds new animations to the proper array.\n  currentFrame = nextFrame\n\n  return currentFrame.length > 0\n}\n\n/** Like `Array.prototype.findIndex` but returns `arr.length` instead of `-1` */\nfunction findIndex<T>(arr: T[], test: (value: T) => boolean) {\n  const index = arr.findIndex(test)\n  return index < 0 ? arr.length : index\n}\n","export const clamp = (min: number, max: number, v: number) =>\n  Math.min(Math.max(v, min), max)\n","// const INTEGER = '[-+]?\\\\d+';\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+'\nconst PERCENTAGE = NUMBER + '%'\n\nfunction call(...parts: string[]) {\n  return '\\\\(\\\\s*(' + parts.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)'\n}\n\nexport const rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER))\nexport const rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER))\nexport const hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE))\nexport const hsla = new RegExp(\n  'hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)\n)\nexport const hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const hex4 =\n  /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const hex6 = /^#([0-9a-fA-F]{6})$/\nexport const hex8 = /^#([0-9a-fA-F]{8})$/\n","/*\nhttps://github.com/react-community/normalize-css-color\n\nBSD 3-Clause License\n\nCopyright (c) 2016, React Community\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nimport * as matchers from './colorMatchers'\nimport * as G from './globals'\n\nexport function normalizeColor(color: number | string) {\n  let match\n\n  if (typeof color === 'number') {\n    return color >>> 0 === color && color >= 0 && color <= 0xffffffff\n      ? color\n      : null\n  }\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color)))\n    return parseInt(match[1] + 'ff', 16) >>> 0\n\n  if (G.colors && G.colors[color] !== undefined) {\n    return G.colors[color]\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) | // b\n        0x000000ff) >>> // a\n      0\n    )\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    return (\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) | // b\n        parse1(match[4])) >>> // a\n      0\n    )\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          'ff', // a\n        16\n      ) >>> 0\n    )\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) return parseInt(match[1], 16) >>> 0\n\n  if ((match = matchers.hex4.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          match[4] +\n          match[4], // a\n        16\n      ) >>> 0\n    )\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    )\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        parse1(match[4])) >>> // a\n      0\n    )\n  }\n  return null\n}\n\nfunction hue2rgb(p: number, q: number, t: number) {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\nfunction hslToRgb(h: number, s: number, l: number) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n  const p = 2 * l - q\n  const r = hue2rgb(p, q, h + 1 / 3)\n  const g = hue2rgb(p, q, h)\n  const b = hue2rgb(p, q, h - 1 / 3)\n  return (\n    (Math.round(r * 255) << 24) |\n    (Math.round(g * 255) << 16) |\n    (Math.round(b * 255) << 8)\n  )\n}\n\nfunction parse255(str: string) {\n  const int = parseInt(str, 10)\n  if (int < 0) return 0\n  if (int > 255) return 255\n  return int\n}\n\nfunction parse360(str: string) {\n  const int = parseFloat(str)\n  return (((int % 360) + 360) % 360) / 360\n}\n\nfunction parse1(str: string) {\n  const num = parseFloat(str)\n  if (num < 0) return 0\n  if (num > 1) return 255\n  return Math.round(num * 255)\n}\n\nfunction parsePercentage(str: string) {\n  // parseFloat conveniently ignores the final %\n  const int = parseFloat(str)\n  if (int < 0) return 0\n  if (int > 100) return 1\n  return int / 100\n}\n","import { normalizeColor } from './normalizeColor'\n\nexport function colorToRgba(input: string) {\n  let int32Color = normalizeColor(input)\n  if (int32Color === null) return input\n  int32Color = int32Color || 0\n  const r = (int32Color & 0xff000000) >>> 24\n  const g = (int32Color & 0x00ff0000) >>> 16\n  const b = (int32Color & 0x0000ff00) >>> 8\n  const a = (int32Color & 0x000000ff) / 255\n  return `rgba(${r}, ${g}, ${b}, ${a})`\n}\n","import * as G from './globals'\nimport { is } from './helpers'\nimport {\n  Animatable,\n  InterpolatorFn,\n  EasingFunction,\n  ExtrapolateType,\n  InterpolatorConfig,\n  InterpolatorFactory,\n} from '@react-spring/types'\n\nexport const createInterpolator: InterpolatorFactory = (\n  range: readonly number[] | InterpolatorFn<any, any> | InterpolatorConfig<any>,\n  output?: readonly Animatable[],\n  extrapolate?: ExtrapolateType\n) => {\n  if (is.fun(range)) {\n    return range\n  }\n\n  if (is.arr(range)) {\n    return createInterpolator({\n      range,\n      output: output!,\n      extrapolate,\n    })\n  }\n\n  if (is.str(range.output[0])) {\n    return G.createStringInterpolator(range as any) as any\n  }\n\n  const config = range as InterpolatorConfig<number>\n  const outputRange = config.output\n  const inputRange = config.range || [0, 1]\n\n  const extrapolateLeft =\n    config.extrapolateLeft || config.extrapolate || 'extend'\n  const extrapolateRight =\n    config.extrapolateRight || config.extrapolate || 'extend'\n  const easing = config.easing || (t => t)\n\n  return (input: number) => {\n    const range = findRange(input, inputRange)\n    return interpolate(\n      input,\n      inputRange[range],\n      inputRange[range + 1],\n      outputRange[range],\n      outputRange[range + 1],\n      easing,\n      extrapolateLeft,\n      extrapolateRight,\n      config.map\n    )\n  }\n}\n\nfunction interpolate(\n  input: number,\n  inputMin: number,\n  inputMax: number,\n  outputMin: number,\n  outputMax: number,\n  easing: EasingFunction,\n  extrapolateLeft: ExtrapolateType,\n  extrapolateRight: ExtrapolateType,\n  map?: (x: number) => number\n) {\n  let result = map ? map(input) : input\n  // Extrapolate\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') return result\n    else if (extrapolateLeft === 'clamp') result = inputMin\n  }\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') return result\n    else if (extrapolateRight === 'clamp') result = inputMax\n  }\n  if (outputMin === outputMax) return outputMin\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax\n  // Input Range\n  if (inputMin === -Infinity) result = -result\n  else if (inputMax === Infinity) result = result - inputMin\n  else result = (result - inputMin) / (inputMax - inputMin)\n  // Easing\n  result = easing(result)\n  // Output Range\n  if (outputMin === -Infinity) result = -result\n  else if (outputMax === Infinity) result = result + outputMin\n  else result = result * (outputMax - outputMin) + outputMin\n  return result\n}\n\nfunction findRange(input: number, inputRange: readonly number[]) {\n  // eslint-disable-next-line no-var\n  for (var i = 1; i < inputRange.length - 1; ++i)\n    if (inputRange[i] >= input) break\n  return i - 1\n}\n","import { EasingFunction } from '@react-spring/types'\n\nimport { clamp } from './clamp'\n\nexport type Direction = 'start' | 'end'\n\ntype StepsEasing = (steps: number, direction?: Direction) => EasingFunction\n\nconst steps: StepsEasing =\n  (steps: number, direction: Direction = 'end') =>\n  (progress: number) => {\n    progress =\n      direction === 'end'\n        ? Math.min(progress, 0.999)\n        : Math.max(progress, 0.001)\n    const expanded = progress * steps\n    const rounded =\n      direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded)\n\n    return clamp(0, 1, rounded / steps)\n  }\n\n/**\n * With thanks to ai easings.net\n * https://github.com/ai/easings.net/blob/master/src/easings/easingsFunctions.ts\n */\ninterface EasingDictionary {\n  linear: (t: number) => number\n  easeInQuad: (t: number) => number\n  easeOutQuad: (t: number) => number\n  easeInOutQuad: (t: number) => number\n  easeInCubic: (t: number) => number\n  easeOutCubic: (t: number) => number\n  easeInOutCubic: (t: number) => number\n  easeInQuart: (t: number) => number\n  easeOutQuart: (t: number) => number\n  easeInOutQuart: (t: number) => number\n  easeInQuint: (t: number) => number\n  easeOutQuint: (t: number) => number\n  easeInOutQuint: (t: number) => number\n  easeInSine: (t: number) => number\n  easeOutSine: (t: number) => number\n  easeInOutSine: (t: number) => number\n  easeInExpo: (t: number) => number\n  easeOutExpo: (t: number) => number\n  easeInOutExpo: (t: number) => number\n  easeInCirc: (t: number) => number\n  easeOutCirc: (t: number) => number\n  easeInOutCirc: (t: number) => number\n  easeInBack: (t: number) => number\n  easeOutBack: (t: number) => number\n  easeInOutBack: (t: number) => number\n  easeInElastic: (t: number) => number\n  easeOutElastic: (t: number) => number\n  easeInOutElastic: (t: number) => number\n  easeInBounce: (t: number) => number\n  easeOutBounce: (t: number) => number\n  easeInOutBounce: (t: number) => number\n  steps: StepsEasing\n}\n\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst bounceOut: EasingFunction = x => {\n  const n1 = 7.5625\n  const d1 = 2.75\n\n  if (x < 1 / d1) {\n    return n1 * x * x\n  } else if (x < 2 / d1) {\n    return n1 * (x -= 1.5 / d1) * x + 0.75\n  } else if (x < 2.5 / d1) {\n    return n1 * (x -= 2.25 / d1) * x + 0.9375\n  } else {\n    return n1 * (x -= 2.625 / d1) * x + 0.984375\n  }\n}\n\nexport const easings: EasingDictionary = {\n  linear: x => x,\n  easeInQuad: x => x * x,\n  easeOutQuad: x => 1 - (1 - x) * (1 - x),\n  easeInOutQuad: x => (x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2),\n  easeInCubic: x => x * x * x,\n  easeOutCubic: x => 1 - Math.pow(1 - x, 3),\n  easeInOutCubic: x =>\n    x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n  easeInQuart: x => x * x * x * x,\n  easeOutQuart: x => 1 - Math.pow(1 - x, 4),\n  easeInOutQuart: x =>\n    x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n  easeInQuint: x => x * x * x * x * x,\n  easeOutQuint: x => 1 - Math.pow(1 - x, 5),\n  easeInOutQuint: x =>\n    x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n  easeInSine: x => 1 - Math.cos((x * Math.PI) / 2),\n  easeOutSine: x => Math.sin((x * Math.PI) / 2),\n  easeInOutSine: x => -(Math.cos(Math.PI * x) - 1) / 2,\n  easeInExpo: x => (x === 0 ? 0 : Math.pow(2, 10 * x - 10)),\n  easeOutExpo: x => (x === 1 ? 1 : 1 - Math.pow(2, -10 * x)),\n  easeInOutExpo: x =>\n    x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : x < 0.5\n      ? Math.pow(2, 20 * x - 10) / 2\n      : (2 - Math.pow(2, -20 * x + 10)) / 2,\n  easeInCirc: x => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n  easeOutCirc: x => Math.sqrt(1 - Math.pow(x - 1, 2)),\n  easeInOutCirc: x =>\n    x < 0.5\n      ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n      : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\n  easeInBack: x => c3 * x * x * x - c1 * x * x,\n  easeOutBack: x => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n  easeInOutBack: x =>\n    x < 0.5\n      ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n      : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2,\n  easeInElastic: x =>\n    x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4),\n  easeOutElastic: x =>\n    x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1,\n  easeInOutElastic: x =>\n    x === 0\n      ? 0\n      : x === 1\n      ? 1\n      : x < 0.5\n      ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n      : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1,\n  easeInBounce: x => 1 - bounceOut(1 - x),\n  easeOutBounce: bounceOut,\n  easeInOutBounce: x =>\n    x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2,\n  steps,\n} as const\n","/**\n * MIT License\n * Copyright (c) Alec Larson\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst $get = Symbol.for('FluidValue.get')\nconst $observers = Symbol.for('FluidValue.observers')\n\nexport {\n  FluidValue,\n  hasFluidValue,\n  getFluidValue,\n  getFluidObservers,\n  callFluidObserver,\n  callFluidObservers,\n  // Mutations\n  setFluidGetter,\n  addFluidObserver,\n  removeFluidObserver,\n}\n\n/** Returns true if `arg` can be observed. */\nconst hasFluidValue = (arg: any): arg is FluidValue => Boolean(arg && arg[$get])\n\n/**\n * Get the current value.\n * If `arg` is not observable, `arg` is returned.\n */\nconst getFluidValue: GetFluidValue = (arg: any) =>\n  arg && arg[$get] ? arg[$get]() : arg\n\n/** Get the current observer set. Never mutate it directly! */\nconst getFluidObservers: GetFluidObservers = (target: any) =>\n  target[$observers] || null\n\n/** Send an event to an observer. */\nfunction callFluidObserver<E extends FluidEvent>(\n  observer: FluidObserver<E>,\n  event: E\n): void\n\nfunction callFluidObserver(observer: any, event: FluidEvent) {\n  if (observer.eventObserved) {\n    observer.eventObserved(event)\n  } else {\n    observer(event)\n  }\n}\n\n/** Send an event to all observers. */\nfunction callFluidObservers<E extends FluidEvent>(\n  target: FluidValue<any, E>,\n  event: E\n): void\n\nfunction callFluidObservers(target: object, event: FluidEvent): void\n\nfunction callFluidObservers(target: any, event: FluidEvent) {\n  const observers: Set<FluidObserver> = target[$observers]\n  if (observers) {\n    observers.forEach(observer => {\n      callFluidObserver(observer, event)\n    })\n  }\n}\n\ntype GetFluidValue = {\n  <T, U = never>(target: T | FluidValue<U>): Exclude<T, FluidValue> | U\n}\n\ntype GetFluidObservers = {\n  <E extends FluidEvent>(target: FluidValue<any, E>): ReadonlySet<\n    FluidObserver<E>\n  > | null\n  (target: object): ReadonlySet<FluidObserver> | null\n}\n\n/** An event sent to `FluidObserver` objects. */\nexport interface FluidEvent<T = any> {\n  type: string\n  parent: FluidValue<T>\n}\n\n/**\n * Extend this class for automatic TypeScript support when passing this\n * value to `fluids`-compatible libraries.\n */\nabstract class FluidValue<T = any, E extends FluidEvent<T> = any> {\n  // @ts-expect-error (TS 4.4)\n  private [$get]: () => T\n  // @ts-expect-error (TS 4.4)\n  private [$observers]?: Set<FluidObserver<E>>\n\n  constructor(get?: () => T) {\n    if (!get && !(get = this.get)) {\n      throw Error('Unknown getter')\n    }\n    setFluidGetter(this, get)\n  }\n\n  /** Get the current value. */\n  protected get?(): T\n  /** Called after an observer is added. */\n  protected observerAdded?(count: number, observer: FluidObserver<E>): void\n  /** Called after an observer is removed. */\n  protected observerRemoved?(count: number, observer: FluidObserver<E>): void\n}\n\n/** An observer of `FluidValue` objects. */\nexport type FluidObserver<E extends FluidEvent = any> =\n  | { eventObserved(event: E): void }\n  | { (event: E): void }\n\n/** Add the `FluidValue` type to every property. */\nexport type FluidProps<T> = T extends object\n  ? { [P in keyof T]: T[P] | FluidValue<Exclude<T[P], void>> }\n  : unknown\n\n/** Remove the `FluidValue` type from every property. */\nexport type StaticProps<T extends object> = {\n  [P in keyof T]: T[P] extends FluidValue<infer U> ? U : T[P]\n}\n\n/** Define the getter called by `getFluidValue`. */\nconst setFluidGetter = (target: object, get: () => any) =>\n  setHidden(target, $get, get)\n\n/** Observe a `fluids`-compatible object. */\nfunction addFluidObserver<T, E extends FluidEvent>(\n  target: FluidValue<T, E>,\n  observer: FluidObserver<E>\n): typeof observer\n\nfunction addFluidObserver<E extends FluidEvent>(\n  target: object,\n  observer: FluidObserver<E>\n): typeof observer\n\nfunction addFluidObserver(target: any, observer: FluidObserver) {\n  if (target[$get]) {\n    let observers: Set<FluidObserver> = target[$observers]\n    if (!observers) {\n      setHidden(target, $observers, (observers = new Set()))\n    }\n    if (!observers.has(observer)) {\n      observers.add(observer)\n      if (target.observerAdded) {\n        target.observerAdded(observers.size, observer)\n      }\n    }\n  }\n  return observer\n}\n\n/** Stop observing a `fluids`-compatible object. */\nfunction removeFluidObserver<E extends FluidEvent>(\n  target: FluidValue<any, E>,\n  observer: FluidObserver<E>\n): void\n\nfunction removeFluidObserver<E extends FluidEvent>(\n  target: object,\n  observer: FluidObserver<E>\n): void\n\nfunction removeFluidObserver(target: any, observer: FluidObserver) {\n  const observers: Set<FluidObserver> = target[$observers]\n  if (observers && observers.has(observer)) {\n    const count = observers.size - 1\n    if (count) {\n      observers.delete(observer)\n    } else {\n      target[$observers] = null\n    }\n    if (target.observerRemoved) {\n      target.observerRemoved(count, observer)\n    }\n  }\n}\n\nconst setHidden = (target: any, key: any, value: any) =>\n  Object.defineProperty(target, key, {\n    value,\n    writable: true,\n    configurable: true,\n  })\n","import { InterpolatorConfig } from '@react-spring/types'\n\nimport { getFluidValue } from './fluids'\nimport { createInterpolator } from './createInterpolator'\nimport { colorToRgba } from './colorToRgba'\nimport * as G from './globals'\nimport {\n  cssVariableRegex,\n  colorRegex,\n  unitRegex,\n  numberRegex,\n  rgbaRegex,\n} from './regexs'\nimport { variableToRgba } from './variableToRgba'\n\n// Covers color names (transparent, blue, etc.)\nlet namedColorRegex: RegExp\n\n// rgba requires that the r,g,b are integers.... so we want to round them,\n// but we *dont* want to round the opacity (4th column).\nconst rgbaRound = (_: any, p1: number, p2: number, p3: number, p4: number) =>\n  `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`\n\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *     \"rgba(123, 42, 99, 0.36)\"           // colors\n *     \"-45deg\"                            // values with units\n *     \"0 2px 2px 0px rgba(0, 0, 0, 0.12)\" // CSS box-shadows\n *     \"rotate(0deg) translate(2px, 3px)\"  // CSS transforms\n */\nexport const createStringInterpolator = (\n  config: InterpolatorConfig<string>\n) => {\n  if (!namedColorRegex)\n    namedColorRegex = G.colors\n      ? // match color names, ignore partial matches\n        new RegExp(`(${Object.keys(G.colors).join('|')})(?!\\\\w)`, 'g')\n      : // never match\n        /^\\b$/\n\n  // Convert colors to rgba(...)\n  const output = config.output.map(value => {\n    return getFluidValue(value)\n      .replace(cssVariableRegex, variableToRgba)\n      .replace(colorRegex, colorToRgba)\n      .replace(namedColorRegex, colorToRgba)\n  })\n\n  // Convert [\"1px 2px\", \"0px 0px\"] into [[1, 2], [0, 0]]\n  const keyframes = output.map(value => value.match(numberRegex)!.map(Number))\n\n  // Convert [\"1px 2px\", \"0px 0px\"] into [[1, 0], [2, 0]]\n  const outputRanges = keyframes[0].map((_, i) =>\n    keyframes.map(values => {\n      if (!(i in values)) {\n        throw Error('The arity of each \"output\" value must be equal')\n      }\n      return values[i]\n    })\n  )\n\n  // Create an interpolator for each animated number\n  const interpolators = outputRanges.map(output =>\n    createInterpolator({ ...config, output })\n  )\n\n  // Use the first `output` as a template for each call\n  return (input: number) => {\n    // Convert numbers to units if available (allows for [\"0\", \"100%\"])\n    const missingUnit =\n      !unitRegex.test(output[0]) &&\n      output.find(value => unitRegex.test(value))?.replace(numberRegex, '')\n\n    let i = 0\n    return output[0]\n      .replace(\n        numberRegex,\n        () => `${interpolators[i++](input)}${missingUnit || ''}`\n      )\n      .replace(rgbaRegex, rgbaRound)\n  }\n}\n","// Problem: https://github.com/animatedjs/animated/pull/102\n// Solution: https://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly/658662\nexport const numberRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g\n\n// Covers rgb, rgba, hsl, hsla\n// Taken from https://gist.github.com/olmokramer/82ccce673f86db7cda5e\nexport const colorRegex =\n  /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi\n\n// Gets numbers with units when specified\nexport const unitRegex = new RegExp(`(${numberRegex.source})(%|[a-z]+)`, 'i')\n\n// get values of rgba string\nexport const rgbaRegex =\n  /rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi\n\n/**\n * Parse special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n */\nexport const cssVariableRegex =\n  /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/\n","import { isSSR } from './helpers'\nimport { cssVariableRegex } from './regexs'\n\n/**\n * takes a CSS variable and attempts\n * to turn it into a RGBA value\n *\n * ```\n * 'var(--white)' => 'rgba(255,255,255,1)'\n * ```\n *\n * @param input string\n * @returns string\n */\nexport const variableToRgba = (input: string): string => {\n  const [token, fallback] = parseCSSVariable(input)\n\n  if (!token || isSSR()) {\n    return input\n  }\n\n  const value = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(token)\n\n  if (value) {\n    /**\n     * We have a valid variable returned\n     * trim and return\n     */\n    return value.trim()\n  } else if (fallback && fallback.startsWith('--')) {\n    /**\n     * fallback is something like --my-variable\n     * so we try get property value\n     */\n    const value = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(fallback)\n\n    /**\n     * if it exists, return else nothing was found so just return the input\n     */\n    if (value) {\n      return value\n    } else {\n      return input\n    }\n  } else if (fallback && cssVariableRegex.test(fallback)) {\n    /**\n     * We have a fallback and it's another CSS variable\n     */\n    return variableToRgba(fallback)\n  } else if (fallback) {\n    /**\n     * We have a fallback and it's not a CSS variable\n     */\n    return fallback\n  }\n\n  /**\n   * Nothing worked so just return the input\n   * like our other FluidValue replace functions do\n   */\n  return input\n}\n\nconst parseCSSVariable = (current: string) => {\n  const match = cssVariableRegex.exec(current)\n  if (!match) return [,]\n\n  const [, token, fallback] = match\n  return [token, fallback]\n}\n","declare const console: any\n\nexport const prefix = 'react-spring: '\n\nexport const once = <TFunc extends (...args: any) => any>(fn: TFunc) => {\n  const func = fn\n  let called = false\n\n  if (typeof func != 'function') {\n    throw new TypeError(`${prefix}once requires a function parameter`)\n  }\n\n  return (...args: any) => {\n    if (!called) {\n      func(...args)\n      called = true\n    }\n  }\n}\n\nconst warnInterpolate = once(console.warn)\nexport function deprecateInterpolate() {\n  warnInterpolate(\n    `${prefix}The \"interpolate\" function is deprecated in v9 (use \"to\" instead)`\n  )\n}\n\nconst warnDirectCall = once(console.warn)\nexport function deprecateDirectCall() {\n  warnDirectCall(\n    `${prefix}Directly calling start instead of using the api object is deprecated in v9 (use \".start\" instead), this will be removed in later 0.X.0 versions`\n  )\n}\n","import * as G from './globals'\nimport { is, isSSR } from './helpers'\nimport { cssVariableRegex } from './regexs'\n\n// Not all strings can be animated (eg: {display: \"none\"})\nexport function isAnimatedString(value: unknown): value is string {\n  return (\n    is.str(value) &&\n    (value[0] == '#' ||\n      /\\d/.test(value) ||\n      // Do not identify a CSS variable as an AnimatedString if its SSR\n      (!isSSR() && cssVariableRegex.test(value)) ||\n      value in (G.colors || {}))\n  )\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\nimport { isSSR } from '../helpers'\n\n/**\n * Use this to read layout from the DOM and synchronously\n * re-render if the isSSR returns true. Updates scheduled\n * inside `useIsomorphicLayoutEffect` will be flushed\n * synchronously in the browser, before the browser has\n * a chance to paint.\n */\nexport const useIsomorphicLayoutEffect = isSSR() ? useEffect : useLayoutEffect\n","import { useRef } from 'react'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false)\n  useIsomorphicLayoutEffect(() => {\n    isMounted.current = true\n\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n","import { useState } from 'react'\nimport { useIsMounted } from './useIsMounted'\n\n/** Return a function that re-renders this component, if still mounted */\nexport function useForceUpdate() {\n  const update = useState<any>()[1]\n  const isMounted = useIsMounted()\n  return () => {\n    if (isMounted.current) {\n      update(Math.random())\n    }\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, EffectCallback } from 'react'\n\nexport const useOnce = (effect: EffectCallback) => useEffect(effect, emptyDeps)\n\nconst emptyDeps: any[] = []\n","import { useEffect, useRef } from 'react'\n\n/** Use a value from the previous render */\nexport function usePrev<T>(value: T): T | undefined {\n  const prevRef = useRef<any>()\n  useEffect(() => {\n    prevRef.current = value\n  })\n  return prevRef.current\n}\n","import { useState } from 'react'\n\nimport { assign } from '../globals'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\n\n/**\n * Returns `boolean` or `null`, used to automatically\n * set skipAnimations to the value of the user's\n * `prefers-reduced-motion` query.\n *\n * The return value, post-effect, is the value of their prefered setting\n */\nexport const useReducedMotion = () => {\n  const [reducedMotion, setReducedMotion] = useState<boolean | null>(null)\n\n  useIsomorphicLayoutEffect(() => {\n    const mql = window.matchMedia('(prefers-reduced-motion)')\n\n    const handleMediaChange = (e: MediaQueryListEvent | MediaQueryList) => {\n      setReducedMotion(e.matches)\n\n      assign({\n        skipAnimation: e.matches,\n      })\n    }\n\n    handleMediaChange(mql)\n\n    mql.addEventListener('change', handleMediaChange)\n\n    return () => {\n      mql.removeEventListener('change', handleMediaChange)\n    }\n  }, [])\n\n  return reducedMotion\n}\n","import { defineHidden } from '@react-spring/shared'\nimport { AnimatedValue } from './AnimatedValue'\n\nconst $node: any = Symbol.for('Animated:node')\n\nexport const isAnimated = <T = any>(value: any): value is Animated<T> =>\n  !!value && value[$node] === value\n\n/** Get the owner's `Animated` node. */\nexport const getAnimated = <T = any>(owner: any): Animated<T> | undefined =>\n  owner && owner[$node]\n\n/** Set the owner's `Animated` node. */\nexport const setAnimated = (owner: any, node: Animated) =>\n  defineHidden(owner, $node, node)\n\n/** Get every `AnimatedValue` in the owner's `Animated` node. */\nexport const getPayload = (owner: any): AnimatedValue[] | undefined =>\n  owner && owner[$node] && owner[$node].getPayload()\n\nexport abstract class Animated<T = any> {\n  /** The cache of animated values */\n  protected payload?: Payload\n\n  constructor() {\n    // This makes \"isAnimated\" return true.\n    setAnimated(this, this)\n  }\n\n  /** Get the current value. Pass `true` for only animated values. */\n  abstract getValue(animated?: boolean): T\n\n  /** Set the current value. Returns `true` if the value changed. */\n  abstract setValue(value: T): boolean | void\n\n  /** Reset any animation state. */\n  abstract reset(goal?: T): void\n\n  /** Get every `AnimatedValue` used by this node. */\n  getPayload(): Payload {\n    return this.payload || []\n  }\n}\n\nexport type Payload = readonly AnimatedValue[]\n","import { is } from '@react-spring/shared'\nimport { Animated, Payload } from './Animated'\n\n/** An animated number or a native attribute value */\nexport class AnimatedValue<T = any> extends Animated {\n  done = true\n  elapsedTime!: number\n  lastPosition!: number\n  lastVelocity?: number | null\n  v0?: number | null\n  durationProgress = 0\n\n  constructor(protected _value: T) {\n    super()\n    if (is.num(this._value)) {\n      this.lastPosition = this._value\n    }\n  }\n\n  /** @internal */\n  static create(value: any) {\n    return new AnimatedValue(value)\n  }\n\n  getPayload(): Payload {\n    return [this]\n  }\n\n  getValue() {\n    return this._value\n  }\n\n  setValue(value: T, step?: number) {\n    if (is.num(value)) {\n      this.lastPosition = value\n      if (step) {\n        value = (Math.round(value / step) * step) as any\n        if (this.done) {\n          this.lastPosition = value as any\n        }\n      }\n    }\n    if (this._value === value) {\n      return false\n    }\n    this._value = value\n    return true\n  }\n\n  reset() {\n    const { done } = this\n    this.done = false\n    if (is.num(this._value)) {\n      this.elapsedTime = 0\n      this.durationProgress = 0\n      this.lastPosition = this._value\n      if (done) this.lastVelocity = null\n      this.v0 = null\n    }\n  }\n}\n","import { AnimatedValue } from './AnimatedValue'\nimport { is, createInterpolator } from '@react-spring/shared'\n\ntype Value = string | number\n\nexport class AnimatedString extends AnimatedValue<Value> {\n  protected declare _value: number\n  protected _string: string | null = null\n  protected _toString: (input: number) => string\n\n  constructor(value: string) {\n    super(0)\n    this._toString = createInterpolator({\n      output: [value, value],\n    })\n  }\n\n  /** @internal */\n  static create(value: string) {\n    return new AnimatedString(value)\n  }\n\n  getValue() {\n    const value = this._string\n    return value == null ? (this._string = this._toString(this._value)) : value\n  }\n\n  setValue(value: Value) {\n    if (is.str(value)) {\n      if (value == this._string) {\n        return false\n      }\n      this._string = value\n      this._value = 1\n    } else if (super.setValue(value)) {\n      this._string = null\n    } else {\n      return false\n    }\n    return true\n  }\n\n  reset(goal?: string) {\n    if (goal) {\n      this._toString = createInterpolator({\n        output: [this.getValue(), goal],\n      })\n    }\n    this._value = 0\n    super.reset()\n  }\n}\n","import { FluidValue } from '@react-spring/shared'\n\nexport type TreeContext = {\n  /**\n   * Any animated values found when updating the payload of an `AnimatedObject`\n   * are also added to this `Set` to be observed by an animated component.\n   */\n  dependencies: Set<FluidValue> | null\n}\n\nexport const TreeContext: TreeContext = { dependencies: null }\n","import { Lookup } from '@react-spring/types'\nimport {\n  each,\n  eachProp,\n  getFluidValue,\n  hasFluidValue,\n} from '@react-spring/shared'\nimport { Animated, isAnimated, getPayload } from './Animated'\nimport { AnimatedValue } from './AnimatedValue'\nimport { TreeContext } from './context'\n\n/** An object containing `Animated` nodes */\nexport class AnimatedObject extends Animated {\n  constructor(protected source: Lookup) {\n    super()\n    this.setValue(source)\n  }\n\n  getValue(animated?: boolean) {\n    const values: Lookup = {}\n    eachProp(this.source, (source, key) => {\n      if (isAnimated(source)) {\n        values[key] = source.getValue(animated)\n      } else if (hasFluidValue(source)) {\n        values[key] = getFluidValue(source)\n      } else if (!animated) {\n        values[key] = source\n      }\n    })\n    return values\n  }\n\n  /** Replace the raw object data */\n  setValue(source: Lookup) {\n    this.source = source\n    this.payload = this._makePayload(source)\n  }\n\n  reset() {\n    if (this.payload) {\n      each(this.payload, node => node.reset())\n    }\n  }\n\n  /** Create a payload set. */\n  protected _makePayload(source: Lookup) {\n    if (source) {\n      const payload = new Set<AnimatedValue>()\n      eachProp(source, this._addToPayload, payload)\n      return Array.from(payload)\n    }\n  }\n\n  /** Add to a payload set. */\n  protected _addToPayload(this: Set<AnimatedValue>, source: any) {\n    if (TreeContext.dependencies && hasFluidValue(source)) {\n      TreeContext.dependencies.add(source)\n    }\n    const payload = getPayload(source)\n    if (payload) {\n      each(payload, node => this.add(node))\n    }\n  }\n}\n","import { isAnimatedString } from '@react-spring/shared'\nimport { AnimatedObject } from './AnimatedObject'\nimport { AnimatedString } from './AnimatedString'\nimport { AnimatedValue } from './AnimatedValue'\n\ntype Value = number | string\ntype Source = AnimatedValue<Value>[]\n\n/** An array of animated nodes */\nexport class AnimatedArray<\n  T extends ReadonlyArray<Value> = Value[]\n> extends AnimatedObject {\n  protected declare source: Source\n  constructor(source: T) {\n    super(source)\n  }\n\n  /** @internal */\n  static create<T extends ReadonlyArray<Value>>(source: T) {\n    return new AnimatedArray(source)\n  }\n\n  getValue(): T {\n    return this.source.map(node => node.getValue()) as any\n  }\n\n  setValue(source: T) {\n    const payload = this.getPayload()\n    // Reuse the payload when lengths are equal.\n    if (source.length == payload.length) {\n      return payload.map((node, i) => node.setValue(source[i])).some(Boolean)\n    }\n    // Remake the payload when length changes.\n    super.setValue(source.map(makeAnimated))\n    return true\n  }\n}\n\nfunction makeAnimated(value: any) {\n  const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue\n  return nodeType.create(value)\n}\n","import { is, isAnimatedString } from '@react-spring/shared'\nimport { AnimatedType } from './types'\nimport { AnimatedArray } from './AnimatedArray'\nimport { AnimatedString } from './AnimatedString'\nimport { AnimatedValue } from './AnimatedValue'\nimport { getAnimated } from './Animated'\n\n/** Return the `Animated` node constructor for a given value */\nexport function getAnimatedType(value: any): AnimatedType {\n  const parentNode = getAnimated(value)\n  return parentNode\n    ? (parentNode.constructor as any)\n    : is.arr(value)\n    ? AnimatedArray\n    : isAnimatedString(value)\n    ? AnimatedString\n    : AnimatedValue\n}\n","import * as React from 'react'\nimport { forwardRef, useRef, Ref, useCallback, useEffect } from 'react'\nimport {\n  is,\n  each,\n  raf,\n  useForceUpdate,\n  useOnce,\n  FluidEvent,\n  FluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n  useIsomorphicLayoutEffect,\n} from '@react-spring/shared'\nimport { ElementType } from '@react-spring/types'\n\nimport { AnimatedObject } from './AnimatedObject'\nimport { TreeContext } from './context'\nimport { HostConfig } from './createHost'\n\nexport type AnimatableComponent = string | Exclude<ElementType, string>\n\nexport const withAnimated = (Component: any, host: HostConfig) => {\n  const hasInstance: boolean =\n    // Function components must use \"forwardRef\" to avoid being\n    // re-rendered on every animation frame.\n    !is.fun(Component) ||\n    (Component.prototype && Component.prototype.isReactComponent)\n\n  return forwardRef((givenProps: any, givenRef: Ref<any>) => {\n    const instanceRef = useRef<any>(null)\n\n    // The `hasInstance` value is constant, so we can safely avoid\n    // the `useCallback` invocation when `hasInstance` is false.\n    const ref =\n      hasInstance &&\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCallback(\n        (value: any) => {\n          instanceRef.current = updateRef(givenRef, value)\n        },\n        [givenRef]\n      )\n\n    const [props, deps] = getAnimatedState(givenProps, host)\n\n    const forceUpdate = useForceUpdate()\n\n    const callback = () => {\n      const instance = instanceRef.current\n      if (hasInstance && !instance) {\n        // Either this component was unmounted before changes could be\n        // applied, or the wrapped component forgot to forward its ref.\n        return\n      }\n\n      const didUpdate = instance\n        ? host.applyAnimatedValues(instance, props.getValue(true))\n        : false\n\n      // Re-render the component when native updates fail.\n      if (didUpdate === false) {\n        forceUpdate()\n      }\n    }\n\n    const observer = new PropsObserver(callback, deps)\n\n    const observerRef = useRef<PropsObserver>()\n    useIsomorphicLayoutEffect(() => {\n      observerRef.current = observer\n\n      // Observe the latest dependencies.\n      each(deps, dep => addFluidObserver(dep, observer))\n\n      return () => {\n        // Stop observing previous dependencies.\n        if (observerRef.current) {\n          each(observerRef.current.deps, dep =>\n            removeFluidObserver(dep, observerRef.current!)\n          )\n          raf.cancel(observerRef.current.update)\n        }\n      }\n    })\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(callback, [])\n    // Stop observing on unmount.\n    useOnce(() => () => {\n      const observer = observerRef.current!\n      each(observer.deps, dep => removeFluidObserver(dep, observer))\n    })\n\n    const usedProps = host.getComponentProps(props.getValue())\n    return <Component {...usedProps} ref={ref} />\n  })\n}\n\nclass PropsObserver {\n  constructor(readonly update: () => void, readonly deps: Set<FluidValue>) {}\n  eventObserved(event: FluidEvent) {\n    if (event.type == 'change') {\n      raf.write(this.update)\n    }\n  }\n}\n\ntype AnimatedState = [props: AnimatedObject, dependencies: Set<FluidValue>]\n\nfunction getAnimatedState(props: any, host: HostConfig): AnimatedState {\n  const dependencies = new Set<FluidValue>()\n  TreeContext.dependencies = dependencies\n\n  // Search the style for dependencies.\n  if (props.style)\n    props = {\n      ...props,\n      style: host.createAnimatedStyle(props.style),\n    }\n\n  // Search the props for dependencies.\n  props = new AnimatedObject(props)\n\n  TreeContext.dependencies = null\n  return [props, dependencies]\n}\n\nfunction updateRef<T>(ref: Ref<T>, value: T) {\n  if (ref) {\n    if (is.fun(ref)) ref(value)\n    else (ref as any).current = value\n  }\n  return value\n}\n","import { Lookup } from '@react-spring/types'\nimport { is, eachProp } from '@react-spring/shared'\nimport { AnimatableComponent, withAnimated } from './withAnimated'\nimport { Animated } from './Animated'\nimport { AnimatedObject } from './AnimatedObject'\n\nexport interface HostConfig {\n  /** Provide custom logic for native updates */\n  applyAnimatedValues: (node: any, props: Lookup) => boolean | void\n  /** Wrap the `style` prop with an animated node */\n  createAnimatedStyle: (style: Lookup) => Animated\n  /** Intercept props before they're passed to an animated component */\n  getComponentProps: (props: Lookup) => typeof props\n}\n\n// A stub type that gets replaced by @react-spring/web and others.\ntype WithAnimated = {\n  (Component: AnimatableComponent): any\n  [key: string]: any\n}\n\n// For storing the animated version on the original component\nconst cacheKey = Symbol.for('AnimatedComponent')\n\nexport const createHost = (\n  components: AnimatableComponent[] | { [key: string]: AnimatableComponent },\n  {\n    applyAnimatedValues = () => false,\n    createAnimatedStyle = style => new AnimatedObject(style),\n    getComponentProps = props => props,\n  }: Partial<HostConfig> = {}\n) => {\n  const hostConfig: HostConfig = {\n    applyAnimatedValues,\n    createAnimatedStyle,\n    getComponentProps,\n  }\n\n  const animated: WithAnimated = (Component: any) => {\n    const displayName = getDisplayName(Component) || 'Anonymous'\n\n    if (is.str(Component)) {\n      Component =\n        animated[Component] ||\n        (animated[Component] = withAnimated(Component, hostConfig))\n    } else {\n      Component =\n        Component[cacheKey] ||\n        (Component[cacheKey] = withAnimated(Component, hostConfig))\n    }\n\n    Component.displayName = `Animated(${displayName})`\n    return Component\n  }\n\n  eachProp(components, (Component, key) => {\n    if (is.arr(components)) {\n      key = getDisplayName(Component)!\n    }\n    animated[key] = animated(Component)\n  })\n\n  return {\n    animated,\n  }\n}\n\nconst getDisplayName = (arg: AnimatableComponent) =>\n  is.str(arg)\n    ? arg\n    : arg && is.str(arg.displayName)\n    ? arg.displayName\n    : (is.fun(arg) && arg.name) || null\n","import {\n  is,\n  toArray,\n  eachProp,\n  getFluidValue,\n  isAnimatedString,\n  FluidValue,\n  Globals as G,\n} from '@react-spring/shared'\nimport { AnyFn, OneOrMore, Lookup } from '@react-spring/types'\nimport { ReservedProps, ForwardProps, InferTo } from './types'\nimport type { Controller } from './Controller'\nimport type { SpringRef } from './SpringRef'\n\nexport function callProp<T>(\n  value: T,\n  ...args: T extends AnyFn ? Parameters<T> : unknown[]\n): T extends AnyFn<any, infer U> ? U : T {\n  return is.fun(value) ? value(...args) : value\n}\n\n/** Try to coerce the given value into a boolean using the given key */\nexport const matchProp = (\n  value: boolean | OneOrMore<string> | ((key: any) => boolean) | undefined,\n  key: string | undefined\n) =>\n  value === true ||\n  !!(\n    key &&\n    value &&\n    (is.fun(value) ? value(key) : toArray(value).includes(key))\n  )\n\nexport const resolveProp = <T>(\n  prop: T | Lookup<T> | undefined,\n  key: string | undefined\n) => (is.obj(prop) ? key && (prop as any)[key] : prop)\n\nexport const concatFn = <T extends AnyFn>(first: T | undefined, last: T) =>\n  first ? (...args: Parameters<T>) => (first(...args), last(...args)) : last\n\n/** Returns `true` if the given prop is having its default value set. */\nexport const hasDefaultProp = <T extends Lookup>(props: T, key: keyof T) =>\n  !is.und(getDefaultProp(props, key))\n\n/** Get the default value being set for the given `key` */\nexport const getDefaultProp = <T extends Lookup, P extends keyof T>(\n  props: T,\n  key: P\n): T[P] =>\n  props.default === true\n    ? props[key]\n    : props.default\n    ? props.default[key]\n    : undefined\n\nconst noopTransform = (value: any) => value\n\n/**\n * Extract the default props from an update.\n *\n * When the `default` prop is falsy, this function still behaves as if\n * `default: true` was used. The `default` prop is always respected when\n * truthy.\n */\nexport const getDefaultProps = <T extends Lookup>(\n  props: Lookup,\n  transform: (value: any, key: string) => any = noopTransform\n): T => {\n  let keys: readonly string[] = DEFAULT_PROPS\n  if (props.default && props.default !== true) {\n    props = props.default\n    keys = Object.keys(props)\n  }\n  const defaults: any = {}\n  for (const key of keys) {\n    const value = transform(props[key], key)\n    if (!is.und(value)) {\n      defaults[key] = value\n    }\n  }\n  return defaults\n}\n\n/**\n * These props are implicitly used as defaults when defined in a\n * declarative update (eg: render-based) or any update with `default: true`.\n *\n * Use `default: {}` or `default: false` to opt-out of these implicit defaults\n * for any given update.\n *\n * Note: These are not the only props with default values. For example, the\n * `pause`, `cancel`, and `immediate` props. But those must be updated with\n * the object syntax (eg: `default: { immediate: true }`).\n */\nexport const DEFAULT_PROPS = [\n  'config',\n  'onProps',\n  'onStart',\n  'onChange',\n  'onPause',\n  'onResume',\n  'onRest',\n] as const\n\nconst RESERVED_PROPS: {\n  [key: string]: 1 | undefined\n} = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n\n  // Transition props\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n\n  // Internal props\n  keys: 1,\n  callId: 1,\n  parentId: 1,\n}\n\n/**\n * Extract any properties whose keys are *not* reserved for customizing your\n * animations. All hooks use this function, which means `useTransition` props\n * are reserved for `useSpring` calls, etc.\n */\nfunction getForwardProps<Props extends ReservedProps>(\n  props: Props\n): ForwardProps<Props> | undefined {\n  const forward: any = {}\n\n  let count = 0\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value\n      count++\n    }\n  })\n\n  if (count) {\n    return forward\n  }\n}\n\n/**\n * Clone the given `props` and move all non-reserved props\n * into the `to` prop.\n */\nexport function inferTo<T extends object>(props: T): InferTo<T> {\n  const to = getForwardProps(props)\n  if (to) {\n    const out: any = { to }\n    eachProp(props, (val, key) => key in to || (out[key] = val))\n    return out\n  }\n  return { ...props } as any\n}\n\n// Compute the goal value, converting \"red\" to \"rgba(255, 0, 0, 1)\" in the process\nexport function computeGoal<T>(value: T | FluidValue<T>): T {\n  value = getFluidValue(value)\n  return is.arr(value)\n    ? value.map(computeGoal)\n    : isAnimatedString(value)\n    ? (G.createStringInterpolator({\n        range: [0, 1],\n        output: [value, value] as any,\n      })(1) as any)\n    : value\n}\n\nexport function hasProps(props: object) {\n  for (const _ in props) return true\n  return false\n}\n\nexport function isAsyncTo(to: any) {\n  return is.fun(to) || (is.arr(to) && is.obj(to[0]))\n}\n\n/** Detach `ctrl` from `ctrl.ref` and (optionally) the given `ref` */\nexport function detachRefs(ctrl: Controller, ref?: SpringRef) {\n  ctrl.ref?.delete(ctrl)\n  ref?.delete(ctrl)\n}\n\n/** Replace `ctrl.ref` with the given `ref` (if defined) */\nexport function replaceRef(ctrl: Controller, ref?: SpringRef) {\n  if (ref && ctrl.ref !== ref) {\n    ctrl.ref?.delete(ctrl)\n    ref.add(ctrl)\n    ctrl.ref = ref\n  }\n}\n","// The `mass` prop defaults to 1\nexport const config = {\n  default: { tension: 170, friction: 26 },\n  gentle: { tension: 120, friction: 14 },\n  wobbly: { tension: 180, friction: 12 },\n  stiff: { tension: 210, friction: 20 },\n  slow: { tension: 280, friction: 60 },\n  molasses: { tension: 280, friction: 120 },\n} as const\n","import { is, easings } from '@react-spring/shared'\nimport { EasingFunction } from '@react-spring/types'\nimport { config as configs } from './constants'\n\nconst defaults: any = {\n  ...configs.default,\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false,\n}\n\nexport class AnimationConfig {\n  /**\n   * With higher tension, the spring will resist bouncing and try harder to stop at its end value.\n   *\n   * When tension is zero, no animation occurs.\n   *\n   * @default 170\n   */\n  tension!: number\n\n  /**\n   * The damping ratio coefficient, or just the damping ratio when `speed` is defined.\n   *\n   * When `speed` is defined, this value should be between 0 and 1.\n   *\n   * Higher friction means the spring will slow down faster.\n   *\n   * @default 26\n   */\n  friction!: number\n\n  /**\n   * The natural frequency (in seconds), which dictates the number of bounces\n   * per second when no damping exists.\n   *\n   * When defined, `tension` is derived from this, and `friction` is derived\n   * from `tension` and `damping`.\n   */\n  frequency?: number\n\n  /**\n   * The damping ratio, which dictates how the spring slows down.\n   *\n   * Set to `0` to never slow down. Set to `1` to slow down without bouncing.\n   * Between `0` and `1` is for you to explore.\n   *\n   * Only works when `frequency` is defined.\n   *\n   * @default 1\n   */\n  damping!: number\n\n  /**\n   * Higher mass means more friction is required to slow down.\n   *\n   * Defaults to 1, which works fine most of the time.\n   *\n   * @default 1\n   */\n  mass!: number\n\n  /**\n   * The initial velocity of one or more values.\n   *\n   * @default 0\n   */\n  velocity: number | number[] = 0\n\n  /**\n   * The smallest velocity before the animation is considered \"not moving\".\n   *\n   * When undefined, `precision` is used instead.\n   */\n  restVelocity?: number\n\n  /**\n   * The smallest distance from a value before that distance is essentially zero.\n   *\n   * This helps in deciding when a spring is \"at rest\". The spring must be within\n   * this distance from its final value, and its velocity must be lower than this\n   * value too (unless `restVelocity` is defined).\n   *\n   * @default 0.01\n   */\n  precision?: number\n\n  /**\n   * For `duration` animations only. Note: The `duration` is not affected\n   * by this property.\n   *\n   * Defaults to `0`, which means \"start from the beginning\".\n   *\n   * Setting to `1+` makes an immediate animation.\n   *\n   * Setting to `0.5` means \"start from the middle of the easing function\".\n   *\n   * Any number `>= 0` and `<= 1` makes sense here.\n   */\n  progress?: number\n\n  /**\n   * Animation length in number of milliseconds.\n   */\n  duration?: number\n\n  /**\n   * The animation curve. Only used when `duration` is defined.\n   *\n   * Defaults to quadratic ease-in-out.\n   */\n  easing!: EasingFunction\n\n  /**\n   * Avoid overshooting by ending abruptly at the goal value.\n   *\n   * @default false\n   */\n  clamp!: boolean\n\n  /**\n   * When above zero, the spring will bounce instead of overshooting when\n   * exceeding its goal value. Its velocity is multiplied by `-1 + bounce`\n   * whenever its current value equals or exceeds its goal. For example,\n   * setting `bounce` to `0.5` chops the velocity in half on each bounce,\n   * in addition to any friction.\n   */\n  bounce?: number\n\n  /**\n   * \"Decay animations\" decelerate without an explicit goal value.\n   * Useful for scrolling animations.\n   *\n   * Use `true` for the default exponential decay factor (`0.998`).\n   *\n   * When a `number` between `0` and `1` is given, a lower number makes the\n   * animation slow down faster. And setting to `1` would make an unending\n   * animation.\n   *\n   * @default false\n   */\n  decay?: boolean | number\n\n  /**\n   * While animating, round to the nearest multiple of this number.\n   * The `from` and `to` values are never rounded, as well as any value\n   * passed to the `set` method of an animated value.\n   */\n  round?: number\n\n  constructor() {\n    Object.assign(this, defaults)\n  }\n}\n\nexport function mergeConfig(\n  config: AnimationConfig,\n  newConfig: Partial<AnimationConfig>,\n  defaultConfig?: Partial<AnimationConfig>\n): typeof config\n\nexport function mergeConfig(\n  config: any,\n  newConfig: object,\n  defaultConfig?: object\n) {\n  if (defaultConfig) {\n    defaultConfig = { ...defaultConfig }\n    sanitizeConfig(defaultConfig, newConfig)\n    newConfig = { ...defaultConfig, ...newConfig }\n  }\n\n  sanitizeConfig(config, newConfig)\n  Object.assign(config, newConfig)\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key]\n    }\n  }\n\n  let { frequency, damping } = config\n  const { mass } = config\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01\n    if (damping < 0) damping = 0\n    config.tension = Math.pow((2 * Math.PI) / frequency, 2) * mass\n    config.friction = (4 * Math.PI * damping * mass) / frequency\n  }\n\n  return config\n}\n\n// Prevent a config from accidentally overriding new props.\n// This depends on which \"config\" props take precedence when defined.\nfunction sanitizeConfig(\n  config: Partial<AnimationConfig>,\n  props: Partial<AnimationConfig>\n) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction)\n    if (\n      isTensionConfig ||\n      !is.und(props.frequency) ||\n      !is.und(props.damping) ||\n      !is.und(props.mass)\n    ) {\n      config.duration = undefined\n      config.decay = undefined\n    }\n    if (isTensionConfig) {\n      config.frequency = undefined\n    }\n  }\n}\n","import { AnimatedValue } from '@react-spring/animated'\nimport { FluidValue } from '@react-spring/shared'\nimport { AnimationConfig } from './AnimationConfig'\nimport { PickEventFns } from './types/internal'\nimport { SpringProps } from './types'\n\nconst emptyArray: readonly any[] = []\n\n/** An animation being executed by the frameloop */\nexport class Animation<T = any> {\n  changed = false\n  values: readonly AnimatedValue[] = emptyArray\n  toValues: readonly number[] | null = null\n  fromValues: readonly number[] = emptyArray\n\n  to!: T | FluidValue<T>\n  from!: T | FluidValue<T>\n  config = new AnimationConfig()\n  immediate = false\n}\n\nexport interface Animation<T> extends PickEventFns<SpringProps<T>> {}\n","import { Timeout, is, raf, Globals as G } from '@react-spring/shared'\nimport { matchProp, callProp } from './helpers'\nimport { AsyncResult, MatchProp } from './types'\nimport { RunAsyncState, RunAsyncProps } from './runAsync'\nimport {\n  AnimationResolver,\n  AnimationTarget,\n  InferProps,\n  InferState,\n} from './types/internal'\n\n// The `scheduleProps` function only handles these defaults.\ntype DefaultProps<T> = { cancel?: MatchProp<T>; pause?: MatchProp<T> }\n\ninterface ScheduledProps<T extends AnimationTarget> {\n  key?: string\n  props: InferProps<T>\n  defaultProps?: DefaultProps<InferState<T>>\n  state: RunAsyncState<T>\n  actions: {\n    pause: () => void\n    resume: () => void\n    start: (props: RunAsyncProps<T>, resolve: AnimationResolver<T>) => void\n  }\n}\n\n/**\n * This function sets a timeout if both the `delay` prop exists and\n * the `cancel` prop is not `true`.\n *\n * The `actions.start` function must handle the `cancel` prop itself,\n * but the `pause` prop is taken care of.\n */\nexport function scheduleProps<T extends AnimationTarget>(\n  callId: number,\n  { key, props, defaultProps, state, actions }: ScheduledProps<T>\n): AsyncResult<T> {\n  return new Promise((resolve, reject) => {\n    let delay: number\n    let timeout: Timeout\n\n    let cancel = matchProp(props.cancel ?? defaultProps?.cancel, key)\n    if (cancel) {\n      onStart()\n    } else {\n      // The `pause` prop updates the paused flag.\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key)\n      }\n      // The default `pause` takes precedence when true,\n      // which allows `SpringContext` to work as expected.\n      let pause = defaultProps?.pause\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key)\n      }\n\n      delay = callProp(props.delay || 0, key)\n      if (pause) {\n        state.resumeQueue.add(onResume)\n        actions.pause()\n      } else {\n        actions.resume()\n        onResume()\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume)\n      state.timeouts.delete(timeout)\n      timeout.cancel()\n      // Cache the remaining delay.\n      delay = timeout.time - raf.now()\n    }\n\n    function onResume() {\n      if (delay > 0 && !G.skipAnimation) {\n        state.delayed = true\n        timeout = raf.setTimeout(onStart, delay)\n        state.pauseQueue.add(onPause)\n        state.timeouts.add(timeout)\n      } else {\n        onStart()\n      }\n    }\n\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false\n      }\n\n      state.pauseQueue.delete(onPause)\n      state.timeouts.delete(timeout)\n\n      // Maybe cancelled during its delay.\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true\n      }\n\n      try {\n        actions.start({ ...props, callId, cancel }, resolve)\n      } catch (err) {\n        reject(err)\n      }\n    }\n  })\n}\n","import { AnimationResult } from './types'\nimport { Readable } from './types/internal'\n\n/** @internal */\nexport const getCombinedResult = <T extends Readable>(\n  target: T,\n  results: AnimationResult<T>[]\n): AnimationResult<T> =>\n  results.length == 1\n    ? results[0]\n    : results.some(result => result.cancelled)\n    ? getCancelledResult(target.get())\n    : results.every(result => result.noop)\n    ? getNoopResult(target.get())\n    : getFinishedResult(\n        target.get(),\n        results.every(result => result.finished)\n      )\n\n/** No-op results are for updates that never start an animation. */\nexport const getNoopResult = (value: any) => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false,\n})\n\nexport const getFinishedResult = (\n  value: any,\n  finished: boolean,\n  cancelled = false\n) => ({\n  value,\n  finished,\n  cancelled,\n})\n\nexport const getCancelledResult = (value: any) => ({\n  value,\n  cancelled: true,\n  finished: false,\n})\n","import {\n  is,\n  raf,\n  flush,\n  eachProp,\n  Timeout,\n  Globals as G,\n} from '@react-spring/shared'\nimport { Falsy } from '@react-spring/types'\n\nimport { getDefaultProps } from './helpers'\nimport { AnimationTarget, InferState, InferProps } from './types/internal'\nimport { AnimationResult, AsyncResult, SpringChain, SpringToFn } from './types'\nimport { getCancelledResult, getFinishedResult } from './AnimationResult'\n\ntype AsyncTo<T> = SpringChain<T> | SpringToFn<T>\n\n/** @internal */\nexport type RunAsyncProps<T extends AnimationTarget = any> = InferProps<T> & {\n  callId: number\n  parentId?: number\n  cancel: boolean\n  to?: any\n}\n\n/** @internal */\nexport interface RunAsyncState<T extends AnimationTarget = any> {\n  paused: boolean\n  pauseQueue: Set<() => void>\n  resumeQueue: Set<() => void>\n  timeouts: Set<Timeout>\n  delayed?: boolean\n  asyncId?: number\n  asyncTo?: AsyncTo<InferState<T>>\n  promise?: AsyncResult<T>\n  cancelId?: number\n}\n\n/**\n * Start an async chain or an async script.\n *\n * Always call `runAsync` in the action callback of a `scheduleProps` call.\n *\n * The `T` parameter can be a set of animated values (as an object type)\n * or a primitive type for a single animated value.\n */\nexport function runAsync<T extends AnimationTarget>(\n  to: AsyncTo<InferState<T>>,\n  props: RunAsyncProps<T>,\n  state: RunAsyncState<T>,\n  target: T\n): AsyncResult<T> {\n  const { callId, parentId, onRest } = props\n  const { asyncTo: prevTo, promise: prevPromise } = state\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise!\n  }\n\n  return (state.promise = (async () => {\n    state.asyncId = callId\n    state.asyncTo = to\n\n    // The default props of any `animate` calls.\n    const defaultProps = getDefaultProps<InferProps<T>>(props, (value, key) =>\n      // The `onRest` prop is only called when the `runAsync` promise is resolved.\n      key === 'onRest' ? undefined : value\n    )\n\n    let preventBail!: () => void\n    let bail: (error: any) => void\n\n    // This promise is rejected when the animation is interrupted.\n    const bailPromise = new Promise<void>(\n      (resolve, reject) => ((preventBail = resolve), (bail = reject))\n    )\n\n    const bailIfEnded = (bailSignal: BailSignal) => {\n      const bailResult =\n        // The `cancel` prop or `stop` method was used.\n        (callId <= (state.cancelId || 0) && getCancelledResult(target)) ||\n        // The async `to` prop was replaced.\n        (callId !== state.asyncId && getFinishedResult(target, false))\n\n      if (bailResult) {\n        bailSignal.result = bailResult\n\n        // Reject the `bailPromise` to ensure the `runAsync` promise\n        // is not relying on the caller to rethrow the error for us.\n        bail(bailSignal)\n        throw bailSignal\n      }\n    }\n\n    const animate: any = (arg1: any, arg2?: any) => {\n      // Create the bail signal outside the returned promise,\n      // so the generated stack trace is relevant.\n      const bailSignal = new BailSignal()\n      const skipAnimationSignal = new SkipAnimationSignal()\n\n      return (async () => {\n        if (G.skipAnimation) {\n          /**\n           * We need to stop animations if `skipAnimation`\n           * is set in the Globals\n           *\n           */\n          stopAsync(state)\n\n          // create the rejection error that's handled gracefully\n          skipAnimationSignal.result = getFinishedResult(target, false)\n          bail(skipAnimationSignal)\n          throw skipAnimationSignal\n        }\n\n        bailIfEnded(bailSignal)\n\n        const props: any = is.obj(arg1) ? { ...arg1 } : { ...arg2, to: arg1 }\n        props.parentId = callId\n\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value\n          }\n        })\n\n        const result = await target.start(props)\n        bailIfEnded(bailSignal)\n\n        if (state.paused) {\n          await new Promise<void>(resume => {\n            state.resumeQueue.add(resume)\n          })\n        }\n\n        return result\n      })()\n    }\n\n    let result!: AnimationResult<T>\n\n    if (G.skipAnimation) {\n      /**\n       * We need to stop animations if `skipAnimation`\n       * is set in the Globals\n       */\n      stopAsync(state)\n      return getFinishedResult(target, false)\n    }\n\n    try {\n      let animating!: Promise<void>\n\n      // Async sequence\n      if (is.arr(to)) {\n        animating = (async (queue: any[]) => {\n          for (const props of queue) {\n            await animate(props)\n          }\n        })(to)\n      }\n\n      // Async script\n      else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)))\n      }\n\n      await Promise.all([animating.then(preventBail), bailPromise])\n      result = getFinishedResult(target.get(), true, false)\n\n      // Bail handling\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result\n      } else if (err instanceof SkipAnimationSignal) {\n        result = err.result\n      } else {\n        throw err\n      }\n\n      // Reset the async state.\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId\n        state.asyncTo = parentId ? prevTo : undefined\n        state.promise = parentId ? prevPromise : undefined\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item)\n      })\n    }\n\n    return result\n  })())\n}\n\n/** Stop the current `runAsync` call with `finished: false` (or with `cancelled: true` when `cancelId` is defined) */\nexport function stopAsync(state: RunAsyncState, cancelId?: number | Falsy) {\n  flush(state.timeouts, t => t.cancel())\n  state.pauseQueue.clear()\n  state.resumeQueue.clear()\n  state.asyncId = state.asyncTo = state.promise = undefined\n  if (cancelId) state.cancelId = cancelId\n}\n\n/** This error is thrown to signal an interrupted async animation. */\nexport class BailSignal extends Error {\n  result!: AnimationResult\n  constructor() {\n    super(\n      'An async animation has been interrupted. You see this error because you ' +\n        'forgot to use `await` or `.catch(...)` on its returned promise.'\n    )\n  }\n}\n\nexport class SkipAnimationSignal extends Error {\n  result!: AnimationResult\n\n  constructor() {\n    super('SkipAnimationSignal')\n  }\n}\n","import {\n  deprecateInterpolate,\n  frameLoop,\n  FluidValue,\n  Globals as G,\n  callFluidObservers,\n} from '@react-spring/shared'\nimport { InterpolatorArgs } from '@react-spring/types'\nimport { getAnimated } from '@react-spring/animated'\n\nimport { Interpolation } from './Interpolation'\n\nexport const isFrameValue = (value: any): value is FrameValue =>\n  value instanceof FrameValue\n\nlet nextId = 1\n\n/**\n * A kind of `FluidValue` that manages an `AnimatedValue` node.\n *\n * Its underlying value can be accessed and even observed.\n */\nexport abstract class FrameValue<T = any> extends FluidValue<\n  T,\n  FrameValue.Event<T>\n> {\n  readonly id = nextId++\n\n  abstract key?: string\n  abstract get idle(): boolean\n\n  protected _priority = 0\n\n  get priority() {\n    return this._priority\n  }\n  set priority(priority: number) {\n    if (this._priority != priority) {\n      this._priority = priority\n      this._onPriorityChange(priority)\n    }\n  }\n\n  /** Get the current value */\n  get(): T {\n    const node = getAnimated(this)\n    return node && node.getValue()\n  }\n\n  /** Create a spring that maps our value to another value */\n  to<Out>(...args: InterpolatorArgs<T, Out>) {\n    return G.to(this, args) as Interpolation<T, Out>\n  }\n\n  /** @deprecated Use the `to` method instead. */\n  interpolate<Out>(...args: InterpolatorArgs<T, Out>) {\n    deprecateInterpolate()\n    return G.to(this, args) as Interpolation<T, Out>\n  }\n\n  toJSON() {\n    return this.get()\n  }\n\n  protected observerAdded(count: number) {\n    if (count == 1) this._attach()\n  }\n\n  protected observerRemoved(count: number) {\n    if (count == 0) this._detach()\n  }\n\n  /** @internal */\n  abstract advance(dt: number): void\n\n  /** @internal */\n  abstract eventObserved(_event: FrameValue.Event): void\n\n  /** Called when the first child is added. */\n  protected _attach() {}\n\n  /** Called when the last child is removed. */\n  protected _detach() {}\n\n  /** Tell our children about our new value */\n  protected _onChange(value: T, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle,\n    })\n  }\n\n  /** Tell our children about our new priority */\n  protected _onPriorityChange(priority: number) {\n    if (!this.idle) {\n      frameLoop.sort(this)\n    }\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority,\n    })\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport declare namespace FrameValue {\n  /** A parent changed its value */\n  interface ChangeEvent<T = any> {\n    parent: FrameValue<T>\n    type: 'change'\n    value: T\n    idle: boolean\n  }\n\n  /** A parent changed its priority */\n  interface PriorityEvent<T = any> {\n    parent: FrameValue<T>\n    type: 'priority'\n    priority: number\n  }\n\n  /** A parent is done animating */\n  interface IdleEvent<T = any> {\n    parent: FrameValue<T>\n    type: 'idle'\n  }\n\n  /** Events sent to children of `FrameValue` objects */\n  export type Event<T = any> = ChangeEvent<T> | PriorityEvent<T> | IdleEvent<T>\n}\n","/** The property symbol of the current animation phase. */\nconst $P = Symbol.for('SpringPhase')\n\nconst HAS_ANIMATED = 1\nconst IS_ANIMATING = 2\nconst IS_PAUSED = 4\n\n/** Returns true if the `target` has ever animated. */\nexport const hasAnimated = (target: any) => (target[$P] & HAS_ANIMATED) > 0\n\n/** Returns true if the `target` is animating (even if paused). */\nexport const isAnimating = (target: any) => (target[$P] & IS_ANIMATING) > 0\n\n/** Returns true if the `target` is paused (even if idle). */\nexport const isPaused = (target: any) => (target[$P] & IS_PAUSED) > 0\n\n/** Set the active bit of the `target` phase. */\nexport const setActiveBit = (target: any, active: boolean) =>\n  active\n    ? (target[$P] |= IS_ANIMATING | HAS_ANIMATED)\n    : (target[$P] &= ~IS_ANIMATING)\n\nexport const setPausedBit = (target: any, paused: boolean) =>\n  paused ? (target[$P] |= IS_PAUSED) : (target[$P] &= ~IS_PAUSED)\n","import {\n  is,\n  raf,\n  each,\n  isEqual,\n  toArray,\n  eachProp,\n  frameLoop,\n  flushCalls,\n  getFluidValue,\n  isAnimatedString,\n  FluidValue,\n  Globals as G,\n  callFluidObservers,\n  hasFluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n  getFluidObservers,\n} from '@react-spring/shared'\nimport {\n  Animated,\n  AnimatedValue,\n  AnimatedString,\n  getPayload,\n  getAnimated,\n  setAnimated,\n  getAnimatedType,\n} from '@react-spring/animated'\nimport { Lookup } from '@react-spring/types'\n\nimport { Animation } from './Animation'\nimport { mergeConfig } from './AnimationConfig'\nimport { scheduleProps } from './scheduleProps'\nimport { runAsync, RunAsyncState, RunAsyncProps, stopAsync } from './runAsync'\nimport {\n  callProp,\n  computeGoal,\n  matchProp,\n  inferTo,\n  getDefaultProps,\n  getDefaultProp,\n  isAsyncTo,\n  resolveProp,\n} from './helpers'\nimport { FrameValue, isFrameValue } from './FrameValue'\nimport {\n  isAnimating,\n  isPaused,\n  setPausedBit,\n  hasAnimated,\n  setActiveBit,\n} from './SpringPhase'\nimport {\n  AnimationRange,\n  AnimationResolver,\n  EventKey,\n  PickEventFns,\n} from './types/internal'\nimport { AsyncResult, SpringUpdate, VelocityProp, SpringProps } from './types'\nimport {\n  getCombinedResult,\n  getCancelledResult,\n  getFinishedResult,\n  getNoopResult,\n} from './AnimationResult'\n\ndeclare const console: any\n\ninterface DefaultSpringProps<T>\n  extends Pick<SpringProps<T>, 'pause' | 'cancel' | 'immediate' | 'config'>,\n    PickEventFns<SpringProps<T>> {}\n\n/**\n * Only numbers, strings, and arrays of numbers/strings are supported.\n * Non-animatable strings are also supported.\n */\nexport class SpringValue<T = any> extends FrameValue<T> {\n  /** The property name used when `to` or `from` is an object. Useful when debugging too. */\n  key?: string\n\n  /** The animation state */\n  animation = new Animation<T>()\n\n  /** The queue of pending props */\n  queue?: SpringUpdate<T>[]\n\n  /** Some props have customizable default values */\n  defaultProps: DefaultSpringProps<T> = {}\n\n  /** The state for `runAsync` calls */\n  protected _state: RunAsyncState<SpringValue<T>> = {\n    paused: false,\n    delayed: false,\n    pauseQueue: new Set(),\n    resumeQueue: new Set(),\n    timeouts: new Set(),\n  }\n\n  /** The promise resolvers of pending `start` calls */\n  protected _pendingCalls = new Set<AnimationResolver<this>>()\n\n  /** The counter for tracking `scheduleProps` calls */\n  protected _lastCallId = 0\n\n  /** The last `scheduleProps` call that changed the `to` prop */\n  protected _lastToId = 0\n\n  protected _memoizedDuration = 0\n\n  constructor(from: Exclude<T, object>, props?: SpringUpdate<T>)\n  constructor(props?: SpringUpdate<T>)\n  constructor(arg1?: any, arg2?: any) {\n    super()\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? { ...arg1 } : { ...arg2, from: arg1 }\n      if (is.und(props.default)) {\n        props.default = true\n      }\n      this.start(props)\n    }\n  }\n\n  /** Equals true when not advancing on each frame. */\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this)\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to) as T\n  }\n\n  get velocity(): VelocityProp<T> {\n    const node = getAnimated(this)!\n    return (\n      node instanceof AnimatedValue\n        ? node.lastVelocity || 0\n        : node.getPayload().map(node => node.lastVelocity || 0)\n    ) as any\n  }\n\n  /**\n   * When true, this value has been animated at least once.\n   */\n  get hasAnimated() {\n    return hasAnimated(this)\n  }\n\n  /**\n   * When true, this value has an unfinished animation,\n   * which is either active or paused.\n   */\n  get isAnimating() {\n    return isAnimating(this)\n  }\n\n  /**\n   * When true, all current and future animations are paused.\n   */\n  get isPaused() {\n    return isPaused(this)\n  }\n\n  /**\n   *\n   *\n   */\n  get isDelayed() {\n    return this._state.delayed\n  }\n\n  /** Advance the current animation by a number of milliseconds */\n  advance(dt: number) {\n    let idle = true\n    let changed = false\n\n    const anim = this.animation\n    let { toValues } = anim\n    const { config } = anim\n\n    const payload = getPayload(anim.to)\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to)) as any\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return\n\n      const to =\n        // Animated strings always go from 0 to 1.\n        node.constructor == AnimatedString\n          ? 1\n          : payload\n          ? payload[i].lastPosition\n          : toValues![i]\n\n      let finished = anim.immediate\n      let position = to\n\n      if (!finished) {\n        position = node.lastPosition\n\n        // Loose springs never move.\n        if (config.tension <= 0) {\n          node.done = true\n          return\n        }\n\n        let elapsed = (node.elapsedTime += dt)\n        const from = anim.fromValues[i]\n\n        const v0 =\n          node.v0 != null\n            ? node.v0\n            : (node.v0 = is.arr(config.velocity)\n                ? config.velocity[i]\n                : config.velocity)\n\n        let velocity: number\n\n        /** The smallest distance from a value before being treated like said value. */\n        /**\n         * TODO: make this value ~0.0001 by default in next breaking change\n         * for more info see – https://github.com/pmndrs/react-spring/issues/1389\n         */\n        const precision =\n          config.precision ||\n          (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001))\n\n        // Duration easing\n        if (!is.und(config.duration)) {\n          let p = 1\n          if (config.duration > 0) {\n            /**\n             * Here we check if the duration has changed in the config\n             * and if so update the elapsed time to the percentage\n             * of completition so there is no jank in the animation\n             * https://github.com/pmndrs/react-spring/issues/1163\n             */\n            if (this._memoizedDuration !== config.duration) {\n              // update the memoized version to the new duration\n              this._memoizedDuration = config.duration\n\n              // if the value has started animating we need to update it\n              if (node.durationProgress > 0) {\n                // set elapsed time to be the same percentage of progress as the previous duration\n                node.elapsedTime = config.duration * node.durationProgress\n                // add the delta so the below updates work as expected\n                elapsed = node.elapsedTime += dt\n              }\n            }\n\n            // calculate the new progress\n            p = (config.progress || 0) + elapsed / this._memoizedDuration\n            // p is clamped between 0-1\n            p = p > 1 ? 1 : p < 0 ? 0 : p\n            // store our new progress\n            node.durationProgress = p\n          }\n\n          position = from + config.easing(p) * (to - from)\n          velocity = (position - node.lastPosition) / dt\n\n          finished = p == 1\n        }\n\n        // Decay easing\n        else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay\n          const e = Math.exp(-(1 - decay) * elapsed)\n\n          position = from + (v0 / (1 - decay)) * (1 - e)\n          finished = Math.abs(node.lastPosition - position) <= precision\n\n          // derivative of position\n          velocity = v0 * e\n        }\n\n        // Spring easing\n        else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity\n\n          /** The velocity at which movement is essentially none */\n          const restVelocity = config.restVelocity || precision / 10\n\n          // Bouncing is opt-in (not to be confused with overshooting)\n          const bounceFactor = config.clamp ? 0 : config.bounce!\n          const canBounce = !is.und(bounceFactor)\n\n          /** When `true`, the value is increasing over time */\n          const isGrowing = from == to ? node.v0 > 0 : from < to\n\n          /** When `true`, the velocity is considered moving */\n          let isMoving!: boolean\n\n          /** When `true`, the velocity is being deflected or clamped */\n          let isBouncing = false\n\n          const step = 1 // 1ms\n          const numSteps = Math.ceil(dt / step)\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity\n\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision\n              if (finished) {\n                break\n              }\n            }\n\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing\n\n              // Invert the velocity with a magnitude, or clamp it.\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor\n                position = to\n              }\n            }\n\n            const springForce = -config.tension * 0.000001 * (position - to)\n            const dampingForce = -config.friction * 0.001 * velocity\n            const acceleration = (springForce + dampingForce) / config.mass // pt/ms^2\n\n            velocity = velocity + acceleration * step // pt/ms\n            position = position + velocity * step\n          }\n        }\n\n        node.lastVelocity = velocity\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this)\n          finished = true\n        }\n      }\n\n      // Parent springs must finish before their children can.\n      if (payload && !payload[i].done) {\n        finished = false\n      }\n\n      if (finished) {\n        node.done = true\n      } else {\n        idle = false\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true\n      }\n    })\n\n    const node = getAnimated(this)!\n    /**\n     * Get the node's current value, this will be different\n     * to anim.to when config.decay is true\n     */\n    const currVal = node.getValue()\n    if (idle) {\n      // get our final fluid val from the anim.to\n      const finalVal = getFluidValue(anim.to)\n      /**\n       * check if they're not equal, or if they're\n       * change and if there's no config.decay set\n       */\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        // set the value to anim.to\n        node.setValue(finalVal)\n        this._onChange(finalVal)\n      } else if (changed && config.decay) {\n        /**\n         * if it's changed but there is a config.decay,\n         * just call _onChange with currrent value\n         */\n        this._onChange(currVal)\n      }\n      // call stop because the spring has stopped.\n      this._stop()\n    } else if (changed) {\n      /**\n       * if the spring has changed, but is not idle,\n       * just call the _onChange handler\n       */\n      this._onChange(currVal)\n    }\n  }\n\n  /** Set the current value, while stopping the current animation */\n  set(value: T | FluidValue<T>) {\n    raf.batchedUpdates(() => {\n      this._stop()\n\n      // These override the current value and goal value that may have\n      // been updated by `onRest` handlers in the `_stop` call above.\n      this._focus(value)\n      this._set(value)\n    })\n    return this\n  }\n\n  /**\n   * Freeze the active animation in time, as well as any updates merged\n   * before `resume` is called.\n   */\n  pause() {\n    this._update({ pause: true })\n  }\n\n  /** Resume the animation if paused. */\n  resume() {\n    this._update({ pause: false })\n  }\n\n  /** Skip to the end of the current animation. */\n  finish() {\n    if (isAnimating(this)) {\n      const { to, config } = this.animation\n      raf.batchedUpdates(() => {\n        // Ensure the \"onStart\" and \"onRest\" props are called.\n        this._onStart()\n\n        // Jump to the goal value, except for decay animations\n        // which have an undefined goal value.\n        if (!config.decay) {\n          this._set(to, false)\n        }\n\n        this._stop()\n      })\n    }\n    return this\n  }\n\n  /** Push props into the pending queue. */\n  update(props: SpringUpdate<T>) {\n    const queue = this.queue || (this.queue = [])\n    queue.push(props)\n    return this\n  }\n\n  /**\n   * Update this value's animation using the queue of pending props,\n   * and unpause the current animation (if one is frozen).\n   *\n   * When arguments are passed, a new animation is created, and the\n   * queued animations are left alone.\n   */\n  start(): AsyncResult<this>\n\n  start(props: SpringUpdate<T>): AsyncResult<this>\n\n  start(to: T, props?: SpringProps<T>): AsyncResult<this>\n\n  start(to?: any, arg2?: any) {\n    let queue: SpringUpdate<T>[]\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : { ...arg2, to }]\n    } else {\n      queue = this.queue || []\n      this.queue = []\n    }\n\n    return Promise.all(\n      queue.map(props => {\n        const up = this._update(props)\n        return up\n      })\n    ).then(results => getCombinedResult(this, results))\n  }\n\n  /**\n   * Stop the current animation, and cancel any delayed updates.\n   *\n   * Pass `true` to call `onRest` with `cancelled: true`.\n   */\n  stop(cancel?: boolean) {\n    const { to } = this.animation\n\n    // The current value becomes the goal value.\n    this._focus(this.get())\n\n    stopAsync(this._state, cancel && this._lastCallId)\n    raf.batchedUpdates(() => this._stop(to, cancel))\n\n    return this\n  }\n\n  /** Restart the animation. */\n  reset() {\n    this._update({ reset: true })\n  }\n\n  /** @internal */\n  eventObserved(event: FrameValue.Event) {\n    if (event.type == 'change') {\n      this._start()\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1\n    }\n  }\n\n  /**\n   * Parse the `to` and `from` range from the given `props` object.\n   *\n   * This also ensures the initial value is available to animated components\n   * during the render phase.\n   */\n  protected _prepareNode(props: {\n    to?: any\n    from?: any\n    reverse?: boolean\n    default?: any\n  }) {\n    const key = this.key || ''\n\n    let { to, from } = props\n\n    to = is.obj(to) ? to[key] : to\n    if (to == null || isAsyncTo(to)) {\n      to = undefined\n    }\n\n    from = is.obj(from) ? from[key] : from\n    if (from == null) {\n      from = undefined\n    }\n\n    // Create the range now to avoid \"reverse\" logic.\n    const range = { to, from }\n\n    // Before ever animating, this method ensures an `Animated` node\n    // exists and keeps its value in sync with the \"from\" prop.\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to]\n\n      from = getFluidValue(from)\n      if (!is.und(from)) {\n        this._set(from)\n      }\n      // Use the \"to\" value if our node is undefined.\n      else if (!getAnimated(this)) {\n        this._set(to)\n      }\n    }\n\n    return range\n  }\n\n  /** Every update is processed by this method before merging. */\n  protected _update(\n    { ...props }: SpringProps<T>,\n    isLoop?: boolean\n  ): AsyncResult<SpringValue<T>> {\n    const { key, defaultProps } = this\n\n    // Update the default props immediately.\n    if (props.default)\n      Object.assign(\n        defaultProps,\n        getDefaultProps(props, (value, prop) =>\n          /^on/.test(prop) ? resolveProp(value, key) : value\n        )\n      )\n\n    mergeActiveFn(this, props, 'onProps')\n    sendEvent(this, 'onProps', props, this)\n\n    // Ensure the initial value can be accessed by animated components.\n    const range = this._prepareNode(props)\n\n    if (Object.isFrozen(this)) {\n      throw Error(\n        'Cannot animate a `SpringValue` object that is frozen. ' +\n          'Did you forget to pass your component to `animated(...)` before animating its props?'\n      )\n    }\n\n    const state = this._state\n\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true)\n            flushCalls(state.pauseQueue)\n            sendEvent(\n              this,\n              'onPause',\n              getFinishedResult(this, checkFinished(this, this.animation.to)),\n              this\n            )\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false)\n            if (isAnimating(this)) {\n              this._resume()\n            }\n            flushCalls(state.resumeQueue)\n            sendEvent(\n              this,\n              'onResume',\n              getFinishedResult(this, checkFinished(this, this.animation.to)),\n              this\n            )\n          }\n        },\n        start: this._merge.bind(this, range),\n      },\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props)\n        if (nextProps) {\n          return this._update(nextProps, true)\n        }\n      }\n      return result\n    })\n  }\n\n  /** Merge props into the current animation */\n  protected _merge(\n    range: AnimationRange<T>,\n    props: RunAsyncProps<SpringValue<T>>,\n    resolve: AnimationResolver<SpringValue<T>>\n  ): void {\n    // The \"cancel\" prop cancels all pending delays and it forces the\n    // active animation to stop where it is.\n    if (props.cancel) {\n      this.stop(true)\n      return resolve(getCancelledResult(this))\n    }\n\n    /** The \"to\" prop is defined. */\n    const hasToProp = !is.und(range.to)\n\n    /** The \"from\" prop is defined. */\n    const hasFromProp = !is.und(range.from)\n\n    // Avoid merging other props if implicitly prevented, except\n    // when both the \"to\" and \"from\" props are undefined.\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId\n      } else {\n        return resolve(getCancelledResult(this))\n      }\n    }\n\n    const { key, defaultProps, animation: anim } = this\n    const { to: prevTo, from: prevFrom } = anim\n    let { to = prevTo, from = prevFrom } = range\n\n    // Focus the \"from\" value if changing without a \"to\" value.\n    // For default updates, do this only if no \"to\" value exists.\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from\n    }\n\n    // Flip the current range if \"reverse\" is true.\n    if (props.reverse) [to, from] = [from, to]\n\n    /** The \"from\" value is changing. */\n    const hasFromChanged = !isEqual(from, prevFrom)\n\n    if (hasFromChanged) {\n      anim.from = from\n    }\n\n    // Coerce \"from\" into a static value.\n    from = getFluidValue(from)\n\n    /** The \"to\" value is changing. */\n    const hasToChanged = !isEqual(to, prevTo)\n\n    if (hasToChanged) {\n      this._focus(to)\n    }\n\n    /** The \"to\" prop is async. */\n    const hasAsyncTo = isAsyncTo(props.to)\n\n    const { config } = anim\n    const { decay, velocity } = config\n\n    // Reset to default velocity when goal values are defined.\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0\n    }\n\n    // The \"runAsync\" function treats the \"config\" prop as a default,\n    // so we must avoid merging it when the \"to\" prop is async.\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(\n        config,\n        callProp(props.config, key!),\n        // Avoid calling the same \"config\" prop twice.\n        props.config !== defaultProps.config\n          ? callProp(defaultProps.config, key!)\n          : void 0\n      )\n    }\n\n    // This instance might not have its Animated node yet. For example,\n    // the constructor can be given props without a \"to\" or \"from\" value.\n    let node = getAnimated(this)\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true))\n    }\n\n    /** When true, start at the \"from\" value. */\n    const reset =\n      // When `reset` is undefined, the `from` prop implies `reset: true`,\n      // except for declarative updates. When `reset` is defined, there\n      // must exist a value to animate from.\n      is.und(props.reset)\n        ? hasFromProp && !props.default\n        : !is.und(from) && matchProp(props.reset, key)\n\n    // The current value, where the animation starts from.\n    const value = reset ? (from as T) : this.get()\n\n    // The animation ends at this value, unless \"to\" is fluid.\n    const goal = computeGoal<any>(to)\n\n    // Only specific types can be animated to/from.\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal)\n\n    // When true, the value changes instantly on the next frame.\n    const immediate =\n      !hasAsyncTo &&\n      (!isAnimatable ||\n        matchProp(defaultProps.immediate || props.immediate, key))\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to)\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal)!\n        } else\n          throw Error(\n            `Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`\n          )\n      }\n    }\n\n    // The type of Animated node for the goal value.\n    const goalType = node.constructor\n\n    // When the goal value is fluid, we don't know if its value\n    // will change before the next animation frame, so it always\n    // starts the animation to be safe.\n    let started = hasFluidValue(to)\n    let finished = false\n\n    if (!started) {\n      // When true, the current value has probably changed.\n      const hasValueChanged = reset || (!hasAnimated(this) && hasFromChanged)\n\n      // When the \"to\" value or current value are changed,\n      // start animating if not already finished.\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal)\n        started = !finished\n      }\n\n      // Changing \"decay\" or \"velocity\" starts the animation.\n      if (\n        (!isEqual(anim.immediate, immediate) && !immediate) ||\n        !isEqual(config.decay, decay) ||\n        !isEqual(config.velocity, velocity)\n      ) {\n        started = true\n      }\n    }\n\n    // Was the goal value set to the current value while animating?\n    if (finished && isAnimating(this)) {\n      // If the first frame has passed, allow the animation to\n      // overshoot instead of stopping abruptly.\n      if (anim.changed && !reset) {\n        started = true\n      }\n      // Stop the animation before its first frame.\n      else if (!started) {\n        this._stop(prevTo)\n      }\n    }\n\n    if (!hasAsyncTo) {\n      // Make sure our \"toValues\" are updated even if our previous\n      // \"to\" prop is a fluid value whose current value is also ours.\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload()\n        anim.toValues = hasFluidValue(to)\n          ? null\n          : goalType == AnimatedString\n          ? [1]\n          : toArray(goal)\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate\n\n        // Ensure the immediate goal is used as from value.\n        if (!immediate && !reset) {\n          this._set(prevTo)\n        }\n      }\n\n      if (started) {\n        const { onRest } = anim\n\n        // Set the active handlers when an animation starts.\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type))\n\n        const result = getFinishedResult(this, checkFinished(this, prevTo))\n        flushCalls(this._pendingCalls, result)\n        this._pendingCalls.add(resolve)\n\n        if (anim.changed)\n          raf.batchedUpdates(() => {\n            // Ensure `onStart` can be called after a reset.\n            anim.changed = !reset\n\n            // Call the active `onRest` handler from the interrupted animation.\n            onRest?.(result, this)\n\n            // Notify the default `onRest` of the reset, but wait for the\n            // first frame to pass before sending an `onStart` event.\n            if (reset) {\n              callProp(defaultProps.onRest, result)\n            }\n            // Call the active `onStart` handler here since the first frame\n            // has already passed, which means this is a goal update and not\n            // an entirely new animation.\n            else {\n              anim.onStart?.(result, this)\n            }\n          })\n      }\n    }\n\n    if (reset) {\n      this._set(value)\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this))\n    }\n\n    // Start an animation\n    else if (started) {\n      this._start()\n    }\n\n    // Postpone promise resolution until the animation is finished,\n    // so that no-op updates still resolve at the expected time.\n    else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve)\n    }\n\n    // Resolve our promise immediately.\n    else {\n      resolve(getNoopResult(value))\n    }\n  }\n\n  /** Update the `animation.to` value, which might be a `FluidValue` */\n  protected _focus(value: T | FluidValue<T>) {\n    const anim = this.animation\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach()\n      }\n      anim.to = value\n      if (getFluidObservers(this)) {\n        this._attach()\n      }\n    }\n  }\n\n  protected _attach() {\n    let priority = 0\n\n    const { to } = this.animation\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this)\n      if (isFrameValue(to)) {\n        priority = to.priority + 1\n      }\n    }\n\n    this.priority = priority\n  }\n\n  protected _detach() {\n    const { to } = this.animation\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this)\n    }\n  }\n\n  /**\n   * Update the current value from outside the frameloop,\n   * and return the `Animated` node.\n   */\n  protected _set(arg: T | FluidValue<T>, idle = true): Animated | undefined {\n    const value = getFluidValue(arg)\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this)\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        // Create a new node or update the existing node.\n        const nodeType = getAnimatedType(value)\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value))\n        } else {\n          oldNode.setValue(value)\n        }\n        // Never emit a \"change\" event for the initial value.\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle)\n          })\n        }\n      }\n    }\n    return getAnimated(this)\n  }\n\n  protected _onStart() {\n    const anim = this.animation\n    if (!anim.changed) {\n      anim.changed = true\n      sendEvent(\n        this,\n        'onStart',\n        getFinishedResult(this, checkFinished(this, anim.to)),\n        this\n      )\n    }\n  }\n\n  protected _onChange(value: T, idle?: boolean) {\n    if (!idle) {\n      this._onStart()\n      callProp(this.animation.onChange, value, this)\n    }\n    callProp(this.defaultProps.onChange, value, this)\n    super._onChange(value, idle)\n  }\n\n  // This method resets the animation state (even if already animating) to\n  // ensure the latest from/to range is used, and it also ensures this spring\n  // is added to the frameloop.\n  protected _start() {\n    const anim = this.animation\n\n    // Reset the state of each Animated node.\n    getAnimated(this)!.reset(getFluidValue(anim.to))\n\n    // Use the current values as the from values.\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition)\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true)\n      if (!isPaused(this)) {\n        this._resume()\n      }\n    }\n  }\n\n  protected _resume() {\n    // The \"skipAnimation\" global avoids the frameloop.\n    if (G.skipAnimation) {\n      this.finish()\n    } else {\n      frameLoop.start(this)\n    }\n  }\n\n  /**\n   * Exit the frameloop and notify `onRest` listeners.\n   *\n   * Always wrap `_stop` calls with `batchedUpdates`.\n   */\n  protected _stop(goal?: any, cancel?: boolean) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false)\n\n      const anim = this.animation\n      each(anim.values, node => {\n        node.done = true\n      })\n\n      // These active handlers must be reset to undefined or else\n      // they could be called while idle. But keep them defined\n      // when the goal value is dynamic.\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this,\n      })\n\n      const result = cancel\n        ? getCancelledResult(this.get())\n        : getFinishedResult(this.get(), checkFinished(this, goal ?? anim.to))\n\n      flushCalls(this._pendingCalls, result)\n      if (anim.changed) {\n        anim.changed = false\n        sendEvent(this, 'onRest', result, this)\n      }\n    }\n  }\n}\n\n/** Returns true when the current value and goal value are equal. */\nfunction checkFinished<T>(target: SpringValue<T>, to: T | FluidValue<T>) {\n  const goal = computeGoal(to)\n  const value = computeGoal(target.get())\n  return isEqual(value, goal)\n}\n\nexport function createLoopUpdate<T>(\n  props: T & { loop?: any; to?: any; from?: any; reverse?: any },\n  loop = props.loop,\n  to = props.to\n): T | undefined {\n  const loopRet = callProp(loop)\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet)\n    const reverse = (overrides || props).reverse\n    const reset = !overrides || overrides.reset\n    return createUpdate({\n      ...props,\n      loop,\n\n      // Avoid updating default props when looping.\n      default: false,\n\n      // Never loop the `pause` prop.\n      pause: undefined,\n\n      // For the \"reverse\" prop to loop as expected, the \"to\" prop\n      // must be undefined. The \"reverse\" prop is ignored when the\n      // \"to\" prop is an array or function.\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n\n      // Ignore the \"from\" prop except on reset.\n      from: reset ? props.from : undefined,\n      reset,\n\n      // The \"loop\" prop can return a \"useSpring\" props object to\n      // override any of the original props.\n      ...overrides,\n    })\n  }\n}\n\n/**\n * Return a new object based on the given `props`.\n *\n * - All non-reserved props are moved into the `to` prop object.\n * - The `keys` prop is set to an array of affected keys,\n *   or `null` if all keys are affected.\n */\nexport function createUpdate(props: any) {\n  const { to, from } = (props = inferTo(props))\n\n  // Collect the keys affected by this update.\n  const keys = new Set<string>()\n\n  if (is.obj(to)) findDefined(to, keys)\n  if (is.obj(from)) findDefined(from, keys)\n\n  // The \"keys\" prop helps in applying updates to affected keys only.\n  props.keys = keys.size ? Array.from(keys) : null\n\n  return props\n}\n\n/**\n * A modified version of `createUpdate` meant for declarative APIs.\n */\nexport function declareUpdate(props: any) {\n  const update = createUpdate(props)\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update)\n  }\n  return update\n}\n\n/** Find keys with defined values */\nfunction findDefined(values: Lookup, keys: Set<string>) {\n  eachProp(values, (value, key) => value != null && keys.add(key as any))\n}\n\n/** Event props with \"active handler\" support */\nconst ACTIVE_EVENTS = [\n  'onStart',\n  'onRest',\n  'onChange',\n  'onPause',\n  'onResume',\n] as const\n\nfunction mergeActiveFn<T, P extends EventKey>(\n  target: SpringValue<T>,\n  props: SpringProps<T>,\n  type: P\n) {\n  target.animation[type] =\n    props[type] !== getDefaultProp(props, type)\n      ? resolveProp<any>(props[type], target.key)\n      : undefined\n}\n\ntype EventArgs<T, P extends EventKey> = Parameters<\n  Extract<SpringProps<T>[P], Function>\n>\n\n/** Call the active handler first, then the default handler. */\nfunction sendEvent<T, P extends EventKey>(\n  target: SpringValue<T>,\n  type: P,\n  ...args: EventArgs<T, P>\n) {\n  target.animation[type]?.(...(args as [any, any]))\n  target.defaultProps[type]?.(...(args as [any, any]))\n}\n","import { OneOrMore, UnknownProps, Lookup, Falsy } from '@react-spring/types'\nimport {\n  is,\n  raf,\n  each,\n  noop,\n  flush,\n  toArray,\n  eachProp,\n  flushCalls,\n  addFluidObserver,\n  FluidObserver,\n} from '@react-spring/shared'\n\nimport { getDefaultProp } from './helpers'\nimport { FrameValue } from './FrameValue'\nimport type { SpringRef } from './SpringRef'\nimport { SpringValue, createLoopUpdate, createUpdate } from './SpringValue'\nimport { getCancelledResult, getCombinedResult } from './AnimationResult'\nimport { runAsync, RunAsyncState, stopAsync } from './runAsync'\nimport { scheduleProps } from './scheduleProps'\nimport {\n  AnimationResult,\n  AsyncResult,\n  ControllerFlushFn,\n  ControllerUpdate,\n  OnChange,\n  OnRest,\n  OnStart,\n  SpringChain,\n  SpringToFn,\n  SpringValues,\n} from './types'\n\n/** Events batched by the `Controller` class */\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'] as const\n\nlet nextId = 1\n\n/** Queue of pending updates for a `Controller` instance. */\nexport interface ControllerQueue<State extends Lookup = Lookup>\n  extends Array<\n    ControllerUpdate<State, any> & {\n      /** The keys affected by this update. When null, all keys are affected. */\n      keys: string[] | null\n    }\n  > {}\n\nexport class Controller<State extends Lookup = Lookup> {\n  readonly id = nextId++\n\n  /** The animated values */\n  springs: SpringValues<State> = {} as any\n\n  /** The queue of props passed to the `update` method. */\n  queue: ControllerQueue<State> = []\n\n  /**\n   * The injected ref. When defined, render-based updates are pushed\n   * onto the `queue` instead of being auto-started.\n   */\n  ref?: SpringRef<State>\n\n  /** Custom handler for flushing update queues */\n  protected _flush?: ControllerFlushFn<this>\n\n  /** These props are used by all future spring values */\n  protected _initialProps?: Lookup\n\n  /** The counter for tracking `scheduleProps` calls */\n  protected _lastAsyncId = 0\n\n  /** The values currently being animated */\n  protected _active = new Set<FrameValue>()\n\n  /** The values that changed recently */\n  protected _changed = new Set<FrameValue>()\n\n  /** Equals false when `onStart` listeners can be called */\n  protected _started = false\n\n  private _item?: any\n\n  /** State used by the `runAsync` function */\n  protected _state: RunAsyncState<this> = {\n    paused: false,\n    pauseQueue: new Set(),\n    resumeQueue: new Set(),\n    timeouts: new Set(),\n  }\n\n  /** The event queues that are flushed once per frame maximum */\n  protected _events = {\n    onStart: new Map<\n      OnStart<SpringValue<State>, Controller<State>, any>,\n      AnimationResult\n    >(),\n    onChange: new Map<\n      OnChange<SpringValue<State>, Controller<State>, any>,\n      AnimationResult\n    >(),\n    onRest: new Map<\n      OnRest<SpringValue<State>, Controller<State>, any>,\n      AnimationResult\n    >(),\n  }\n\n  constructor(\n    props?: ControllerUpdate<State> | null,\n    flush?: ControllerFlushFn<any>\n  ) {\n    this._onFrame = this._onFrame.bind(this)\n    if (flush) {\n      this._flush = flush\n    }\n    if (props) {\n      this.start({ default: true, ...props })\n    }\n  }\n\n  /**\n   * Equals `true` when no spring values are in the frameloop, and\n   * no async animation is currently active.\n   */\n  get idle() {\n    return (\n      !this._state.asyncTo &&\n      Object.values(this.springs as Lookup<SpringValue>).every(spring => {\n        return spring.idle && !spring.isDelayed && !spring.isPaused\n      })\n    )\n  }\n\n  get item() {\n    return this._item\n  }\n\n  set item(item) {\n    this._item = item\n  }\n\n  /** Get the current values of our springs */\n  get(): State & UnknownProps {\n    const values: any = {}\n    this.each((spring, key) => (values[key] = spring.get()))\n    return values\n  }\n\n  /** Set the current values without animating. */\n  set(values: Partial<State>) {\n    for (const key in values) {\n      const value = values[key]\n      if (!is.und(value)) {\n        this.springs[key].set(value)\n      }\n    }\n  }\n\n  /** Push an update onto the queue of each value. */\n  update(props: ControllerUpdate<State> | Falsy) {\n    if (props) {\n      this.queue.push(createUpdate(props))\n    }\n    return this\n  }\n\n  /**\n   * Start the queued animations for every spring, and resolve the returned\n   * promise once all queued animations have finished or been cancelled.\n   *\n   * When you pass a queue (instead of nothing), that queue is used instead of\n   * the queued animations added with the `update` method, which are left alone.\n   */\n  start(props?: OneOrMore<ControllerUpdate<State>> | null): AsyncResult<this> {\n    let { queue } = this as any\n    if (props) {\n      queue = toArray<any>(props).map(createUpdate)\n    } else {\n      this.queue = []\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue)\n    }\n\n    prepareKeys(this, queue)\n    return flushUpdateQueue(this, queue)\n  }\n\n  /** Stop all animations. */\n  stop(): this\n  /** Stop animations for the given keys. */\n  stop(keys: OneOrMore<string>): this\n  /** Cancel all animations. */\n  stop(cancel: boolean): this\n  /** Cancel animations for the given keys. */\n  stop(cancel: boolean, keys: OneOrMore<string>): this\n  /** Stop some or all animations. */\n  stop(keys?: OneOrMore<string>): this\n  /** Cancel some or all animations. */\n  stop(cancel: boolean, keys?: OneOrMore<string>): this\n  /** @internal */\n  stop(arg?: boolean | OneOrMore<string>, keys?: OneOrMore<string>) {\n    if (arg !== !!arg) {\n      keys = arg as OneOrMore<string>\n    }\n    if (keys) {\n      const springs = this.springs as Lookup<SpringValue>\n      each(toArray(keys) as string[], key => springs[key].stop(!!arg))\n    } else {\n      stopAsync(this._state, this._lastAsyncId)\n      this.each(spring => spring.stop(!!arg))\n    }\n    return this\n  }\n\n  /** Freeze the active animation in time */\n  pause(keys?: OneOrMore<string>) {\n    if (is.und(keys)) {\n      this.start({ pause: true })\n    } else {\n      const springs = this.springs as Lookup<SpringValue>\n      each(toArray(keys) as string[], key => springs[key].pause())\n    }\n    return this\n  }\n\n  /** Resume the animation if paused. */\n  resume(keys?: OneOrMore<string>) {\n    if (is.und(keys)) {\n      this.start({ pause: false })\n    } else {\n      const springs = this.springs as Lookup<SpringValue>\n      each(toArray(keys) as string[], key => springs[key].resume())\n    }\n    return this\n  }\n\n  /** Call a function once per spring value */\n  each(iterator: (spring: SpringValue, key: string) => void) {\n    eachProp(this.springs, iterator as any)\n  }\n\n  /** @internal Called at the end of every animation frame */\n  protected _onFrame() {\n    const { onStart, onChange, onRest } = this._events\n\n    const active = this._active.size > 0\n    const changed = this._changed.size > 0\n\n    if ((active && !this._started) || (changed && !this._started)) {\n      this._started = true\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get()\n        onStart(result, this, this._item)\n      })\n    }\n\n    const idle = !active && this._started\n    const values = changed || (idle && onRest.size) ? this.get() : null\n\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values\n        onChange(result, this, this._item)\n      })\n    }\n\n    // The \"onRest\" queue is only flushed when all springs are idle.\n    if (idle) {\n      this._started = false\n      flush(onRest, ([onRest, result]) => {\n        result.value = values\n        onRest(result, this, this._item)\n      })\n    }\n  }\n\n  /** @internal */\n  eventObserved(event: FrameValue.Event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent)\n      if (!event.idle) {\n        this._active.add(event.parent)\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent)\n    }\n    // The `onFrame` handler runs when a parent is changed or idle.\n    else return\n    raf.onFrame(this._onFrame)\n  }\n}\n\n/**\n * Warning: Props might be mutated.\n */\nexport function flushUpdateQueue(\n  ctrl: Controller<any>,\n  queue: ControllerQueue\n) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(\n    results => getCombinedResult(ctrl, results)\n  )\n}\n\n/**\n * Warning: Props might be mutated.\n *\n * Process a single set of props using the given controller.\n *\n * The returned promise resolves to `true` once the update is\n * applied and any animations it starts are finished without being\n * stopped or cancelled.\n */\nexport async function flushUpdate(\n  ctrl: Controller<any>,\n  props: ControllerQueue[number],\n  isLoop?: boolean\n): AsyncResult {\n  const { keys, to, from, loop, onRest, onResolve } = props\n  const defaults = is.obj(props.default) && props.default\n\n  // Looping must be handled in this function, or else the values\n  // would end up looping out-of-sync in many common cases.\n  if (loop) {\n    props.loop = false\n  }\n\n  // Treat false like null, which gets ignored.\n  if (to === false) props.to = null\n  if (from === false) props.from = null\n\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined\n  if (asyncTo) {\n    props.to = undefined\n    props.onRest = undefined\n    if (defaults) {\n      defaults.onRest = undefined\n    }\n  }\n  // For certain events, use batching to prevent multiple calls per frame.\n  // However, batching is avoided when the `to` prop is async, because any\n  // event props are used as default props instead.\n  else {\n    each(BATCHED_EVENTS, key => {\n      const handler: any = props[key]\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key]\n        props[key] = (({ finished, cancelled }: AnimationResult) => {\n          const result = queue.get(handler)\n          if (result) {\n            if (!finished) result.finished = false\n            if (cancelled) result.cancelled = true\n          } else {\n            // The \"value\" is set before the \"handler\" is called.\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false,\n            })\n          }\n        }) as any\n\n        // Avoid using a batched `handler` as a default prop.\n        if (defaults) {\n          defaults[key] = props[key] as any\n        }\n      }\n    })\n  }\n\n  const state = ctrl['_state']\n\n  // Pause/resume the `asyncTo` when `props.pause` is true/false.\n  if (props.pause === !state.paused) {\n    state.paused = props.pause\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue)\n  }\n  // When a controller is paused, its values are also paused.\n  else if (state.paused) {\n    props.pause = true\n  }\n\n  const promises: AsyncResult[] = (keys || Object.keys(ctrl.springs)).map(key =>\n    ctrl.springs[key]!.start(props as any)\n  )\n\n  const cancel =\n    props.cancel === true || getDefaultProp(props, 'cancel') === true\n\n  if (asyncTo || (cancel && state.asyncId)) {\n    promises.push(\n      scheduleProps(++ctrl['_lastAsyncId'], {\n        props,\n        state,\n        actions: {\n          pause: noop,\n          resume: noop,\n          start(props, resolve) {\n            if (cancel) {\n              stopAsync(state, ctrl['_lastAsyncId'])\n              resolve(getCancelledResult(ctrl))\n            } else {\n              props.onRest = onRest\n              resolve(\n                runAsync(\n                  asyncTo as SpringChain | SpringToFn,\n                  props,\n                  state,\n                  ctrl\n                )\n              )\n            }\n          },\n        },\n      })\n    )\n  }\n\n  // Pause after updating each spring, so they can be resumed separately\n  // and so their default `pause` and `cancel` props are updated.\n  if (state.paused) {\n    // Ensure `this` must be resumed before the returned promise\n    // is resolved and before starting the next `loop` repetition.\n    await new Promise<void>(resume => {\n      state.resumeQueue.add(resume)\n    })\n  }\n\n  const result = getCombinedResult<any>(ctrl, await Promise.all(promises))\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to)\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps])\n      return flushUpdate(ctrl, nextProps, true)\n    }\n  }\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item))\n  }\n  return result\n}\n\n/**\n * From an array of updates, get the map of `SpringValue` objects\n * by their keys. Springs are created when any update wants to\n * animate a new key.\n *\n * Springs created by `getSprings` are neither cached nor observed\n * until they're given to `setSprings`.\n */\nexport function getSprings<State extends Lookup>(\n  ctrl: Controller<Lookup<any>>,\n  props?: OneOrMore<ControllerUpdate<State>>\n) {\n  const springs = { ...ctrl.springs }\n  if (props) {\n    each(toArray(props), (props: any) => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props)\n      }\n      if (!is.obj(props.to)) {\n        // Avoid passing array/function to each spring.\n        props = { ...props, to: undefined }\n      }\n      prepareSprings(springs as any, props, key => {\n        return createSpring(key)\n      })\n    })\n  }\n  setSprings(ctrl, springs)\n  return springs\n}\n\n/**\n * Tell a controller to manage the given `SpringValue` objects\n * whose key is not already in use.\n */\nexport function setSprings(\n  ctrl: Controller<Lookup<any>>,\n  springs: SpringValues<UnknownProps>\n) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring\n      addFluidObserver(spring, ctrl)\n    }\n  })\n}\n\nfunction createSpring(key: string, observer?: FluidObserver<FrameValue.Event>) {\n  const spring = new SpringValue()\n  spring.key = key\n  if (observer) {\n    addFluidObserver(spring, observer)\n  }\n  return spring\n}\n\n/**\n * Ensure spring objects exist for each defined key.\n *\n * Using the `props`, the `Animated` node of each `SpringValue` may\n * be created or updated.\n */\nfunction prepareSprings(\n  springs: SpringValues,\n  props: ControllerQueue[number],\n  create: (key: string) => SpringValue\n) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key))\n      spring['_prepareNode'](props)\n    })\n  }\n}\n\n/**\n * Ensure spring objects exist for each defined key, and attach the\n * `ctrl` to them for observation.\n *\n * The queue is expected to contain `createUpdate` results.\n */\nfunction prepareKeys(ctrl: Controller<any>, queue: ControllerQueue[number][]) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl)\n    })\n  })\n}\n","import * as React from 'react'\nimport { useContext, PropsWithChildren } from 'react'\nimport { useMemoOne } from '@react-spring/shared'\n\n/**\n * This context affects all new and existing `SpringValue` objects\n * created with the hook API or the renderprops API.\n */\nexport interface SpringContext {\n  /** Pause all new and existing animations. */\n  pause?: boolean\n  /** Force all new and existing animations to be immediate. */\n  immediate?: boolean\n}\n\nexport const SpringContext = ({\n  children,\n  ...props\n}: PropsWithChildren<SpringContext>) => {\n  const inherited = useContext(ctx)\n\n  // Inherited values are dominant when truthy.\n  const pause = props.pause || !!inherited.pause,\n    immediate = props.immediate || !!inherited.immediate\n\n  // Memoize the context to avoid unwanted renders.\n  props = useMemoOne(() => ({ pause, immediate }), [pause, immediate])\n\n  const { Provider } = ctx\n  return <Provider value={props}>{children}</Provider>\n}\n\nconst ctx = makeContext(SpringContext, {} as SpringContext)\n\n// Allow `useContext(SpringContext)` in TypeScript.\nSpringContext.Provider = ctx.Provider\nSpringContext.Consumer = ctx.Consumer\n\n/** Make the `target` compatible with `useContext` */\nfunction makeContext<T>(target: any, init: T): React.Context<T> {\n  Object.assign(target, React.createContext(init))\n  target.Provider._context = target\n  target.Consumer._context = target\n  return target\n}\n","import { useEffect, useRef, useState } from 'react'\n\ntype Cache<T> = {\n  inputs?: any[]\n  result?: T\n}\n\n// TODO: remove once merged (https://github.com/alexreardon/use-memo-one/pull/10)\nexport function useMemoOne<T>(getResult: () => T, inputs?: any[]): T {\n  const [initial] = useState(\n    (): Cache<T> => ({\n      inputs,\n      result: getResult(),\n    })\n  )\n\n  const committed = useRef<Cache<T>>()\n  const prevCache = committed.current\n\n  let cache = prevCache\n  if (cache) {\n    const useCache = Boolean(\n      inputs && cache.inputs && areInputsEqual(inputs, cache.inputs)\n    )\n    if (!useCache) {\n      cache = {\n        inputs,\n        result: getResult(),\n      }\n    }\n  } else {\n    cache = initial\n  }\n\n  useEffect(() => {\n    committed.current = cache\n    if (prevCache == initial) {\n      initial.inputs = initial.result = undefined\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cache])\n\n  return cache.result!\n}\n\nfunction areInputsEqual(next: any[], prev: any[]) {\n  if (next.length !== prev.length) {\n    return false\n  }\n  for (let i = 0; i < next.length; i++) {\n    if (next[i] !== prev[i]) {\n      return false\n    }\n  }\n  return true\n}\n","import { each, is, deprecateDirectCall } from '@react-spring/shared'\nimport { Lookup, Falsy, OneOrMore } from '@react-spring/types'\nimport { AsyncResult, ControllerUpdate } from './types'\nimport { Controller } from './Controller'\n\nexport interface ControllerUpdateFn<State extends Lookup = Lookup> {\n  (i: number, ctrl: Controller<State>): ControllerUpdate<State> | Falsy\n}\n\nexport interface SpringRef<State extends Lookup = Lookup> {\n  (props?: ControllerUpdate<State> | ControllerUpdateFn<State>): AsyncResult<\n    Controller<State>\n  >[]\n  current: Controller<State>[]\n\n  /** Add a controller to this ref */\n  add(ctrl: Controller<State>): void\n\n  /** Remove a controller from this ref */\n  delete(ctrl: Controller<State>): void\n\n  /** Pause all animations. */\n  pause(): this\n  /** Pause animations for the given keys. */\n  pause(keys: OneOrMore<string>): this\n  /** Pause some or all animations. */\n  pause(keys?: OneOrMore<string>): this\n\n  /** Resume all animations. */\n  resume(): this\n  /** Resume animations for the given keys. */\n  resume(keys: OneOrMore<string>): this\n  /** Resume some or all animations. */\n  resume(keys?: OneOrMore<string>): this\n\n  /** Update the state of each controller without animating. */\n  set(values: Partial<State>): void\n  /** Update the state of each controller without animating based on their passed state. */\n  set(values: (index: number, ctrl: Controller<State>) => Partial<State>): void\n\n  /** Start the queued animations of each controller. */\n  start(): AsyncResult<Controller<State>>[]\n  /** Update every controller with the same props. */\n  start(props: ControllerUpdate<State>): AsyncResult<Controller<State>>[]\n  /** Update controllers based on their state. */\n  start(props: ControllerUpdateFn<State>): AsyncResult<Controller<State>>[]\n  /** Start animating each controller. */\n  start(\n    props?: ControllerUpdate<State> | ControllerUpdateFn<State>\n  ): AsyncResult<Controller<State>>[]\n\n  /** Stop all animations. */\n  stop(): this\n  /** Stop animations for the given keys. */\n  stop(keys: OneOrMore<string>): this\n  /** Cancel all animations. */\n  stop(cancel: boolean): this\n  /** Cancel animations for the given keys. */\n  stop(cancel: boolean, keys: OneOrMore<string>): this\n  /** Stop some or all animations. */\n  stop(keys?: OneOrMore<string>): this\n  /** Cancel some or all animations. */\n  stop(cancel: boolean, keys?: OneOrMore<string>): this\n\n  /** Add the same props to each controller's update queue. */\n  update(props: ControllerUpdate<State>): this\n  /** Generate separate props for each controller's update queue. */\n  update(props: ControllerUpdateFn<State>): this\n  /** Add props to each controller's update queue. */\n  update(props: ControllerUpdate<State> | ControllerUpdateFn<State>): this\n\n  _getProps(\n    arg: ControllerUpdate<State> | ControllerUpdateFn<State>,\n    ctrl: Controller<State>,\n    index: number\n  ): ControllerUpdate<State> | Falsy\n}\n\nexport const SpringRef = <\n  State extends Lookup = Lookup\n>(): SpringRef<State> => {\n  const current: Controller<State>[] = []\n\n  const SpringRef: SpringRef<State> = function (props) {\n    deprecateDirectCall()\n\n    const results: AsyncResult[] = []\n\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start())\n      } else {\n        const update = _getProps(props, ctrl, i)\n        if (update) {\n          results.push(ctrl.start(update))\n        }\n      }\n    })\n\n    return results\n  }\n\n  SpringRef.current = current\n\n  /** Add a controller to this ref */\n  SpringRef.add = function (ctrl: Controller<State>) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl)\n    }\n  }\n\n  /** Remove a controller from this ref */\n  SpringRef.delete = function (ctrl: Controller<State>) {\n    const i = current.indexOf(ctrl)\n    if (~i) current.splice(i, 1)\n  }\n\n  /** Pause all animations. */\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments))\n    return this\n  }\n\n  /** Resume all animations. */\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments))\n    return this\n  }\n\n  /** Update the state of each controller without animating. */\n  SpringRef.set = function (\n    values:\n      | Partial<State>\n      | ((i: number, ctrl: Controller<State>) => Partial<State>)\n  ) {\n    each(current, (ctrl, i) => {\n      const update = is.fun(values) ? values(i, ctrl) : values\n      if (update) {\n        ctrl.set(update)\n      }\n    })\n  }\n\n  SpringRef.start = function (props?: object | ControllerUpdateFn<State>) {\n    const results: AsyncResult[] = []\n\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start())\n      } else {\n        const update = this._getProps(props, ctrl, i)\n        if (update) {\n          results.push(ctrl.start(update))\n        }\n      }\n    })\n\n    return results\n  }\n\n  /** Stop all animations. */\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments))\n    return this\n  }\n\n  SpringRef.update = function (props: object | ControllerUpdateFn<State>) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)))\n    return this\n  }\n\n  /** Overridden by `useTrail` to manipulate props */\n  const _getProps = function (\n    arg: ControllerUpdate<State> | ControllerUpdateFn<State>,\n    ctrl: Controller<State>,\n    index: number\n  ) {\n    return is.fun(arg) ? arg(index, ctrl) : arg\n  }\n\n  SpringRef._getProps = _getProps\n\n  return SpringRef\n}\n","import { useContext, useMemo, useRef } from 'react'\nimport { Lookup } from '@react-spring/types'\nimport {\n  is,\n  each,\n  usePrev,\n  useOnce,\n  useForceUpdate,\n  useIsomorphicLayoutEffect,\n} from '@react-spring/shared'\n\nimport {\n  ControllerFlushFn,\n  ControllerUpdate,\n  PickAnimated,\n  SpringValues,\n} from '../types'\nimport { UseSpringProps } from './useSpring'\nimport { declareUpdate } from '../SpringValue'\nimport {\n  Controller,\n  getSprings,\n  flushUpdateQueue,\n  setSprings,\n} from '../Controller'\nimport { hasProps, detachRefs, replaceRef } from '../helpers'\nimport { SpringContext } from '../SpringContext'\nimport { SpringRef } from '../SpringRef'\nimport type { SpringRef as SpringRefType } from '../SpringRef'\n\nexport type UseSpringsProps<State extends Lookup = Lookup> = unknown &\n  ControllerUpdate<State> & {\n    ref?: SpringRefType<State>\n  }\n\n/**\n * When the `deps` argument exists, the `props` function is called whenever\n * the `deps` change on re-render.\n *\n * Without the `deps` argument, the `props` function is only called once.\n */\nexport function useSprings<Props extends UseSpringProps>(\n  length: number,\n  props: (i: number, ctrl: Controller) => Props,\n  deps?: readonly any[]\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup<any>\n    ? [SpringValues<State>[], SpringRefType<State>]\n    : never\n  : never\n\n/**\n * Animations are updated on re-render.\n */\nexport function useSprings<Props extends UseSpringsProps>(\n  length: number,\n  props: Props[] & UseSpringsProps<PickAnimated<Props>>[]\n): SpringValues<PickAnimated<Props>>[]\n\n/**\n * When the `deps` argument exists, you get the `update` and `stop` function.\n */\nexport function useSprings<Props extends UseSpringsProps>(\n  length: number,\n  props: Props[] & UseSpringsProps<PickAnimated<Props>>[],\n  deps: readonly any[] | undefined\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup<any>\n    ? [SpringValues<State>[], SpringRefType<State>]\n    : never\n  : never\n\n/** @internal */\nexport function useSprings(\n  length: number,\n  props: any[] | ((i: number, ctrl: Controller) => any),\n  deps?: readonly any[]\n): any {\n  const propsFn = is.fun(props) && props\n  if (propsFn && !deps) deps = []\n\n  // Create a local ref if a props function or deps array is ever passed.\n  const ref = useMemo(\n    () => (propsFn || arguments.length == 3 ? SpringRef() : void 0),\n    []\n  )\n\n  interface State {\n    // The controllers used for applying updates.\n    ctrls: Controller[]\n    // The queue of changes to make on commit.\n    queue: Array<() => void>\n    // The flush function used by controllers.\n    flush: ControllerFlushFn\n  }\n\n  // Set to 0 to prevent sync flush.\n  const layoutId = useRef(0)\n  const forceUpdate = useForceUpdate()\n\n  // State is updated on commit.\n  const state = useMemo(\n    (): State => ({\n      ctrls: [],\n      queue: [],\n      flush(ctrl, updates) {\n        const springs = getSprings(ctrl, updates)\n\n        // Flushing is postponed until the component's commit phase\n        // if a spring was created since the last commit.\n        const canFlushSync =\n          layoutId.current > 0 &&\n          !state.queue.length &&\n          !Object.keys(springs).some(key => !ctrl.springs[key])\n\n        return canFlushSync\n          ? flushUpdateQueue(ctrl, updates)\n          : new Promise<any>(resolve => {\n              setSprings(ctrl, springs)\n              state.queue.push(() => {\n                resolve(flushUpdateQueue(ctrl, updates))\n              })\n              forceUpdate()\n            })\n      },\n    }),\n    []\n  )\n\n  const ctrls = useRef([...state.ctrls])\n  const updates: any[] = []\n\n  // Cache old controllers to dispose in the commit phase.\n  const prevLength = usePrev(length) || 0\n\n  // Create new controllers when \"length\" increases, and destroy\n  // the affected controllers when \"length\" decreases.\n  useMemo(() => {\n    // Clean up any unused controllers\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref)\n      ctrl.stop(true)\n    })\n    ctrls.current.length = length\n\n    declareUpdates(prevLength, length)\n  }, [length])\n\n  // Update existing controllers when \"deps\" are changed.\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length))\n  }, deps)\n\n  /** Fill the `updates` array with declarative updates for the given index range. */\n  function declareUpdates(startIndex: number, endIndex: number) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl =\n        ctrls.current[i] ||\n        (ctrls.current[i] = new Controller(null, state.flush))\n\n      const update: UseSpringProps<any> = propsFn\n        ? propsFn(i, ctrl)\n        : (props as any)[i]\n\n      if (update) {\n        updates[i] = declareUpdate(update)\n      }\n    }\n  }\n\n  // New springs are created during render so users can pass them to\n  // their animated components, but new springs aren't cached until the\n  // commit phase (see the `useIsomorphicLayoutEffect` callback below).\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]))\n\n  const context = useContext(SpringContext)\n  const prevContext = usePrev(context)\n  const hasContext = context !== prevContext && hasProps(context)\n\n  useIsomorphicLayoutEffect(() => {\n    layoutId.current++\n\n    // Replace the cached controllers.\n    state.ctrls = ctrls.current\n\n    // Flush the commit queue.\n    const { queue } = state\n    if (queue.length) {\n      state.queue = []\n      each(queue, cb => cb())\n    }\n\n    // Update existing controllers.\n    each(ctrls.current, (ctrl, i) => {\n      // Attach the controller to the local ref.\n      ref?.add(ctrl)\n\n      // Update the default props.\n      if (hasContext) {\n        ctrl.start({ default: context })\n      }\n\n      // Apply updates created during render.\n      const update = updates[i]\n      if (update) {\n        // Update the injected ref if needed.\n        replaceRef(ctrl, update.ref)\n\n        // When an injected ref exists, the update is postponed\n        // until the ref has its `start` method called.\n        if (ctrl.ref) {\n          ctrl.queue.push(update)\n        } else {\n          ctrl.start(update)\n        }\n      }\n    })\n  })\n\n  // Cancel the animations of all controllers on unmount.\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true))\n  })\n\n  // Return a deep copy of the `springs` array so the caller can\n  // safely mutate it during render.\n  const values = springs.map(x => ({ ...x }))\n\n  return ref ? [values, ref] : values\n}\n","import { Lookup, Remap } from '@react-spring/types'\nimport { is } from '@react-spring/shared'\n\nimport { ControllerUpdate, PickAnimated, SpringValues } from '../types'\nimport { Valid } from '../types/common'\nimport { SpringRef } from '../SpringRef'\nimport { useSprings } from './useSprings'\n\n/**\n * The props that `useSpring` recognizes.\n */\nexport type UseSpringProps<Props extends object = any> = unknown &\n  PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? Remap<\n        ControllerUpdate<State> & {\n          /**\n           * Used to access the imperative API.\n           *\n           * When defined, the render animation won't auto-start.\n           */\n          ref?: SpringRef<State>\n        }\n      >\n    : never\n  : never\n\n/**\n * The `props` function is only called on the first render, unless\n * `deps` change (when defined). State is inferred from forward props.\n */\nexport function useSpring<Props extends object>(\n  props:\n    | Function\n    | (() => (Props & Valid<Props, UseSpringProps<Props>>) | UseSpringProps),\n  deps?: readonly any[] | undefined\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? [SpringValues<State>, SpringRef<State>]\n    : never\n  : never\n\n/**\n * Updated on every render, with state inferred from forward props.\n */\nexport function useSpring<Props extends object>(\n  props: (Props & Valid<Props, UseSpringProps<Props>>) | UseSpringProps\n): SpringValues<PickAnimated<Props>>\n\n/**\n * Updated only when `deps` change, with state inferred from forward props.\n */\nexport function useSpring<Props extends object>(\n  props: (Props & Valid<Props, UseSpringProps<Props>>) | UseSpringProps,\n  deps: readonly any[] | undefined\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? [SpringValues<State>, SpringRef<State>]\n    : never\n  : never\n\n/** @internal */\nexport function useSpring(props: any, deps?: readonly any[]) {\n  const isFn = is.fun(props)\n  const [[values], ref] = useSprings(\n    1,\n    isFn ? props : [props],\n    isFn ? deps || [] : deps\n  )\n  return isFn || arguments.length == 2 ? [values, ref] : values\n}\n","import { Arrify, InterpolatorArgs, InterpolatorFn } from '@react-spring/types'\nimport {\n  is,\n  raf,\n  each,\n  isEqual,\n  toArray,\n  frameLoop,\n  FluidValue,\n  getFluidValue,\n  createInterpolator,\n  Globals as G,\n  callFluidObservers,\n  addFluidObserver,\n  removeFluidObserver,\n  hasFluidValue,\n} from '@react-spring/shared'\n\nimport { FrameValue, isFrameValue } from './FrameValue'\nimport {\n  getAnimated,\n  setAnimated,\n  getAnimatedType,\n  getPayload,\n} from '@react-spring/animated'\n\n/**\n * An `Interpolation` is a memoized value that's computed whenever one of its\n * `FluidValue` dependencies has its value changed.\n *\n * Other `FrameValue` objects can depend on this. For example, passing an\n * `Interpolation` as the `to` prop of a `useSpring` call will trigger an\n * animation toward the memoized value.\n */\nexport class Interpolation<\n  Input = any,\n  Output = any\n> extends FrameValue<Output> {\n  /** Useful for debugging. */\n  key?: string\n\n  /** Equals false when in the frameloop */\n  idle = true\n\n  /** The function that maps inputs values to output */\n  readonly calc: InterpolatorFn<Input, Output>\n\n  /** The inputs which are currently animating */\n  protected _active = new Set<FluidValue>()\n\n  constructor(\n    /** The source of input values */\n    readonly source: unknown,\n    args: InterpolatorArgs<Input, Output>\n  ) {\n    super()\n    this.calc = createInterpolator(...args)\n\n    const value = this._get()\n    const nodeType = getAnimatedType(value)\n\n    // Assume the computed value never changes type.\n    setAnimated(this, nodeType.create(value))\n  }\n\n  advance(_dt?: number) {\n    const value = this._get()\n    const oldValue = this.get()\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this)!.setValue(value)\n      this._onChange(value, this.idle)\n    }\n    // Become idle when all parents are idle or paused.\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this)\n    }\n  }\n\n  protected _get() {\n    const inputs: Arrify<Input> = is.arr(this.source)\n      ? this.source.map(getFluidValue)\n      : (toArray(getFluidValue(this.source)) as any)\n\n    return this.calc(...inputs)\n  }\n\n  protected _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false\n\n      each(getPayload(this)!, node => {\n        node.done = false\n      })\n\n      if (G.skipAnimation) {\n        raf.batchedUpdates(() => this.advance())\n        becomeIdle(this)\n      } else {\n        frameLoop.start(this)\n      }\n    }\n  }\n\n  // Observe our sources only when we're observed.\n  protected _attach() {\n    let priority = 1\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this)\n      }\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source)\n        }\n        priority = Math.max(priority, source.priority + 1)\n      }\n    })\n    this.priority = priority\n    this._start()\n  }\n\n  // Stop observing our sources once we have no observers.\n  protected _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this)\n      }\n    })\n    this._active.clear()\n    becomeIdle(this)\n  }\n\n  /** @internal */\n  eventObserved(event: FrameValue.Event) {\n    // Update our value when an idle parent is changed,\n    // and enter the frameloop when a parent is resumed.\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance()\n      } else {\n        this._active.add(event.parent)\n        this._start()\n      }\n    }\n    // Once all parents are idle, the `advance` method runs one more time,\n    // so we should avoid updating the `idle` status here.\n    else if (event.type == 'idle') {\n      this._active.delete(event.parent)\n    }\n    // Ensure our priority is greater than all parents, which means\n    // our value won't be updated until our parents have updated.\n    else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce(\n        (highest: number, parent) =>\n          Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1),\n        0\n      )\n    }\n  }\n}\n\n/** Returns true for an idle source. */\nfunction isIdle(source: any) {\n  return source.idle !== false\n}\n\n/** Return true if all values in the given set are idle or paused. */\nfunction checkIdle(active: Set<FluidValue>) {\n  // Parents can be active even when paused, so the `.every` check\n  // removes us from the frameloop if all active parents are paused.\n  return !active.size || Array.from(active).every(isIdle)\n}\n\n/** Become idle if not already idle. */\nfunction becomeIdle(self: Interpolation) {\n  if (!self.idle) {\n    self.idle = true\n\n    each(getPayload(self)!, node => {\n      node.done = true\n    })\n\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self,\n    })\n  }\n}\n","import {\n  Globals,\n  frameLoop,\n  createStringInterpolator,\n} from '@react-spring/shared'\nimport { Interpolation } from './Interpolation'\n\n// Sane defaults\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args),\n})\n\nexport { Globals }\n\n/** Advance all animations by the given time */\nexport const update = frameLoop.advance\n","import { Lookup } from '@react-spring/types'\n\nconst isCustomPropRE = /^--/\n\ntype Value = string | number | boolean | null\n\nfunction dangerousStyleValue(name: string, value: Value) {\n  if (value == null || typeof value === 'boolean' || value === '') return ''\n  if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isCustomPropRE.test(name) &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  )\n    return value + 'px'\n  // Presumes implicit 'px' suffix for unitless numbers\n  return ('' + value).trim()\n}\n\nconst attributeCache: Lookup<string> = {}\n\ntype Instance = HTMLDivElement & { style?: Lookup }\n\nexport function applyAnimatedValues(instance: Instance, props: Lookup) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false\n  }\n\n  const isFilterElement =\n    instance.nodeName === 'filter' ||\n    (instance.parentNode && instance.parentNode.nodeName === 'filter')\n\n  const { style, children, scrollTop, scrollLeft, viewBox, ...attributes } =\n    props!\n\n  const values = Object.values(attributes)\n  const names = Object.keys(attributes).map(name =>\n    isFilterElement || instance.hasAttribute(name)\n      ? name\n      : attributeCache[name] ||\n        (attributeCache[name] = name.replace(\n          /([A-Z])/g,\n          // Attributes are written in dash case\n          n => '-' + n.toLowerCase()\n        ))\n  )\n\n  if (children !== void 0) {\n    instance.textContent = children\n  }\n\n  // Apply CSS styles\n  for (const name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name])\n      if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value)\n      } else {\n        instance.style[name] = value\n      }\n    }\n  }\n\n  // Apply DOM attributes\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i])\n  })\n\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop\n  }\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft\n  }\n  if (viewBox !== void 0) {\n    instance.setAttribute('viewBox', viewBox)\n  }\n}\n\nlet isUnitlessNumber: { [key: string]: true } = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n}\n\nconst prefixKey = (prefix: string, key: string) =>\n  prefix + key.charAt(0).toUpperCase() + key.substring(1)\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O']\n\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => (acc[prefixKey(prefix, prop)] = acc[prop]))\n  return acc\n}, isUnitlessNumber)\n","import { AnimatedObject } from '@react-spring/animated'\nimport { Lookup, OneOrMore } from '@react-spring/types'\nimport {\n  is,\n  each,\n  toArray,\n  eachProp,\n  FluidValue,\n  FluidEvent,\n  getFluidValue,\n  callFluidObservers,\n  hasFluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n} from '@react-spring/shared'\n\n/** The transform-functions\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\n * that you can pass as keys to your animated component style and that will be\n * animated. Perspective has been left out as it would conflict with the\n * non-transform perspective style.\n */\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/\n\n// These keys have \"px\" units by default\nconst pxTransforms = /^(translate)/\n\n// These keys have \"deg\" units by default\nconst degTransforms = /^(rotate|skew)/\n\ntype Value = number | string\n\n/** Add a unit to the value when the value is unit-less (eg: a number) */\nconst addUnit = (value: Value, unit: string): string | 0 =>\n  is.num(value) && value !== 0 ? value + unit : value\n\n/**\n * Checks if the input value matches the identity value.\n *\n *     isValueIdentity(0, 0)              // => true\n *     isValueIdentity('0px', 0)          // => true\n *     isValueIdentity([0, '0px', 0], 0)  // => true\n */\nconst isValueIdentity = (value: OneOrMore<Value>, id: number): boolean =>\n  is.arr(value)\n    ? value.every(v => isValueIdentity(v, id))\n    : is.num(value)\n    ? value === id\n    : parseFloat(value) === id\n\ntype Inputs = ReadonlyArray<Value | FluidValue<Value>>[]\ntype Transforms = ((value: any) => [string, boolean])[]\n\n/**\n * This AnimatedStyle will simplify animated components transforms by\n * interpolating all transform function passed as keys in the style object\n * including shortcuts such as x, y and z for translateX/Y/Z\n */\nexport class AnimatedStyle extends AnimatedObject {\n  constructor({ x, y, z, ...style }: Lookup) {\n    /**\n     * An array of arrays that contains the values (static or fluid)\n     * used by each transform function.\n     */\n    const inputs: Inputs = []\n    /**\n     * An array of functions that take a list of values (static or fluid)\n     * and returns (1) a CSS transform string and (2) a boolean that's true\n     * when the transform has no effect (eg: an identity transform).\n     */\n    const transforms: Transforms = []\n\n    // Combine x/y/z into translate3d\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0])\n      transforms.push((xyz: Value[]) => [\n        `translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, // prettier-ignore\n        isValueIdentity(xyz, 0),\n      ])\n    }\n\n    // Pluck any other transform-related props\n    eachProp(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || ''])\n        transforms.push((transform: string) => [transform, transform === ''])\n      } else if (domTransforms.test(key)) {\n        delete style[key]\n        if (is.und(value)) return\n\n        const unit = pxTransforms.test(key)\n          ? 'px'\n          : degTransforms.test(key)\n          ? 'deg'\n          : ''\n\n        inputs.push(toArray(value))\n        transforms.push(\n          key === 'rotate3d'\n            ? ([x, y, z, deg]: [number, number, number, Value]) => [\n                `rotate3d(${x},${y},${z},${addUnit(deg, unit)})`,\n                isValueIdentity(deg, 0),\n              ]\n            : (input: Value[]) => [\n                `${key}(${input.map(v => addUnit(v, unit)).join(',')})`,\n                isValueIdentity(input, key.startsWith('scale') ? 1 : 0),\n              ]\n        )\n      }\n    })\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms)\n    }\n\n    super(style)\n  }\n}\n\n/** @internal */\nclass FluidTransform extends FluidValue<string> {\n  protected _value: string | null = null\n\n  constructor(readonly inputs: Inputs, readonly transforms: Transforms) {\n    super()\n  }\n\n  get() {\n    return this._value || (this._value = this._get())\n  }\n\n  protected _get() {\n    let transform = ''\n    let identity = true\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0])\n      const [t, id] = this.transforms[i](\n        is.arr(arg1) ? arg1 : input.map(getFluidValue)\n      )\n      transform += ' ' + t\n      identity = identity && id\n    })\n    return identity ? 'none' : transform\n  }\n\n  // Start observing our inputs once we have an observer.\n  protected observerAdded(count: number) {\n    if (count == 1)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && addFluidObserver(value, this)\n        )\n      )\n  }\n\n  // Stop observing our inputs once we have no observers.\n  protected observerRemoved(count: number) {\n    if (count == 0)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && removeFluidObserver(value, this)\n        )\n      )\n  }\n\n  eventObserved(event: FluidEvent) {\n    if (event.type == 'change') {\n      this._value = null\n    }\n    callFluidObservers(this, event)\n  }\n}\n","import { Globals } from '@react-spring/core'\nimport { unstable_batchedUpdates } from 'react-dom'\nimport { createStringInterpolator, colors } from '@react-spring/shared'\nimport { createHost } from '@react-spring/animated'\nimport { applyAnimatedValues } from './applyAnimatedValues'\nimport { AnimatedStyle } from './AnimatedStyle'\nimport { WithAnimated } from './animated'\nimport { primitives } from './primitives'\n\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors,\n})\n\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props,\n})\n\nexport const animated = host.animated as WithAnimated\nexport { animated as a }\n\nexport * from './animated'\nexport * from '@react-spring/core'\n","export type ColorName = keyof typeof colors\n\n// http://www.w3.org/TR/css3-color/#svg-color\nexport const colors = {\n  transparent: 0x00000000,\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n}\n","export type Primitives = keyof JSX.IntrinsicElements\nexport const primitives: Primitives[] = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n]\n","import { createContext, useContext, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useLocalStorage(\"user\", null);\n  const navigate = useNavigate();\n\n  // call this function when you want to authenticate the user\n  const login = async (data) => {\n    setUser(data);\n    navigate(\"/dashboard\")\n  };\n\n  // call this function to sign out logged in user\n  const logout = () => {\n    setUser(null);\n    navigate(\"/\", { replace: true });\n  };\n\n  const value = useMemo(\n    () => ({\n      user,\n      login,\n      logout,\n    }),\n    [user]\n  );\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};","// src/hooks/useLocalStorage.jsx\n\nimport { useState } from \"react\";\n\nexport const useLocalStorage = (keyName, defaultValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const value = window.localStorage.getItem(keyName);\n      if (value) {\n        return JSON.parse(value);\n      } else {\n        window.localStorage.setItem(keyName, JSON.stringify(defaultValue));\n        return defaultValue;\n      }\n    } catch (err) {\n      return defaultValue;\n    }\n  });\n  const setValue = (newValue) => {\n    try {\n      window.localStorage.setItem(keyName, JSON.stringify(newValue));\n    } catch (err) {\n      console.log(err);\n    }\n    setStoredValue(newValue);\n  };\n  return [storedValue, setValue];\n};","import { useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport '@aws-amplify/ui-react/styles.css';\n//4.\nexport const setAuthToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n  else\n      delete axios.defaults.headers.common[\"Authorization\"];\n}\nimport './styles.module.css';\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAuth } from '../hooks/useAuth';\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n\n\n\n\nconst url = \"http://35.171.2.96:3100/trips\";\nconst url2 = \"http://35.171.2.96:3100/profiles\";\n\n// const url = \"http://localhost:3100/trips\";\n\n\n// import https from 'https';\n// const fs = require('fs').promises;\n// const httpsAgent = new https.Agent({\n//   rejectUnauthorized: false, // (NOTE: this will disable client verification)\n//   cert: fs.readFileSync(\"./usercert.pem\"),\n//   key: fs.readFileSync(\"./key.pem\"),\n//   passphrase: \"sayonara\"\n// })\n\n\nconst CreateTrip = (props) => {\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n  const { id } = useParams();\n const {user} = useAuth();\n  // const [userInfo, setUserInfo] = useState(\"\");\n\n  // async function getUserInfo() {\n  //   const user = await Auth.currentAuthenticatedUser();\n  //   setUserInfo(user.attributes);\n  // }\n\n  const navigate = useNavigate();\n  // Define the state with useState hook\n\n  const instance = axios.create(\n    {  baseURL: url,\n    headers: {\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n      'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded, '\n    } });\n    const instance2 = axios.create(\n      { baseURL: url2, \n      headers: {\n        'Access-Control-Allow-Origin' : '*',\n        'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n        'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded'\n      } \n    \n    });\n\n\n  const [profile, setProfile] = useState({});\n\n  const [trip, setTrip] = useState({\n    location: '',\n    user: '',\n    userid: '',\n\n    date: '',\n    notes: '',\n    quality: '',\n    value: '',\n    departing: '',\n  photo:'',\nfileName:''  });\n\n  const onChange = (e) => {\n    setTrip({ ...trip, [e.target.name]: e.target.value });\n  };\n  const handlePhoto = (e) => {\n    setTrip({ ...trip, photo: e.target.files[0] });\nconsole.log(trip.photo);\n\n  };\n\n  const onSubmit = (e) => {\n    \n    e.preventDefault();\n  const formData = new FormData();\n  formData.append('location',trip.location);\n  formData.append('user',user.username);//email\n  formData.append('userid',profile._id);\n  formData.append('date',trip.date);\n  formData.append('notes',trip.notes);\n  formData.append('quality',trip.quality);\n  formData.append('value',trip.value);\n  formData.append('departing',trip.departing);\n  formData.append('photo',trip.photo);\n  formData.append('fileName',trip.fileName);\n\n\n  const instance = axios.create(\n    {  baseURL: url,\n    headers: {\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n      'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded, '\n    } });\n    instance.post(url, formData)\n      .then((res) => {\n        setTrip({\n          location: '',\n          user: '',\n          userid: '',\n\n          date: '',\n          notes: '',\n          quality: '',\n          value: '',\n          photo:'',\n          departing:'',\n          fileName:''\n               });\n\n          // Push to /\n          navigate('/dashboard');\n        })\n        .catch((err) => {\n          console.log('Error in CreateBook!');\n        });\n  }\n  useEffect(() => {\n    // getUserInfo();\n    \n    instance2.get(url2)\n    .then((res) => {\n    \n        for(var i = 0; i < res.data.length; i++)\n  {\n  if(res.data[i].username === user.username)\n  {\n  setProfile(res.data[i]);\n  }\n  };\n  \n    })\n    .catch((err) => {\n      console.log('Error from ShowProfileList');\n    });\n\n      }, []);\n\n\n  return (<div>\n\n\n<div className='CreateTrip' style={{\n          backgroundImage: \"url(\" + require(\"/src/img/bg3.jpg\") + \")\",\n          backgroundSize:\"cover\",\n          backgroundRepeat:\"no-repeat\",\n          backgroundPosition:\"center\",\n        }}>\n      <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div className='container' onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n        <br/>\n        <div className='row'>\n          <div className='col-md-8 m-auto'>\n            <br />\n            <Link to='/' className='btn btn-outline-warning float-left'>\n              Show Travel List\n            </Link>\n          </div>\n          <div className='col-md-8 m-auto'>\n            <h1 style={{color:'#FFC000'}} className='display-4 text-center'>Add Travel</h1>\n            <p className='lead text-center'>Create new trip</p>\n\n            <form noValidate onSubmit={onSubmit} encType='multipart/form-data'>\n              <div className='form-group'>\n                <input\n                \n                  type='text'\n                  placeholder='Location of travel'\n                  name='location'\n                  className='form-control'\n                  value={trip.location}\n                  onChange={onChange}\n                />\n              </div>\n              <br />\n\n              <div className='form-group'>\n                <input\n                  type='date'\n                  placeholder='Date of travel'\n                  name='date'\n                  className='form-control'\n                  value={trip.date}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className='form-group'>\n                <textarea\n                  type='text'\n                  placeholder='Notes'\n                  name='notes'\n                  className='form-control'\n                  value={trip.notes}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className='form-group'>\n                <input\n                  type='number'\n                  placeholder='Quality rating'\n                  name='quality'\n                  className='form-control'\n                  value={trip.quality}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className='form-group'>\n                <input\n                  type='number'\n                  placeholder='Value rating'\n                  name='value'\n                  className='form-control'\n                  value={trip.value}\n                  onChange={onChange}\n                />\n              </div>\n              <div className='form-group'>\n                <input\n                  type='text'\n                  placeholder='Departing from'\n                  name='departing'\n                  className='form-control'\n                  value={trip.departing}\n                  onChange={onChange}\n                />\n              </div>\n              <div className='form-group'>\n                <input\n                  type='file'\n                  accept='.png, .jpg, .jpeg'\n                  name='photo'\n                  className='form-control'\n                  onChange={handlePhoto}\n                />\n              </div>\n\n              <input\n                type='submit'\n                className='btn btn-outline-warning btn-block mt-4'\n              />\n            </form>\n            <br/>\n            <br/>\n            <br/>\n          </div>\n        </div>\n    </div>\n</div>\n   \n  );\n}\nexport default CreateTrip;","import { Link } from 'react-router-dom';\nimport '../App.css';\nimport { useState } from 'react';\n\nimport logo from '/src/img/dc7logo.png';\nconst TripCard = (props) => {\n  \n   const trip = props.trip;\n  const inprofile = props.inprofile;\n  const img = 'http://35.171.2.96:3100/images/'+trip.fileName;\n  const img2 = 'http://35.171.2.96:3100/images/'+inprofile[0]?.fileName;\n\n\n\n  // const img = 'http://localhost:3100/images/'+trip.fileName\n\n\n  return (\n\n\n    <div className='container2'>\n      \n    <div className=\"bg\">\n  </div>\n  <div className=\"nft\">\n    <div className='main'>\n    <Link to={`/show-tripinfo/${trip._id}`}>\n\n          <img\n            src={img}\n            alt='travel pic'\n            width='100%'\n            height='200vh' />\n        </Link>\n\n     <div style={{color:'#CBB279'}}>To: {trip.location}</div>\n      <hr/>\n      <div className=\"pp\">{trip.notes}\n\n</div>\n<hr />\n\n      <div className='tokenInfo'>\n        <div className=\"price\">\n          <ins>◘Value</ins>\n          <p>{trip.value}</p>\n        </div>\n        <div className=\"duration\">\n          <ins>◷Quality</ins>\n          <p>{trip.quality}</p>\n        </div>\n      </div>\n      <div className='creator'>\n        <div className='wrapper'>\n          <img src={img2} alt=\"Creator\" />\n        </div>\n        <Link to={`/show-profileinfo/${trip.userid}`}>   Posted by: {trip.user}</Link>\n\n        \n      </div>\n\n    </div>\n  </div>\n\n        \n      \n      </div>\n  );\n};\n\nexport default TripCard;","import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nexport const setAuthToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n  else\n      delete axios.defaults.headers.common[\"Authorization\"];\n}\n\nimport TripCard from './TripCard';\nimport ReactPaginate from \"react-paginate\";\n//2.\n//3.\nimport './styles.module.css';\nimport { useSpring, animated } from '@react-spring/web'\n\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\nconst img777 = \"/src/img/bg3.jpg\"\n//4.\n\n\n\n\nconst PER_PAGE = 6;\nconst url = \"http://35.171.2.96:3100/trips\"\nconst url2 = \"http://35.171.2.96:3100/profiles\"\n\n// const url = \"http://localhost:3100/trips\";\n\n// let caCrt = '';\n// try {\n//     caCrt = fs.readFileSync('./ca.pem')\n// } catch(err) {\n//     console.log('Make sure that the CA cert file is named ca.pem', err);\n// }\n\n\n\nfunction ShowTripList(props) {\n  const [trips, setTrips] = useState([]);\n\n  const [trips1, setTrips1] = useState([]);\n  const [profiles1, setProfiles1] = useState([]);\nconst [searchField, setSearchField] = useState(\"\");\nconst [searchShow, setSearchShow] = useState(true); \n\nconst handleChange = e => {\n  setSearchField(e.target.value);\n  if(e.target.value===\"\"){\n    setSearchShow(true);\n  }\n};\nconst instance = axios.create(\n  { baseURL: url, \n  headers: {\n    'Access-Control-Allow-Origin' : '*',\n    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n    'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded'\n  } \n\n});\nconst instance2 = axios.create(\n  { baseURL: url2, \n  headers: {\n    'Access-Control-Allow-Origin' : '*',\n    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n    'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded'\n  } \n\n});\n\n\n\n\nuseEffect(() => {\n\ninstance.get(url)\n.then((res) => {\n  setTrips1(res.data.reverse());\n  setTrips(res.data);\n  // console.log(res);\n})\n.catch((err) => {\n  console.log('Error from ShowTripList');\n});\n\n\n    instance2.get(url2)\n    .then((res) => {\n    setProfiles1(res.data);\n    })\n    .catch((err) => {\n      console.log('Error from ShowProfileList');\n    });\n    \n  }, []);\n\n\n//  const tripList =\n//     trips.length === 0\n//       ? 'there is no trip record!'\n//       : trips.map((trip, k) => <TripCard     profile={profiles.filter( profile => {\n//         return (\n//           profile.username.includes(trip.user)\n//     );\n//   })\n//   } trip={trip} key={k} />);\n\n\n\nfunction searchList() {\n  if (searchShow) {\n    return (\n    <div className='list'>\n\n        {currentPageData}\n        </div>\n    );\n  }\n}\n\n\n\n  const [currentPage, setCurrentPage] = useState(0);\n  const offset = currentPage * PER_PAGE;\n \n  \n  const currentPageData = trips.filter(\n    trip => {\n      return (\n        trip\n        .location\n        .toLowerCase()\n        .includes(searchField.toLowerCase()) ||\n        trip\n        .departing\n        .toLowerCase()\n        .includes(searchField.toLowerCase())\n      );\n    }\n  )\n  .slice(offset, offset + PER_PAGE)\n  .map((trip, k) => <TripCard     inprofile={profiles1.filter( profile => {\n    return (\n      profile.username.includes(trip.user)\n);\n})\n} trip={trip} key={k} />);\n\n\n\n\n\n\n\n \n      const pageCount = Math.ceil(trips.filter(\n        trip => {\n          return (\n            trip\n            .location\n            .toLowerCase()\n            .includes(searchField.toLowerCase()) ||\n            trip\n            .departing\n            .toLowerCase()\n            .includes(searchField.toLowerCase())\n          );\n        }\n      ).length / PER_PAGE);  \n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n\n \n\n  return (\n<div>\n      \n    <div className='ShowTripList' style={{\n          backgroundImage:\"url(\" + require(\"/src/img/bg.jpeg\") + \")\",\n          backgroundSize:\"cover\",\n          backgroundRepeat:\"no-repeat\",\n          backgroundPosition:\"center\",\n           }} >\n          <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div className='container' onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n\n\n<div className='row'>\n\n\n<br/>\n\n<div className='col-md-6 ml-4'>\n\n<nav>\n<Link\n              to='/dashboard'\n              className='btn btn1 btn-outline-warning'\n            >\n              My Trips / Login \n            </Link></nav>\n            </div>\n\n<div className='col-md-2'>\n            <input \n          className=\"pa3 btn1 bb br3 grow b--none bg-lightest-blue ma3\"\n          type = \"search\" \n          placeholder = \"Search Trips\" \n          onChange = {handleChange}\n        />\n</div>\n</div>\n\n\n            <hr />\n       \n            <hr />\n<b>These are the most recently added trips by the community:</b>\n<br/>\n\n        {searchList()}\n        <div></div>\n        <hr />\n\n        <ReactPaginate\n        previousLabel={\"← Previous\"}\n        nextLabel={\"Next →\"}\n        pageCount={pageCount}\n        onPageChange={handlePageClick}\n        containerClassName={\"pagination\"}\n        previousLinkClassName={\"pagination__link\"}\n        nextLinkClassName={\"pagination__link\"}\n        disabledClassName={\"pagination__link--disabled\"}\n        activeClassName={\"pagination__link--active\"}\n      />\n\n\n            <hr />\n      \n    </div>\n        \n      </div>\n\n\n  );\n}\n\nexport default ShowTripList;","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate} from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\nimport { useAuth } from '../hooks/useAuth';\nexport const setAuthToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n  else\n      delete axios.defaults.headers.common[\"Authorization\"];\n}\nimport logo from '/src/img/dc7logo.png';\nimport './styles.module.css';\nimport { useSpring, animated } from '@react-spring/web'\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n//4.\n//4.\n\nconst url = \"http://35.171.2.96:3100/trips\";\n// const url = \"http://localhost:3100/trips\";\n\n// const httpsAgent = new https.Agent({ rejectUnauthorized: false, \n//   key: require('../../src/key.pem'),\n//   ca: require('../../src/ca.pem')\n// });\n\n\n\nconst ShowTripDetails=(props)=> {\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n  const { id } = useParams();\n\n  const [trip, setTrip] = useState({});\n\n  const img = 'http://35.171.2.96:3100/images/'+trip.fileName\n\n  // const img = 'http://localhost:3100/images/'+trip.fileName\n  // const [userInfo, setUserInfo] = useState(\"\");\n\n\n  // async function getUserInfo() {\n  //   const user = await Auth.currentAuthenticatedUser();\n  //   setUserInfo(user.attributes);\n  // }\n  const navigate = useNavigate();\n  const instance = axios.create(\n    { baseURL: url, \n    headers: {\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n      'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded'\n    } });\n    // const instance2 = axios.create(\n    //   { baseURL: url, \n    //   headers: {\n    //     'Access-Control-Allow-Origin' : '*',\n    //     'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n    //     'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded'\n    //   } });\n      \n  useEffect(() => {\n\n\n    instance\n      .get(`${url}/${id}`)\n      .then((res) => {\n\n        setTrip(res.data);\n      })\n      .catch((err) => {\n        console.log('Error from ShowTripDetails');\n      });\n\n\n  \n\n//   instance2\n//   .get(url)\n//   .then((res) => {\n// console.log(res.data);\n// setProfiles(res.data);\n// // res.data.filter(\n// //   prof => {\n// //     return (\n// //       prof.username.includes(user.username)\n// //     );\n// //   }\n// // )\n\n  \n//   })\n//   .catch((err) => {\n//     console.log('Error from ShowTripDetails');\n//   });\n\n}, [id]);\n\n \n  \n\n  const onDeleteClick = (id) => {\n    axios\n      .delete(`${url}/${id}`)\n      .then((res) => {\n        navigate('/dashboard');\n      })\n      .catch((err) => {\n        console.log('Error form ShowTripDetails_deleteClick');\n      });\n  };\n\n  const TripItem = (\n    <div>\n      <table className='table table-hover table-dark'>\n        <tbody>\n          <tr>\n            <th scope='row'>1</th>\n            <td>Location</td>\n            <td>{trip.location}</td>\n          </tr>\n          <tr>\n            <th scope='row'>2</th>\n            <td>Date</td>\n            <td>{trip.date}</td>\n          </tr>\n          <tr>\n            <th scope='row'>3</th>\n            <td>Notes</td>\n            <td>{trip.notes}</td>\n          </tr>\n          <tr>\n            <th scope='row'>4</th>\n            <td>Quality rating</td>\n            <td>{trip.quality}</td>\n          </tr>\n          <tr>\n            <th scope='row'>5</th>\n            <td>Value rating</td>\n            <td>{trip.value}</td>\n          </tr>\n          <tr>\n            <th scope='row'>6</th>\n            <td>Departing from</td>\n            <td>{trip.departing}</td>\n          </tr>\n          <tr>\n            <th scope='row'>7</th>\n            <td>Photo</td>\n            <td> <img\n        src={img}\n        className='img7'\n\n        alt='travel pic'\n        width={300}\n        height={250}\n      /></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n  return (<>\n          \n\n    <div className='ShowTripDetails' style={{\n      backgroundImage: \"url(\" + require(\"/src/img/bg33.jpg\") + \")\",\n      backgroundSize:\"cover\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundPosition:\"center\",\n    }}>\n      <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n        <div className='row'>\n          <div className='col-md-10 m-auto'>\n       \n            \n            <Link to='/' className='btn btn1 btn-outline-warning float-left'>\n              Show My Trips \n            </Link>\n\n            <Link to='/dashboard' className='btn btn1 btn-outline-warning float-right'>\n              Show All Trips \n            </Link>\n          </div>\n          <br />\n          <div className='col-md-8 m-auto'>\n            <h1 className='display-4 text-center' style={{color:'#FFC000'}}>Trip's Record</h1>\n            <p className='lead text-center'>View Trip Info</p>\n            <hr /> <br />\n          </div>\n          </div>\n       \n          \n          {/* <div className=\"containero\">\n  <div className=\"cardo cardo0\" backgroundImage={img} >\n    <div className=\"border\">\n      <h2>Al Pacino</h2>\n      <div className=\"icons\">\n        <i className=\"fa fa-codepen\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-dribbble\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </div>\n   */}\n  {/* <div className=\"cardo cardo1\">\n    <div className=\"border\">\n      <h2>Ben Stiller</h2>\n      <div className=\"icons\">\n        <i className=\"fa fa-codepen\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-dribbble\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </div>\n  <div className=\"cardo cardo2\">\n    <div className=\"border\">\n      <h2>Patrick Stewart</h2>\n      <div className=\"icons\">\n        <i className=\"fa fa-codepen\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-dribbble\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </div> */}\n\n\n{/* <div className='col-md-6 m-auto'>\n\n<div className=\"cardy-container\">\n  <div className=\"cardy\">\n    <h3>Your Trip's Info</h3><br/>\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quod maiores sapiente non asperiores deleniti, quos eos placeat corrupti id consequatur ullam accusantium, nesciunt aut fugiat at ipsam harum eveniet dolore.</p>\n    <div className=\"layers\">\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>   \n    </div>\n  </div> \n</div>\n</div>\n</div>\n          <div className='col-md-4 m-auto'>\n            <button\n              type='button'\n              className='btn btn1 btn-outline-danger btn-lg btn-block'\n              onClick={() => {\n                onDeleteClick(trip._id);\n              }}\n            >\n              Delete Trip\n            </button>\n          </div> */}\n\n          <div className='col-md-8 m-auto center'>\n{TripItem}\n</div>\n<div className='row'>\n<div className='col-md-6 m-auto'>\n            <button\n              type='button'\n              className='btn btn1 btn-outline-danger btn-lg btn-block'\n              onClick={() => {\n                onDeleteClick(trip._id);\n              }}\n            >\n              Delete Trip\n            </button>\n          </div>\n          <div className='col-md-6 m-auto'>\n            <Link\n              to={`/edit-trip/${trip._id}`}\n              className='btn btn1 btn-outline-info btn-lg btn-block'\n            >\n              Edit Trip\n            </Link>\n          </div>\n          </div>\n          <br/>\n      <br/>\n        </div>\n    \n\n</>\n   \n  );\n}\nexport default (ShowTripDetails); \n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\n\n\n//3.\nimport '@aws-amplify/ui-react/styles.css';\nimport './styles.module.css';\nimport { useSpring, animated } from '@react-spring/web'\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n//4.\nconst url = \"http://35.171.2.96:3100/trips\";\n// const url = \"http://localhost:3100/trips\";\n\n// const httpsAgent = new https.Agent({ rejectUnauthorized: false, \n//   key: require('../../src/key.pem'),\n//   ca: require('../../src/ca.pem')\n// });\n\n\n\n\nconst ShowPublicTrip=(props)=> {\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n\n\n  const [tripa, setTripa] = useState({});\n  const img = 'http://35.171.2.96:3100/images/'+tripa.fileName\n  // const img = 'http://localhost:3100/images/'+tripa.fileName\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios\n      .get(`${url}/${id}`)\n      .then((res) => {\n        setTripa(res.data);\n      })\n      .catch((err) => {\n        console.log('Error from ShowTripDetails');\n      });\n  }, []);\n\n  // const onDeleteClick = (id) => {\n  //   axios\n  //     .delete(`${url}/${id}`, {httpsAgent:httpsAgent})\n  //     .then((res) => {\n  //       navigate('/');\n  //     })\n  //     .catch((err) => {\n  //       console.log('Error form ShowTripDetails_deleteClick');\n  //     });\n  // };\n\n  const TripItem = (\n    <div>\n      <table className='table table-hover table-dark'>\n        <tbody>\n          <tr>\n            <th scope='row'>1</th>\n            <td>Location</td>\n            <td>{tripa.location}</td>\n          </tr>\n          <tr>\n            <th scope='row'>2</th>\n            <td>Date</td>\n            <td>{tripa.date}</td>\n          </tr>\n          <tr>\n            <th scope='row'>3</th>\n            <td>Notes</td>\n            <td>{tripa.notes}</td>\n          </tr>\n          <tr>\n            <th scope='row'>4</th>\n            <td>Quality rating</td>\n            <td>{tripa.quality}</td>\n          </tr>\n          <tr>\n            <th scope='row'>5</th>\n            <td>Value rating</td>\n            <td>{tripa.value}</td>\n          </tr>\n          <tr>\n            <th scope='row'>6</th>\n            <td>Departing from</td>\n            <td>{tripa.departing}</td>\n          </tr>\n          <tr>\n            <th scope='row'>7</th>\n            <td>Photo</td>\n            <td> <img\n        src={img}\n        className='img7'\n\n        alt='travel pic'\n        width={300}\n        height={250}\n      /></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n  return (<div>\n    \n\n    <div className='ShowTripDetails' style={{\n      backgroundImage: \"url(\" + require(\"/src/img/bg4.jpg\") + \")\",\n      backgroundSize:\"cover\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundPosition:\"center\",\n    }}>\n      <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n        <div className='row'>\n          <div className='col-md-10 m-auto'>\n            <Link to='/' className='btn btn1 btn-outline-warning float-left'>\n              Show All Trips\n            </Link>\n          </div>\n          <br />\n          <div className='col-md-8 m-auto'>\n            <h1 className='display-4 text-center' style={{color:'#FFC000'}}>Trip's Record</h1>\n            <p className='lead text-center'>View Trip's Info</p>\n            <hr /> <br />\n          </div>\n          <div className='col-md-10 m-auto'>{TripItem}</div>\n          <div className='col-md-6 m-auto'>\n            {/* <button\n              type='button'\n              className='btn btn1 btn-outline-danger btn-lg btn-block'\n              onClick={() => {\n                onDeleteClick(trip._id);\n              }}\n            >\n              Delete Trip\n            </button> */}\n          </div>\n          <div className='col-md-6 m-auto'>\n            {/* <Link\n              to={`/edit-trip/${trip._id}`}\n              className='btn btn1 btn-outline-info btn-lg btn-block'\n            >\n              Edit Trip\n            </Link> */}\n          </div>\n        </div>\n      <br/>\n      <br/>\n    </div>\n</div>\n   \n  );\n}\n\nexport default ShowPublicTrip;","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\n\n\n// import { Amplify } from 'aws-amplify';\n\n\n// import awsmobile from '../aws-exports';\n//3.\n// import { Authenticator } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\nimport './styles.module.css';\nimport { useSpring, animated } from '@react-spring/web'\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n//4.\n\nconst url = \"http://35.171.2.96:3100/profiles\";\n// const url = \"http://localhost:3100/profiles\";\n// const httpsAgent = new https.Agent({ rejectUnauthorized: false, \n//   key: require('../../src/key.pem'),\n//   ca: require('../../src/ca.pem')\n// });\n\n// Amplify.configure(awsmobile);\n\n\nfunction ShowPublicProfile(props) {\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n \n  const [userInfo, setUserInfo] = useState(\"\");\n\n  const [pprofile, setPProfile] = useState({});\n\n  // async function getUserInfo() {\n  //   const user = await Auth.currentAuthenticatedUser();\n  //   setUserInfo(user.attributes);\n  // }\n\n  \n  const img = 'http://35.171.2.96:3100/images/'+pprofile.fileName\n  // const img = 'http://localhost:3100/images/'+profile.fileName\n\n  const { id } = useParams();\n\n\n  const instance = axios.create(\n    {  baseURL: url,\n    headers: {\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n      'Content-Type': 'multipart/form-data'\n  } });\n \n\nconst ProfileItem = (\n    <>\n<div className=\"cardi\">\n        <div className=\"cardi-img\">\n        <img\n        src={img}\n      />\n        </div>\n        <div className=\"desci\">\n            <h6 className=\"primary-text\">{pprofile.username}</h6>\n            <h6 className=\"secondary-text\">{pprofile.location}</h6>\n        </div>\n        <div style={{fontFamily:'Lucida Handwriting'}}className=\"buttoni primary-text\">{pprofile.bio}</div>\n        <div className=\"details\">\n            <div className=\"rating\">\n                <h6 className=\"primary-text\"> {pprofile.age} </h6>\n                <h6 className=\"secondary-text\"> Age </h6>\n            </div>\n            <div className=\"activity\">\n                <h6 className=\"primary-text\"> {pprofile.gender} </h6>\n                <h6 className=\"secondary-text\"> Gender </h6>\n            </div>\n        </div>\n</div>\n\n \n    </>\n  );\n\n  useEffect(() => {\n    instance\n      .get(`${url}/${id}`)\n      .then((res) => {\n        setPProfile(res.data);\n      })\n      .catch((err) => {\n        console.log('Error from ShowTripDetails');\n      });\n      \n  }, [id]);\n\n  return (<div>\n    <div className='ShowTripDetails' style={{\n      backgroundImage: \"url(\" + require(\"/src/img/bg1.jpg\") + \")\",\n      backgroundSize:\"cover\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundPosition:\"center\",\n    }}>\n      <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n        <div className='row'>\n          <div className='col-md-10 m-auto'>\n            <Link to='/' className='btn btn1 btn-outline-warning float-left'>\n              Show All Trips\n            </Link>\n            {/* <Link to={`/show-profile/${profile._id}`} className='btn btn1 btn-outline-warning float-right'>\n              My profile\n            </Link> */}\n          </div>\n          </div>\n          <br />\n\n        <div className='row'>\n\n          <div className='col-md-8 m-auto'>\n            <h1 className='display-4 text-center' style={{color:'#FFC000'}}>Profile's Record</h1>\n            <p className='lead text-center'>View Profile's Info</p>\n            <hr /> <br />\n          </div>\n          </div>\n          <br />\n\n        <div className='row'>\n          <div className='col-md-10 m-auto'>{ProfileItem}</div>\n          </div>\n          <br />\n\n        <div className='row'>\n          <div className='col-md-12 m-auto'>\n         \n          </div>\n        </div>\n      <br/>\n      <br/>\n    </div></div>\n  );\n}\n\nexport default ShowPublicProfile;","import { Link } from 'react-router-dom';\nimport '../App.css';\n\n\nconst TripCard2 = (props) => {\n  \n  const trip = props.trip;\n  const myprofile = props.myprofile;\n  const img = 'http://35.171.2.96:3100/images/'+trip.fileName;\n  const img2 = 'http://35.171.2.96:3100/images/'+myprofile[0]?.fileName;\n\n\n  return (\n\n    <div className='container2'>\n      \n        <div className=\"bg\">\n      </div>\n      <div className=\"nft\">\n        <div className='main'>\n        <Link to={`/show-trip/${trip._id}`}>\n    \n              <img\n                src={img}\n                alt='travel pic'\n                width='100%'\n                height='200vh' />\n            </Link>\n    \n         <div style={{color:'#CBB279'}}>To: {trip.location}</div>\n          <hr/>\n          <div className=\"pp\">{trip.notes}\n    \n    </div>\n    <hr />\n\n          <div className='tokenInfo'>\n            <div className=\"price\">\n              <ins>◘Value</ins>\n              <p>{trip.value}</p>\n            </div>\n            <div className=\"duration\">\n              <ins>◷Quality</ins>\n              <p>{trip.quality}</p>\n            </div>\n          </div>\n          <div className='creator'>\n            <div className='wrapper'>\n              <img src={img2} alt=\"Creator\" />\n            </div>\n            <Link to={`/show-profileinfo/${trip.userid}`}>   Posted by: {trip.user}</Link>\n\n            \n          </div>\n    \n        </div>\n      </div>\n    \n            \n          \n          </div>\n  );\n};\n\nexport default TripCard2;","import { useState, useEffect } from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport TripCard2 from './TripCard2';\nimport ReactPaginate from \"react-paginate\";\n//2.\nexport const setAuthToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n  else\n      delete axios.defaults.headers.common[\"Authorization\"];\n}\n\nimport { useAuth } from \"../hooks/useAuth.jsx\";\n//4.\nimport { useSpring, animated } from '@react-spring/web'\n\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n// import { Amplify } from 'aws-amplify';\n\n\n// import awsmobile from '../aws-exports';\n// //3.\n// import '@aws-amplify/ui-react/styles.css';\n\n// Amplify.configure(awsmobile);\n\n\nconst PER_PAGE = 6;\nconst url = \"http://35.171.2.96:3100/trips\"\nconst url2 = \"http://35.171.2.96:3100/profiles\"\nconst url3 = \"http://35.171.2.96:3100/profiles\"\n\n\n// const url = \"http://localhost:3100/trips\";\n// const url2 = \"http://localhost:3100/profiles\";\n\n// let caCrt = '';\n// try {\n//     caCrt = fs.readFileSync('./ca.pem')\n// } catch(err) {\n//     console.log('Make sure that the CA cert file is named ca.pem', err);\n// }\n\n// async function getUserInfo() {\n//   const user = await Auth.currentAuthenticatedUser();\n//   setUserInfo(user.attributes);\n// }\n\n\n\nconst Dashboard=(props)=> {\n  const { logout } = useAuth();\n  const {id} = useParams();\n  const handleLogout = () => {\n    logout();\n  };\n  const { user } = useAuth();\n  const [trips, setTrips] = useState([]);\n  const [profiles2, setProfiles2] = useState([]);\n  const [activeprofile, setActiveprofile] = useState({});\n  const [profile, setProfile] = useState({});\nconst [searchField, setSearchField] = useState(\"\");\nconst [searchShow, setSearchShow] = useState(true); \n\nconst handleChange = e => {\n  setSearchField(e.target.value);\n  if(e.target.value===\"\"){\n    setSearchShow(true);\n  }\n};\nconst instance = axios.create(\n  { baseURL: url, \n  headers: {\n    'Access-Control-Allow-Origin' : '*',\n    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n    'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded'\n  } \n\n});\nconst instance2 = axios.create(\n  { baseURL: url2, \n  headers: {\n    'Access-Control-Allow-Origin' : '*',\n    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n    'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded'\n  } \n\n});\n\nconst instance3 = axios.create(\n  { baseURL: url3, \n  headers: {\n    'Access-Control-Allow-Origin' : '*',\n    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n    'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded'\n  } \n\n});\n\n\n\nuseEffect(() => {\n\ninstance.get(url)\n.then((res) => {\n  setTrips(res.data.reverse());\n  // console.log(res);\n})\n.catch((err) => {\n  console.log('Error from ShowTripList');\n});\n\n\n\n    instance2.get(url2)\n    .then((res) => {\n    setProfiles2(res.data);\n    for(var i = 0; i < res.data.length; i++)\n    {\n    if(res.data[i].username.toLowerCase() === user.username.toLowerCase())\n    {\nsetActiveprofile(res.data[i]);\nsetProfile(res.data[i]);\n    }else{\n      setActiveprofile(null);\n      setProfile(null);\n            \n    }\n    };\n    })\n    .catch((err) => {\n      console.log('Error from ShowProfileList');\n    });\n    \n\n    // instance3.get(`${url}/${id}`)\n    // .then((res) => {\n    //   setProfile(res.data);\n    //   // console.log(res);\n    // })\n    // .catch((err) => {\n    //   console.log('Error from ShowTripList');\n    // });\n    \n  \n  }, [id]);\n\n//  const tripList =\n//     trips.length === 0\n//       ? 'there is no trip record!'\n//       : trips.map((trip, k) => <TripCard     profile={profiles.filter( profile => {\n//         return (\n//           activeprofile.username.includes(trip.user)\n//     );\n//   })\n//   } trip={trip} key={k} />);\n\n\n\nfunction searchList() {\n  if (searchShow) {\n    return (\n    <div className='list'>\n\n        {currentPageData}\n        </div>\n    );\n  }\n}\n\n\n\n  const [currentPage, setCurrentPage] = useState(0);\n  const offset = currentPage * PER_PAGE;\n\n  \n  const currentPageData = trips.filter(\n    trip => {\n      return (\n        trip.user.includes(user.username) &&\n        (trip\n        .location\n        .toLowerCase()\n        .includes(searchField.toLowerCase()) ||\n        trip\n        .departing\n        .toLowerCase()\n        .includes(searchField.toLowerCase()))\n      );\n    }\n  )\n  .slice(offset, offset + PER_PAGE)\n  .map((trip, k) => <TripCard2  myprofile={profiles2.filter( profile => {\n    return (\n      profile.username.includes(trip.user)\n);\n})\n} trip={trip} key={k} />);\n\n\n\n\n\n\n\n  const pageCount = Math.ceil(trips.filter(\n    trip => {\n      return (\n        trip.user.includes(user.username) &&\n        (trip\n        .location\n        .toLowerCase()\n        .includes(searchField.toLowerCase()) ||\n        trip\n        .departing\n        .toLowerCase()\n        .includes(searchField.toLowerCase()))\n      );\n    }\n  ).length / PER_PAGE);  \nfunction handlePageClick({ selected: selectedPage }) {\nsetCurrentPage(selectedPage);\n}\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n\n return(<> <div>\n    \n  <div className='Login' style={{\n    backgroundImage: \"url(\" + require(\"/src/img/bg3.jpg\") + \")\",\n    backgroundSize:\"cover\",\n    backgroundRepeat:\"no-repeat\",\n    backgroundPosition:\"center\",\n  }}>       \n    <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div className='container' onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n\n \n         <div >\n \n <div className='row m-auto'>\n \n <div className='col-md-4 '>\n { activeprofile\n \n ?\n <Link\n               to='/create-trip'\n               className='btn btn-outline-warning float-left'\n             >\n               + Add New Trip\n             </Link>\n             :\n             <></>}\n             \n </div>\n <div className='col-md-4'>  \n <Link to='/' className='btn btn-outline-warning'>\n               Show Travel List\n             </Link>\n            \n \n </div>\n <div className='col-md-4'>\n { activeprofile\n \n ?\n \n <Link to={`/show-profile/${activeprofile._id}`} className='btn btn-outline-warning float-left'>\n               Profile\n             </Link>\n             \n             :\n             \n             <Link to={`/create-profile`} className='btn btn-outline-warning float-left'>\n               Create Profile\n             </Link>}\n \n <button className='btn btn-outline-warning float-right' onClick={handleLogout}>Sign out</button>\n \n \n     \n \n </div>\n </div>\n \n <hr/>\n <div className='row'>\n <div className='col-md-8'>\n         <h3 style={{color:'grey', fontsize:'3rem'}}><b>Hello, {user.username}</b></h3></div>\n         <div className='col-md-4'>\n             <input \n           className=\"pa3 bb btn1 br3 grow b--none bg-lightest-blue ma3\"\n           type = \"search\" \n           placeholder = \"Search Trips\" \n           onChange = {handleChange}\n         />\n </div></div>\n \n       \n             <hr />\n            <b>Edit added trips by clicking their picture:</b>\n <br/>\n         {searchList()}\n         <div></div>\n         <hr />\n \n         <ReactPaginate\n         previousLabel={\"← Previous\"}\n         nextLabel={\"Next →\"}\n         pageCount={pageCount}\n         onPageChange={handlePageClick}\n         containerClassName={\"pagination\"}\n         previousLinkClassName={\"pagination__link\"}\n         nextLinkClassName={\"pagination__link\"}\n         disabledClassName={\"pagination__link--disabled\"}\n         activeClassName={\"pagination__link--active\"}\n       />\n \n \n             <hr />\n \n \n \n \n \n         </div>\n         </div>\n         </div>\n       \n     </>\n      \n     );\n   }\n   \n   export default Dashboard;","import { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nexport const ProtectedRoute = ({ children }) => {\n  const { user } = useAuth();\n  if (!user) {\n    // user is not authenticated\n    return <Navigate to=\"/login\" />;\n  }\n  return children;\n};","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../App.css';\nexport const setAuthToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n  else\n      delete axios.defaults.headers.common[\"Authorization\"];\n}\nimport './styles.module.css';\nimport { useSpring, animated } from '@react-spring/web'\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\nconst url = \"http://35.171.2.96:3100/trips\";\n// const url = \"http://localhost:3100/trips\";\n\n\n// const httpsAgent = new https.Agent({ rejectUnauthorized: false, \n//   key: require('../../src/key.pem'),\n//   ca: require('../../src/ca.pem')\n// });\n\n// import https from 'https';\n// const fs = require('fs').promises;\n// const httpsAgent = new https.Agent({\n//   rejectUnauthorized: false, // (NOTE: this will disable client verification)\n//   cert: fs.readFileSync(\"./usercert.pem\"),\n//   key: fs.readFileSync(\"./key.pem\"),\n//   passphrase: \"sayonara\"\n// })\n\nconst UpdateTripInfo =(props)=> {\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n \n  const [userInfo, setUserInfo] = useState(\"\");\n\n\n\n\n\n  // async function getUserInfo() {\n  //   Auth.currentUserInfo().catch(err => console.log(err));\n  //   setUserInfo(user.attributes);\n  // }\n\n  const [trip, setTrip] = useState({\n    location: '',\n    user:'',\n    date: '',\n    quality: '',\n    value: '',\n    notes: '',\n    departing: '',\n    photo:'',\n    fileName:''\n  });\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n\n    // getUserInfo();\n\n    // const instance = axios.create({\n    //   baseURL: url,\n    //   withCredentials: false,\n    //   headers: {\n    //     'Access-Control-Allow-Origin' : '*',\n    //     'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n    //     'Content-Type': 'multipart/form-data'\n    // } });\n      axios\n      .get(`${url}/${id}`)\n      .then((res) => {\n        setTrip({\n          location: res.data.location,\n\n          user: res.data.user,\n          date: res.data.date,\n          notes: res.data.notes,\n          quality: res.data.quality,\n          value: res.data.value,\n          departing: res.data.departing,\n          photo: res.data.photo,\n          fileName: res.file.filename\n        });\n      })\n      .catch((err) => {\n        console.log('Error from UpdateTripInfo');\n      });\n  }, [id]);\n\n  const onChange = (e) => {\n    setTrip({ ...trip, [e.target.name]: e.target.value });\n  };\n const handlePhoto = (e) => {\n  \n  setTrip({ ...trip, photo: e.target.files[0] });\n\nconsole.log(trip);\n\n\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n  const formData = new FormData();\n  formData.append('location',trip.location);\n  formData.append('user',userInfo.email);\n\n  formData.append('date',trip.date);\n  formData.append('notes',trip.notes);\n  formData.append('quality',trip.quality);\n  formData.append('value',trip.value);\n  formData.append('departing',trip.departing);\n  formData.append('photo',trip.photo);\n  formData.append('fileName',trip.fileName);\n\n  \n    console.log(formData);\n\n    axios\n      .put(`${url}/${id}`, formData)\n      .then((res) => {\n        setTrip({\n          location: '',\n          userid:'',\n          user: '',\n          date: '',\n          notes: '',\n          quality: '',\n          value: '',\n          photo:'',\n          departing:'',\n          fileName:''\n               });\n        navigate(`/show-trip/${id}`);\n      })\n      .catch((err) => {\n        console.log('Error in UpdateTripInfo!');\n      });\n  };\n\n  return (\n\n\n           <div className='UpdateTripInfo' style={{\n            backgroundImage: \"url(\" + require(\"/src/img/bg4.jpg\") + \")\",\n            backgroundSize:\"cover\",\n            backgroundRepeat:\"no-repeat\",\n            backgroundPosition:\"center\",\n\n          }}>\n      <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div  onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n        <br/>\n        <div className='row'>\n          <div className='col-md-8 m-auto'>\n            <br />\n            <Link to='/dashboard' className='btn btn-outline-warning float-left'>\n              Show My Trips\n            </Link>\n            \n          </div>\n          <div className='col-md-8 m-auto'>\n            <h1 className='display-4 text-center' style={{color:'#FFC000'}}>Edit Trip</h1>\n            <p className='lead text-center'>Update Trip's Info</p>\n          </div>\n        </div>\n\n        <div className='col-md-8 m-auto'>\n          <form  onSubmit={onSubmit} encType='multipart/form-data'>\n            <div className='form-group'>\n              <label htmlFor='location'>Location</label>\n              <input\n                type='text'\n                placeholder='Location of the trip'\n                name='location'\n                className='form-control'\n                value={trip.location}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='date'>Travel Date</label>\n              <input\n                type='date'\n                placeholder='Date'\n                name='date'\n                className='form-control'\n                value={trip.date}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='notes'>Notes</label>\n              <textarea\n                type='text'\n                placeholder='Notes'\n                name='notes'\n                className='form-control'\n                value={trip.notes}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='quality'>Quality</label>\n              <input\n                type='number'\n                placeholder='Quality rating'\n                name='quality'\n                className='form-control'\n                value={trip.quality}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='value'>Value rating</label>\n              <input\n                type='number'\n                placeholder='Value rating'\n                name='value'\n                className='form-control'\n                value={trip.value}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='departing'>Departing</label>\n              <input\n                type='text'\n                placeholder='Departing city of the trip'\n                name='departing'\n                className='form-control'\n                value={trip.departing}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='departing'>Photo</label>\n              <input\n                type='file'\n                defaultValue={trip.photo}\n                  accept='.png, .jpg, .jpeg'\n                  name='photo'\n                  className='form-control'\n                  onChange={handlePhoto}\n              />\n            </div>\n            <br />\n\n\n            <button\n              type='submit'\n              className='btn btn-outline-info btn-lg btn-block'\n            >\n              Update Trip\n            </button>\n          </form>\n        </div>\n    </div>\n      )}\n   \n\nexport default (UpdateTripInfo);\n\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../App.css';\nexport const setAuthToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n  else\n      delete axios.defaults.headers.common[\"Authorization\"];\n}\nimport { useAuth } from '../hooks/useAuth';\nimport './styles.module.css';\nimport { useSpring, animated } from '@react-spring/web'\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\nconst url = \"http://35.171.2.96:3100/profiles\";\n// const url = \"http://localhost:3100/profiles\";\n\n\n// const httpsAgent = new https.Agent({ rejectUnauthorized: false, \n//   key: require('../../src/key.pem'),\n//   ca: require('../../src/ca.pem')\n// });\n\n\n// import https from 'https';\n// const fs = require('fs').promises;\n// const httpsAgent = new https.Agent({\n//   rejectUnauthorized: false, // (NOTE: this will disable client verification)\n//   cert: fs.readFileSync(\"./usercert.pem\"),\n//   key: fs.readFileSync(\"./key.pem\"),\n//   passphrase: \"sayonara\"\n// })\n\n\nconst UpdateProfileInfo=(props)=> {\n\n  const navigate = useNavigate();\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n  const { user } = useAuth();\n\n  const {id}=useParams();\n  // async function getUserInfo() {\n  //   const user = await Auth.currentAuthenticatedUser();\n  //   setUserInfo(user.attributes);\n  // }\n\n  \n  const [profile, setProfile] = useState({\n    location: '',\n    active:'',\n    username: '',\n    gender: '',\n    age: '',\n    bio: '',\n    photo:'',\n    fileName:''\n  });\n\n\n  const instance = axios.create({\n    baseURL: url,\n    withCredentials: false,\n    headers: {\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n      'Content-Type': 'multipart/form-data'\n  } });\n  useEffect(() => {\n    // getUserInfo();\n\n\n      instance\n      .get(`${url}/${id}`)\n      .then((res) => {\n\n        setProfile({\n          location: res.data.location,\n          active: res.data.active,\n          age: res.data.age,\n          bio: res.data.bio,\n          gender: res.data.gender,\n          username: res.data.username,\n          photo: res.data.photo,\n          fileName: res.file.filename\n        });\n      })\n      .catch((err) => {\n        console.log('Error from UpdateProfileInfo');\n      });\n  }, [id]);\n\n  const onChange = (e) => {\n    setProfile({ ...profile, [e.target.name]: e.target.value });\n  };\n const handlePhoto = (e) => {\n  \n  setProfile({ ...profile, photo: e.target.files[0] });\n\n\n\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n  const formData = new FormData();\n  formData.append('username',user.username);\n\n  formData.append('age',profile.age);\n  formData.append('bio',profile.bio);\n  formData.append('gender',profile.gender);\n  formData.append('location',profile.location);\n  formData.append('photo',profile.photo);\nformData.append('fileName',profile.fileName);\n\n  \n    console.log(formData);\n\n    axios\n      .put(`${url}/${id}`, formData)\n      .then((res) => {\n        setProfile({\n            location: '',\n            active:'',\n            username: '',\n            bio: '',\n            gender: '',\n            age: '',\n          photo:'',\n          fileName:''\n               });\n               navigate('/dashboard')\n      })\n      .catch((err) => {\n        console.log('Error in UpdateProfileInfo!');\n      });\n  };\n\n  return (\n\n\n    \n           <div className='UpdateTripInfo' style={{\n            backgroundImage: \"url(\" + require(\"/src/img/bg1.jpg\") + \")\",\n            backgroundSize:\"cover\",\n            backgroundRepeat:\"no-repeat\",\n            backgroundPosition:\"center\",\n\n          }}>\n      <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div  onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n        <br/>\n        <div className='row'>\n          <div className='col-md-8 m-auto'>\n            <br />\n            <Link to={`/`} className='btn btn-outline-warning float-left'>\n              Home\n            </Link>\n          </div>\n          <div className='col-md-8 m-auto'>\n            <h1 className='display-4 text-center' style={{color:'#FFC000'}}>Edit Profile</h1>\n            <p className='lead text-center'>Update Profile's Info</p>\n          </div>\n        </div>\n\n        <div className='col-md-8 m-auto'>\n          <form  onSubmit={onSubmit} encType='multipart/form-data'>\n            <div className='form-group'>\n              <label htmlFor='location'>Bio</label>\n              <textarea\n                type='text'\n                placeholder='Bio'\n                name='bio'\n                className='form-control'\n                value={profile.bio}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='date'>Your age</label>\n              <input\n                type='number'\n                placeholder='Age'\n                name='age'\n                className='form-control'\n                value={profile.age}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='notes'>Gender</label>\n              <input\n                type='text'\n                placeholder='Gender'\n                name='gender'\n                className='form-control'\n                value={profile.gender}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n              <label htmlFor='quality'>Location</label>\n              <input\n                type='text'\n                placeholder='Location of residence'\n                name='location'\n                className='form-control'\n                value={profile.location}\n                onChange={onChange}\n              />\n            </div>\n            <br />\n\n           \n\n            <div className='form-group'>\n              <label htmlFor='departing'>Photo</label>\n              <input\n                type='file'\n                defaultValue={profile.photo}\n                  accept='.png, .jpg, .jpeg'\n                  name='photo'\n                  className='form-control'\n                  onChange={handlePhoto}\n              />\n            </div>\n            <br />\n\n\n            <button\n              type='submit'\n              className='btn btn-outline-info btn-lg btn-block'\n            >\n              Update profile\n            </button>\n          </form>\n        </div>\n    </div>\n \n   \n  );\n}\n\nexport default (UpdateProfileInfo);\n\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\nexport const setAuthToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n  else\n      delete axios.defaults.headers.common[\"Authorization\"];\n}\n\n//3.\nimport { useAuth } from \"../hooks/useAuth\";\nimport './styles.module.css';\n\nimport { useSpring, animated } from '@react-spring/web'\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n//4.\n\nconst url = \"http://35.171.2.96:3100/profiles\";\n// const url = \"http://localhost:3100/profiles\";\n\n// const httpsAgent = new https.Agent({ rejectUnauthorized: false, \n//   key: require('../../src/key.pem'),\n//   ca: require('../../src/ca.pem')\n// });\n\n\nconst ShowProfile=(props) => {\n\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n  \n\n  \n  const { id } = useParams();\n  const { user } = useAuth();\n\n  const [profiles, setProfiles] = useState([]);\n\n  const [profile, setProfile] = useState({});\n\n  \n  const img = 'http://35.171.2.96:3100/images/'+profile.fileName\n  // const img = 'http://localhost:3100/images/'+profile.fileName\n\n\n\n  const instance = axios.create(\n    {  baseURL: url,\n    headers: {\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n      'Content-Type': 'multipart/form-data'\n  } });\n \n\n  const ProfileItem = (\n<>   \n       <div className='row'>  \n        <div className='col-md-5 m-auto'>\n      \n<div className='body8'>\n    <article className='article8'>\n  <figure className='figure8'><img className='img8' src={img} alt=\"\"/></figure>\n  <h2 className='h28'>{profile.username}</h2>\n  <div className=\"center\" style={{color:'gold', fontSize:'2rem', fontWeight:'bold', fontStyle:'italic', textTransform:'none'}}>Username:  &nbsp;&nbsp; <a style={{color:'lightblue'}}> {profile.username}</a></div>\n</article>\n\n<h1 className='h18'></h1>\n</div>\n    <div className='col-md-2 m-auto'></div>\n  {/* <div className=\"cardo cardo1\">\n    <div className=\"border\">\n      <h2>Ben Stiller</h2>\n      <div className=\"icons\">\n        <i className=\"fa fa-codepen\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-dribbble\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </div>\n  <div className=\"cardo cardo2\">\n    <div className=\"border\">\n      <h2>Patrick Stewart</h2>\n      <div className=\"icons\">\n        <i className=\"fa fa-codepen\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-dribbble\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </div> */}\n\n\n{/* {TripItem} */}\n\n</div>\n\n\n<div className='col-md-5 m-auto float-right'>\n<div className=\"cardy-container\">\n  <div className=\"cardy\">\n    <h3>Your Profile Info</h3><br/>\n    <div className='colorgreen'>\n    <p>BIO: {profile.bio} </p>\n    <br/>\n    <br/>\n    <p>A: {profile.age} </p>\n    <p>S: {profile.gender} </p>\n    <p>L: {profile.location} </p>\n    <br/>\n    </div>\n    <div className=\"layers\">\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>\n      <div className=\"layer\"></div>   \n    </div>\n  </div> \n</div>\n</div>\n\n</div>\n\n\n</>\n  );\n  useEffect(() => {\n    instance\n      .get(`${url}/${id}`)\n      .then((res) => {\n        setProfile(res.data);\n      })\n      .catch((err) => {\n        console.log('Error from ShowTripDetails');\n      });\n      \n  }, [id]);\n\n  return (<div>\n    <div className='ShowTripDetails' style={{\n      backgroundImage: \"url(\" + require(\"/src/img/bgizzle.jpeg\") + \")\",\n      backgroundSize:\"cover\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundPosition:\"center\",\n    }}>\n      <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n        <div className='row'>\n          <div className='col-md-10 m-auto'>\n            <Link to='/dashboard' className='btn btn1 btn-outline-warning float-left'>\n              Show My Trips\n            </Link>\n            <Link to='/' className='btn btn1 btn-outline-warning float-right'>\n              Show All Trips\n            </Link>\n          </div>\n         \n         \n          </div>\n\n        <div className='row'>\n\n          <div className='col-md-8 m-auto'>\n            <h1 className='display-4 text-center' style={{color:'#FFC000'}}>Profile's Record</h1>\n            <p className='lead text-center'>View Profile's Info</p>\n            <hr /> <br />\n          </div>\n          </div>\n\n        <div className='row'>\n          <div className='col-md-10 m-auto'>{ProfileItem}</div>\n          </div>\n          <br />\n          <br />\n\n        <div className='row'>\n          <div className='col-md-8 center m-auto'>\n            <Link\n              to={`/edit-profile/${profile._id}`}\n              className='btn btn1 btn-outline-info btn-lg btn-block'\n            >\n              Edit Profile\n            </Link>\n          </div>\n        </div>\n      <br/>\n      <br/>\n    </div></div>\n  );\n}\n\nexport default ShowProfile;\n","import React, { useState, useEffect, Profiler } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\nexport const setAuthToken = token => {\n  if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  }\n  else\n      delete axios.defaults.headers.common[\"Authorization\"];\n}\n\nimport './styles.module.css';\nimport { useSpring, animated } from '@react-spring/web'\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n//4.\nimport {useAuth} from '../hooks/useAuth'\nconst url = \"http://35.171.2.96:3100/profiles\";\n// const url = \"http://localhost:3100/profiles\";\n\n// const httpsAgent = new https.Agent({ rejectUnauthorized: false, \n//   key: require('../../src/key.pem'),\n//   ca: require('../../src/ca.pem')\n// });\n\n\n\n\nconst Profile = (props) => {\n  const [profile, setProfile] = useState({\n    userid:'',\n    location: '',\n    active: '',\n    age: '',\n    bio: '',\n    gender: '',\n    username: '',\n  photo:'',\nfileName:''  });\nconst {user} = useAuth();\n\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n  // if (!open){\n  //   window.scrollTo({ top: 0, behavior:\"smooth\"});\n  // }\n\n\n  // async function getUserInfo() {\n  //   const user = await Auth.currentAuthenticatedUser();\n  //   setUserInfo(user.attributes);\n  // }\n\n  \n  // const img = 'http://localhost:3100/images/'+profile.fileName\n\n\n  const onChange = (e) => {\n    setProfile({ ...profile, [e.target.name]: e.target.value });\n  };\n  const handlePhoto = (e) => {\n    setProfile({ ...profile, photo: e.target.files[0] });\nconsole.log(profile.photo);\n\n  };\n\n  const navigate = useNavigate();\n\n\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n  const formData = new FormData();\n  formData.append('username',user.username);\n  formData.append('active',true);\n  formData.append('userid',profile._id);\n  \n  formData.append('age',profile.age);\n  formData.append('bio',profile.bio);\n  formData.append('gender',profile.gender);\n  formData.append('location',profile.location);\n  formData.append('photo',profile.photo);\nformData.append('fileName',profile.fileName);\n\n\n\n  const instance = axios.create(\n    {  baseURL: url,\n    headers: {\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',   \n      'Content-Type': 'multipart/form-data, application/x-www-form-urlencoded, '\n  } });\n    \ninstance.post(url, formData)\n      .then((res) => {\n        setProfile({\n          userid:'',\n          active:'',\n            location: '',\n            username: '',\n            bio: '',\n            gender: '',\n            age: '',\n          photo:'',\n          fileName:''\n               });\n               user.active = true;\n               user.id= profile._id;\n               \n               navigate('/dashboard');\n\n            })\n            .catch((err) => {\n              console.log('Error in CreateBook!');\n            });\n      }\n      // useEffect(() => {\n      //   getUserInfo();\n      //     }, []);\n  return (\n    <div>\n \n\n\n\n<div className='CreateTrip' style={{\n          backgroundImage: \"url(\" + require(\"/src/img/bg1.jpg\") + \")\",\n          backgroundSize:\"cover\",\n          backgroundRepeat:\"no-repeat\",\n          backgroundPosition:\"center\",\n        }}>\n      <div className=\"vert\"></div>\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div className='container' onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n        <br/>\n        <div className='row'>\n          {/* <div className='col-md-8 m-auto'>\n            <br />\n            <Link to='/dashboard' className='btn btn-outline-warning float-left'>\n              Show Dashboard\n            </Link>\n          </div> */}\n          <div className='col-md-8 m-auto'>\n            <h1 style={{color:'#FFC000'}} className='display-4 text-center'>Complete your profile.</h1>\n            <p className='lead text-center'>Add any information you would like visible.</p>\n\n            <form noValidate onSubmit={onSubmit} encType='multipart/form-data'>\n            \n\n              <div className='form-group'>\n                <textarea\n                  type='text'\n                  placeholder='Biography section'\n                  name='bio'\n                  className='form-control'\n                  value={profile.bio}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className='form-group'>\n                <input\n                  type='text'\n                  placeholder='Gender'\n                  name='gender'\n                  className='form-control'\n                  value={profile.gender}\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className='form-group'>\n                <input\n                  type='number'\n                  placeholder='Age'\n                  name='age'\n                  className='form-control'\n                  value={profile.age}\n                  onChange={onChange}\n                />\n              </div>\n              <div className='form-group'>\n                <input\n                  type='text'\n                  placeholder='Location'\n                  name='location'\n                  className='form-control'\n                  value={profile.location}\n                  onChange={onChange}\n                />\n              </div>\n              <div className='form-group'>\n                <input\n                  type='file'\n                  accept='.png, .jpg, .jpeg'\n                  name='photo'\n                  className='form-control'\n                  onChange={handlePhoto}\n                />\n              </div>\n\n              <input\n                type='submit'\n                className='btn btn-outline-warning btn-block mt-4'\n              />\n            </form>\n            <br/>\n            <br/>\n            <br/>\n          </div>\n        </div>\n    </div>\n\n\n</div>\n   \n  );\n}\n\nexport default Profile;","import React, { useState, useContext } from 'react';\nimport Dashboard from './Dashboard';\n//2.\nimport PropTypes from 'prop-types';\nimport { useSpring, animated } from '@react-spring/web'\nimport { useNavigate, useLocation} from \"react-router-dom\";\n\nimport axios from 'axios';\n\n//3.\nimport '@aws-amplify/ui-react/styles.css';\nimport './styles.module.css';\nimport '../Login.css';\n\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n\nimport { useAuth } from \"../hooks/useAuth\";\n\nasync function loginUser(credentials) {\n  return fetch('http://35.171.2.96:3100/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  })\n    .then(data => data.json())\n }\nexport default function Login({ setToken }) {\n//   let prism = document.querySelector(\".rec-prism\");\n\n// function showSignup(){\n//   prism.style.transform = \"translateZ(-100px) rotateY( -90deg)\";\n// }\n// function showLogin(){\n//   prism.style.transform = \"translateZ(-100px)\";\n// }\n// function showForgotPassword(){\n//   prism.style.transform = \"translateZ(-100px) rotateY( -180deg)\";\n// }\n\n// function showSubscribe(){\n//   prism.style.transform = \"translateZ(-100px) rotateX( -90deg)\";\n// }\n\n// function showContactUs(){\n//   prism.style.transform = \"translateZ(-100px) rotateY( 90deg)\";\n// }\n\n// function showThankYou(){\n//   prism.style.transform = \"translateZ(-100px) rotateX( 90deg)\";\n// }\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from?.pathname || \"/dashboard\";\n  const { auth, setAuth } = useAuth();\n  const [password, setPassword] = useState(\"\");\n\n  const [error, setError] = useState(\"\");\n\n  const API = axios.create({\n    baseURL: \"http://35.171.2.96:3100/auth\",\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const [open, toggle] = useState(false)\n  const [{ freq, factor, scale, opacity }] = useSpring(\n    () => ({\n      reverse: open,\n      from: { factor: 10, opacity: 0, scale: 0.9, freq: '0.0175, 0.0' },\n      to: { factor: 150, opacity: 1, scale: 1, freq: '0.0, 0.0' },\n      config: { duration: 3000 },\n    }),\n    [open]\n  )\n\n    const [username, setUsername] = useState(\"\");\n\n    //register\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      try {\n        const res = await API.post(\"/register\", {\n          username,\n          password\n        }).then((res) => {\n          if (res?.data.username) {\n            const role = res?.data.role;\n            setAuth({ role: `${role}`, username: `${username}` });\n            setUsername(\"\");\n            setPassword(\"\");\n            navigate(from, { replace: true });\n          } else {\n            console.log(\"incorrect submission\");\n            setError(res.message);\n          }\n        });\n      } catch (err) {\n        if (!err?.response) {\n          setError(\"no server response\");\n        } else {\n          setError(\"registration failed\");\n        }\n      }\n    };\n\n    //login\n\n\n    const { login } = useAuth();\n    const handleLogin = async (e) => {\n     try{ e.preventDefault();\n      // Here you would usually send a request to your backend to authenticate the user\n      const token = await loginUser({\n        username,\n        password\n      });\n      setToken(token);\n      } catch (err) {\n        if (!err?.response) {\n          setError(\"no server response\");\n        } else {\n          setError(\"login failed\");\n        }\n      }\n      await login({ username });\n     \n    };\n   \n  return (<>\n    \n    <div className='Login' style={{\n      backgroundImage: \"url(\" + require(\"/src/img/bg3.jpeg\") + \")\",\n      backgroundSize:\"cover\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundPosition:\"center\",\n    }}>       \n    \n    <div className=\"vert\"></div>\n\n          <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n            <h4 className='text-center' style={{color:'#FFC000'}}> \n            <div onClick={()=>window.scrollTo({ top: 400, behavior:\"smooth\" })}>\n              <div className='container' onClick={() => toggle(!open)}>\n      <animated.svg className='svg' style={{ scale, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"2\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap\n              xChannelSelector=\"R\"\n              yChannelSelector=\"G\"\n              in=\"SourceGraphic\"\n              in2=\"TURB\"\n              result=\"DISP\"\n              scale={factor}\n            />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <path\n            d=\"M 968.4 40.901 L 971 40.901 Q 972.2 42.701 973.3 43.301 Q 975.1 41.101 977.45 40.551 A 15.377 15.377 0 0 1 978.974 40.285 Q 980.489 40.09 982.627 40.029 A 72.832 72.832 0 0 1 984.7 40.001 L 989.7 46.001 L 989.7 53.301 A 16.088 16.088 0 0 0 988.062 53.378 Q 986.41 53.548 985.455 54.093 A 2.826 2.826 0 0 0 984.7 54.701 A 4.322 4.322 0 0 0 983.923 56.086 Q 983.5 57.279 983.5 59.001 L 983.5 60.601 A 1.825 1.825 0 0 0 984.555 60.06 A 2.409 2.409 0 0 0 984.7 59.901 L 987.4 61.701 L 992.4 67.701 A 15.135 15.135 0 0 1 991.648 70.721 Q 990.956 72.594 989.777 73.934 A 8.756 8.756 0 0 1 988.9 74.801 A 9.772 9.772 0 0 1 984.294 76.967 A 13.725 13.725 0 0 1 981.7 77.201 A 9.946 9.946 0 0 1 976.011 75.379 A 14.86 14.86 0 0 1 973.6 73.301 Q 971.763 74.679 970.54 75.471 A 20.445 20.445 0 0 1 969.85 75.901 Q 968.832 76.504 966.592 77.136 A 45.181 45.181 0 0 1 965 77.551 Q 962.077 78.261 956.921 78.378 A 93.619 93.619 0 0 1 954.8 78.401 A 43.051 43.051 0 0 1 943.747 76.916 A 49.95 49.95 0 0 1 941.15 76.151 Q 934.2 73.901 929.4 68.301 Q 924.6 62.701 924.6 54.401 L 924.6 53.301 L 923.4 53.301 L 918.4 47.301 L 918.4 40.001 Q 922.727 40.001 924.539 40.291 A 9.528 9.528 0 0 1 924.6 40.301 L 924.6 18.101 A 16.996 16.996 0 0 1 926.009 11.015 Q 927.889 6.865 932.279 4.257 A 24.354 24.354 0 0 1 936.8 2.201 A 38.413 38.413 0 0 1 946.319 0.176 A 46.587 46.587 0 0 1 950.4 0.001 Q 956.949 0.001 962.009 1.058 A 38.096 38.096 0 0 1 963.3 1.351 Q 968.8 2.701 973.45 5.451 Q 978.1 8.201 980.8 13.001 A 20.973 20.973 0 0 1 983.286 20.676 A 26.721 26.721 0 0 1 983.5 24.101 L 983.5 34.201 L 964.1 34.201 L 959.1 28.201 L 959.1 21.001 L 959 19.401 Q 958.187 19.13 956.721 19.104 A 17.982 17.982 0 0 0 956.4 19.101 A 9.965 9.965 0 0 0 953.427 19.507 Q 950.176 20.523 949.312 24.088 A 12.407 12.407 0 0 0 949 27.001 L 949 40.401 L 953.7 46.001 L 953.7 53.301 Q 952.179 53.39 951.179 53.52 A 17.468 17.468 0 0 0 950.95 53.551 A 3.55 3.55 0 0 0 949.921 53.872 Q 949.367 54.137 948.8 54.601 A 2.913 2.913 0 0 0 947.778 56.354 A 4.391 4.391 0 0 0 947.7 57.201 L 947.8 58.701 A 7.737 7.737 0 0 0 949.016 59.036 Q 950.271 59.284 952.008 59.3 A 26.319 26.319 0 0 0 952.25 59.301 Q 955.1 59.301 957.35 57.701 Q 959.6 56.101 960.2 53.301 L 959.5 53.301 L 954.5 47.301 L 954.5 40.001 Q 957.9 40.001 959.5 40.101 A 11.344 11.344 0 0 1 962.265 40.614 A 7.686 7.686 0 0 1 966.1 43.301 Q 967.1 42.501 968.4 40.901 Z M 125.6 40.901 L 128.2 40.901 A 14.882 14.882 0 0 0 128.915 41.867 Q 129.66 42.785 130.332 43.238 A 3.375 3.375 0 0 0 130.6 43.401 A 9.276 9.276 0 0 1 132.09 41.871 A 6.634 6.634 0 0 1 134.75 40.551 A 15.377 15.377 0 0 1 136.274 40.285 Q 137.789 40.09 139.927 40.029 A 72.832 72.832 0 0 1 142 40.001 L 147 46.001 L 147 53.201 A 15.9 15.9 0 0 0 145.428 53.273 Q 142.859 53.529 142 54.701 Q 140.971 56.105 140.905 58.997 A 17.684 17.684 0 0 0 140.9 59.401 L 140.9 60.401 A 18.429 18.429 0 0 1 140.397 64.806 A 14.211 14.211 0 0 1 138.45 69.301 Q 136 73.001 131.8 74.901 A 38.176 38.176 0 0 1 121.918 77.801 A 51.33 51.33 0 0 1 113.9 78.401 A 48.58 48.58 0 0 1 103.099 77.254 A 37.184 37.184 0 0 1 92.3 73.001 Q 87.6 70.301 84.75 65.501 Q 81.9 60.701 81.9 54.401 L 81.9 53.201 L 80.8 53.201 L 75.8 47.201 L 75.8 40.001 Q 80.091 40.001 81.893 40.3 A 9.523 9.523 0 0 1 81.9 40.301 L 81.9 18.101 A 16.996 16.996 0 0 1 83.309 11.015 Q 85.189 6.865 89.579 4.257 A 24.354 24.354 0 0 1 94.1 2.201 A 38.413 38.413 0 0 1 103.619 0.176 A 46.587 46.587 0 0 1 107.7 0.001 Q 114.249 0.001 119.309 1.058 A 38.096 38.096 0 0 1 120.6 1.351 Q 126.1 2.701 130.75 5.451 Q 135.4 8.201 138.1 13.001 A 20.973 20.973 0 0 1 140.586 20.676 A 26.721 26.721 0 0 1 140.8 24.101 L 140.8 34.201 L 121.4 34.201 L 116.4 28.201 L 116.4 21.001 L 116.3 19.401 Q 115.487 19.13 114.021 19.104 A 17.982 17.982 0 0 0 113.7 19.101 A 9.965 9.965 0 0 0 110.727 19.507 Q 107.476 20.523 106.612 24.088 A 12.407 12.407 0 0 0 106.3 27.001 L 106.3 40.401 L 111 46.001 L 111 53.201 A 13.664 13.664 0 0 0 108.92 53.416 Q 105.1 54.143 105.1 57.201 L 105.1 58.001 A 10.267 10.267 0 0 0 106.702 58.356 Q 107.461 58.465 108.318 58.492 A 18.319 18.319 0 0 0 108.9 58.501 Q 116.3 58.501 117.5 53.201 L 116.8 53.201 L 111.8 47.201 L 111.8 40.001 Q 115.2 40.001 116.8 40.101 A 8.888 8.888 0 0 1 123.082 43.262 A 10.763 10.763 0 0 1 123.2 43.401 Q 124.245 42.736 125.47 41.079 A 19.768 19.768 0 0 0 125.6 40.901 Z M 597.8 51.901 L 597.8 69.901 Q 597.8 73.401 599.6 74.501 L 597.8 77.201 Q 595.2 77.201 592.35 75.901 A 23.138 23.138 0 0 1 590.407 74.909 Q 589.481 74.375 588.743 73.812 A 10.939 10.939 0 0 1 587.9 73.101 A 8.396 8.396 0 0 1 586.627 74.008 Q 585.253 74.823 583.125 75.573 A 36.127 36.127 0 0 1 582.15 75.901 A 28.333 28.333 0 0 1 578.004 76.911 A 22.011 22.011 0 0 1 574.5 77.201 A 22.316 22.316 0 0 1 569.233 76.612 A 15.876 15.876 0 0 1 562.6 73.301 A 14.574 14.574 0 0 1 558.504 76.1 A 12.736 12.736 0 0 1 553.25 77.201 A 11.115 11.115 0 0 1 547 75.228 Q 545.219 74.045 543.55 72.151 A 24.573 24.573 0 0 1 540.553 67.99 A 17.27 17.27 0 0 1 538.4 61.701 L 541.2 59.901 Q 541.577 60.505 542.524 60.653 A 4.387 4.387 0 0 0 543.2 60.701 A 3.277 3.277 0 0 0 546.321 58.613 Q 547.061 57.061 547.178 54.358 A 24.456 24.456 0 0 0 547.2 53.301 L 546.2 53.301 L 541.2 47.301 L 541.2 40.001 Q 545.33 40.001 547.043 40.291 A 8.454 8.454 0 0 1 547.1 40.301 L 547.1 21.301 L 544.3 21.301 L 539.3 15.301 L 539.3 1.201 L 593 1.201 L 598 7.201 L 598 31.601 L 586.4 31.601 L 581.4 25.601 L 581.4 21.301 L 570.7 21.301 L 570.7 27.101 L 577.8 27.101 L 582.8 33.101 L 582.8 44.701 L 575.3 44.701 L 576.4 46.001 L 576.4 53.301 Q 574.969 53.39 574.018 53.52 A 16.166 16.166 0 0 0 573.8 53.551 A 3.338 3.338 0 0 0 572.906 53.826 Q 572.319 54.095 571.7 54.601 A 2.913 2.913 0 0 0 570.678 56.354 A 4.391 4.391 0 0 0 570.6 57.201 L 570.6 57.601 A 6.812 6.812 0 0 0 571.592 57.865 Q 572.641 58.068 574.108 58.096 A 25.27 25.27 0 0 0 574.6 58.101 A 8.311 8.311 0 0 0 579.066 56.787 A 10.235 10.235 0 0 0 579.5 56.501 A 5.266 5.266 0 0 0 581.207 54.611 Q 581.726 53.616 581.791 52.364 A 7.013 7.013 0 0 0 581.8 52.001 A 2.065 2.065 0 0 0 581.779 51.747 Q 581.704 51.174 581.36 49.751 A 84.369 84.369 0 0 0 581.2 49.101 L 581.2 45.901 L 592.8 45.901 L 597.8 51.901 Z M 522 70.101 L 522 77.201 A 83.299 83.299 0 0 1 519.631 77.17 Q 517.359 77.105 515.869 76.905 A 13.313 13.313 0 0 1 514.7 76.701 A 6.412 6.412 0 0 1 511.629 75.004 A 8.469 8.469 0 0 1 510.9 74.201 Q 510.1 74.701 508.4 77.501 L 507.8 78.401 L 498.3 78.401 A 41.851 41.851 0 0 0 497.468 77.004 Q 496.254 75.06 495.449 74.385 A 2.384 2.384 0 0 0 495.2 74.201 A 7.463 7.463 0 0 1 493.828 75.622 A 5.755 5.755 0 0 1 491.6 76.701 Q 489.5 77.201 484.2 77.201 L 479.2 70.201 L 479.2 64.101 A 3.958 3.958 0 0 0 482.42 61.624 Q 482.774 60.8 482.912 59.709 A 12.041 12.041 0 0 0 483 58.201 Q 483 56.001 482.3 53.701 A 5.537 5.537 0 0 0 480.727 53.26 A 7.054 7.054 0 0 0 479.8 53.201 L 474.8 47.201 L 474.8 40.001 L 477.4 40.001 L 473.2 21.301 L 470.4 21.301 L 465.4 15.301 L 465.4 1.201 L 493.2 1.201 L 498.2 7.201 L 498.2 21.301 L 493.1 21.301 L 497.3 41.301 L 499.8 44.301 L 499.8 40.001 L 502.8 40.001 L 506.9 20.201 L 502.8 15.301 L 502.8 1.201 L 530.6 1.201 L 535.6 7.201 L 535.6 21.301 L 529.1 21.301 L 524.2 43.301 L 526.5 46.001 L 526.5 53.201 A 7.255 7.255 0 0 0 523.073 54.099 Q 521.517 54.974 520.4 56.701 Q 518.2 60.101 518.2 64.201 A 11.022 11.022 0 0 0 518.38 66.287 Q 518.592 67.383 519.054 68.17 A 3.936 3.936 0 0 0 522 70.101 Z M 398.1 15.101 L 398.1 1.201 L 447.1 1.201 L 452.1 7.201 L 452.1 21.101 L 446.9 21.101 L 450.6 40.101 Q 451.284 40.025 452.545 40.007 A 59.292 59.292 0 0 1 453.4 40.001 L 458.4 46.001 L 459.6 53.201 Q 454.97 53.201 454.31 56.73 A 6.918 6.918 0 0 0 454.2 58.001 A 18.806 18.806 0 0 0 454.217 58.836 Q 454.299 60.669 454.773 60.875 A 0.314 0.314 0 0 0 454.9 60.901 Q 456.151 60.901 456.59 60.359 A 1.039 1.039 0 0 0 456.8 59.901 L 460 61.801 L 465 67.801 A 15.552 15.552 0 0 1 464.793 70.431 Q 464.551 71.835 464.029 72.94 A 6.759 6.759 0 0 1 462.65 74.901 A 7.978 7.978 0 0 1 457.658 77.155 A 10.768 10.768 0 0 1 456.65 77.201 A 12.999 12.999 0 0 1 453.511 76.788 Q 451.091 76.185 448.3 74.701 Q 445.028 76.912 441.913 77.168 A 9.927 9.927 0 0 1 441.1 77.201 Q 435.662 77.201 430.86 72.411 A 24.14 24.14 0 0 1 430.75 72.301 A 29.541 29.541 0 0 1 426.895 67.553 A 22.806 22.806 0 0 1 424.2 61.801 L 426.6 59.901 Q 427.4 60.901 428.9 60.901 A 3.964 3.964 0 0 0 430.305 60.672 Q 432.048 60.014 432.188 57.461 A 8.41 8.41 0 0 0 432.2 57.001 L 431.9 54.701 A 8.268 8.268 0 0 0 429.715 53.936 Q 428.741 53.734 427.621 53.706 A 14.656 14.656 0 0 0 427.25 53.701 A 9.453 9.453 0 0 0 422.491 55.004 A 11.52 11.52 0 0 0 422 55.301 A 7.964 7.964 0 0 0 418.632 59.796 A 10.067 10.067 0 0 0 418.6 59.901 L 421 61.801 L 426 67.801 A 16.195 16.195 0 0 1 424.624 71.114 A 11.435 11.435 0 0 1 421.35 74.851 A 12.657 12.657 0 0 1 417.892 76.65 A 10.934 10.934 0 0 1 414.45 77.201 A 12.101 12.101 0 0 1 410.503 76.506 Q 409.03 75.999 407.506 75.124 A 21.98 21.98 0 0 1 406.8 74.701 A 23.601 23.601 0 0 1 403.557 76.212 Q 400.89 77.201 398.5 77.201 Q 393.3 77.201 389.35 72.201 A 19.981 19.981 0 0 1 386.738 67.951 A 14.989 14.989 0 0 1 385.4 61.801 L 388.5 59.901 A 1.062 1.062 0 0 0 389.15 60.681 Q 389.63 60.901 390.45 60.901 Q 392.138 60.901 393.734 58.667 A 11.361 11.361 0 0 0 393.85 58.501 Q 395.5 56.101 395.9 53.201 L 390.6 47.201 L 391.8 40.001 Q 395.436 40.001 397.57 40.43 A 11.064 11.064 0 0 1 398.3 40.601 L 402.3 20.201 L 398.1 15.101 Z M 293.9 21.301 L 290.4 21.301 L 290.4 40.001 L 291.2 40.001 L 296.2 46.001 L 296.2 53.301 Q 293.409 53.301 292.026 54.018 A 2.754 2.754 0 0 0 291.15 54.701 Q 290.073 56.012 290.005 58.812 A 15.854 15.854 0 0 0 290 59.201 L 290 60.701 A 1.185 1.185 0 0 0 290.792 60.392 Q 291.011 60.204 291.2 59.901 L 294 61.701 L 299 67.701 A 14.702 14.702 0 0 1 298.328 70.66 Q 297.438 73.226 295.6 74.801 Q 292.8 77.201 288.85 77.201 A 12.211 12.211 0 0 1 283.52 75.939 A 16.527 16.527 0 0 1 281.1 74.501 A 15.481 15.481 0 0 1 277.605 76.394 A 12.246 12.246 0 0 1 273.25 77.201 Q 269.2 77.201 264 72.401 A 20.808 20.808 0 0 1 260.639 68.483 A 15.095 15.095 0 0 1 258.2 61.701 L 261 59.901 A 1.358 1.358 0 0 0 261.774 60.619 Q 262.039 60.726 262.38 60.77 A 4.066 4.066 0 0 0 262.9 60.801 Q 266.929 60.801 267.183 54.217 A 23.775 23.775 0 0 0 267.2 53.301 L 266 53.301 L 261 47.301 L 261 40.001 Q 265.1 40.001 266.8 40.301 L 266.8 21.301 L 263.9 21.301 L 263.9 31.601 L 252.3 31.601 L 247.3 25.601 L 247.3 1.201 L 304.9 1.201 L 309.9 7.201 L 309.9 31.601 L 298.9 31.601 L 293.9 25.601 L 293.9 21.301 Z M 352.8 56.401 L 352.8 53.301 L 351.6 53.301 Q 348.872 53.301 347.538 53.986 A 2.528 2.528 0 0 0 346.65 54.701 Q 345.694 55.975 345.608 58.658 A 16.992 16.992 0 0 0 345.6 59.201 L 345.6 60.701 Q 346.2 60.401 346.6 59.901 L 354.4 67.701 A 14.702 14.702 0 0 1 353.728 70.66 Q 352.838 73.226 351 74.801 Q 348.2 77.201 344.4 77.201 Q 340.81 77.201 337.041 74.791 A 21.292 21.292 0 0 1 336.6 74.501 A 18.015 18.015 0 0 1 333.521 76.192 Q 331.499 77.043 329.53 77.176 A 10.799 10.799 0 0 1 328.8 77.201 A 11.606 11.606 0 0 1 322.1 75.026 Q 320.447 73.887 318.9 72.151 Q 314.527 67.243 313.742 62.005 A 15.57 15.57 0 0 1 313.7 61.701 L 316.5 59.901 A 1.516 1.516 0 0 0 317.23 60.546 Q 317.795 60.801 318.7 60.801 Q 320.4 60.801 321.35 59.451 A 7.279 7.279 0 0 0 321.99 58.362 Q 322.312 57.678 322.421 57.006 A 4.401 4.401 0 0 0 322.45 56.801 A 18.292 18.292 0 0 0 322.529 55.901 Q 322.595 54.886 322.6 53.5 A 62.79 62.79 0 0 0 322.6 53.301 L 321.5 53.301 L 316.5 47.301 L 316.5 40.001 Q 320.6 40.001 322.3 40.301 L 322.3 21.301 L 319.5 21.301 L 314.5 15.301 L 314.5 1.201 L 350.4 1.201 A 38.287 38.287 0 0 1 359.304 2.177 A 25.663 25.663 0 0 1 371.9 9.101 Q 379.7 17.001 379.7 29.201 A 31.001 31.001 0 0 1 378.958 36.211 Q 377.835 41.047 375.015 44.475 A 18.25 18.25 0 0 1 372.1 47.301 A 20.51 20.51 0 0 1 375.194 55.964 A 26.293 26.293 0 0 1 375.4 59.301 L 375.4 60.701 A 3.237 3.237 0 0 0 375.99 60.376 A 2.462 2.462 0 0 0 376.5 59.901 L 379.2 61.701 L 384.2 67.701 Q 383.809 71.612 381.765 73.841 A 7.791 7.791 0 0 1 380.5 74.951 A 10.061 10.061 0 0 1 377.875 76.232 Q 374.963 77.201 370.5 77.201 Q 363.7 77.201 358.25 71.351 A 20.086 20.086 0 0 1 353.025 59.964 A 27.385 27.385 0 0 1 352.8 56.401 Z M 642 7.201 L 642 21.301 L 636 21.301 L 636 40.001 L 636.7 40.001 L 641.7 46.001 L 641.7 53.301 Q 640.269 53.39 639.318 53.52 A 16.166 16.166 0 0 0 639.1 53.551 A 3.338 3.338 0 0 0 638.206 53.826 Q 637.619 54.095 637 54.601 A 2.913 2.913 0 0 0 635.978 56.354 A 4.391 4.391 0 0 0 635.9 57.201 L 635.9 57.601 A 6.812 6.812 0 0 0 636.892 57.865 Q 637.941 58.068 639.408 58.096 A 25.27 25.27 0 0 0 639.9 58.101 A 8.311 8.311 0 0 0 644.366 56.787 A 10.235 10.235 0 0 0 644.8 56.501 A 5.266 5.266 0 0 0 646.507 54.611 Q 647.026 53.616 647.091 52.364 A 7.013 7.013 0 0 0 647.1 52.001 A 2.065 2.065 0 0 0 647.079 51.747 Q 647.004 51.174 646.66 49.751 A 84.369 84.369 0 0 0 646.5 49.101 L 646.5 45.901 L 658.1 45.901 L 663.1 51.901 L 663.1 69.901 Q 663.1 73.401 664.9 74.501 L 663.1 77.201 Q 660.5 77.201 657.65 75.901 A 23.138 23.138 0 0 1 655.707 74.909 Q 654.781 74.375 654.043 73.812 A 10.939 10.939 0 0 1 653.2 73.101 A 8.396 8.396 0 0 1 651.927 74.008 Q 650.553 74.823 648.425 75.573 A 36.127 36.127 0 0 1 647.45 75.901 A 28.333 28.333 0 0 1 643.304 76.911 A 22.011 22.011 0 0 1 639.8 77.201 A 22.316 22.316 0 0 1 634.533 76.612 A 15.876 15.876 0 0 1 627.9 73.301 A 14.574 14.574 0 0 1 623.804 76.1 A 12.736 12.736 0 0 1 618.55 77.201 A 11.115 11.115 0 0 1 612.3 75.228 Q 610.519 74.045 608.85 72.151 A 24.573 24.573 0 0 1 605.853 67.99 A 17.27 17.27 0 0 1 603.7 61.701 L 606.5 59.901 Q 606.877 60.505 607.824 60.653 A 4.387 4.387 0 0 0 608.5 60.701 A 3.277 3.277 0 0 0 611.621 58.613 Q 612.361 57.061 612.478 54.358 A 24.456 24.456 0 0 0 612.5 53.301 L 611.5 53.301 L 606.5 47.301 L 606.5 40.001 Q 610.63 40.001 612.343 40.291 A 8.454 8.454 0 0 1 612.4 40.301 L 612.4 21.301 L 611.6 21.301 L 606.6 15.301 L 606.6 1.201 L 637 1.201 L 642 7.201 Z M 820.5 7.201 L 820.5 21.301 L 814.5 21.301 L 814.5 40.001 L 815.2 40.001 L 820.2 46.001 L 820.2 53.301 Q 818.769 53.39 817.818 53.52 A 16.166 16.166 0 0 0 817.6 53.551 A 3.338 3.338 0 0 0 816.706 53.826 Q 816.119 54.095 815.5 54.601 A 2.913 2.913 0 0 0 814.478 56.354 A 4.391 4.391 0 0 0 814.4 57.201 L 814.4 57.601 A 6.812 6.812 0 0 0 815.392 57.865 Q 816.441 58.068 817.908 58.096 A 25.27 25.27 0 0 0 818.4 58.101 A 8.311 8.311 0 0 0 822.866 56.787 A 10.235 10.235 0 0 0 823.3 56.501 A 5.266 5.266 0 0 0 825.007 54.611 Q 825.526 53.616 825.591 52.364 A 7.013 7.013 0 0 0 825.6 52.001 A 2.065 2.065 0 0 0 825.579 51.747 Q 825.504 51.174 825.16 49.751 A 84.369 84.369 0 0 0 825 49.101 L 825 45.901 L 836.6 45.901 L 841.6 51.901 L 841.6 69.901 Q 841.6 73.401 843.4 74.501 L 841.6 77.201 Q 839 77.201 836.15 75.901 A 23.138 23.138 0 0 1 834.207 74.909 Q 833.281 74.375 832.543 73.812 A 10.939 10.939 0 0 1 831.7 73.101 A 8.396 8.396 0 0 1 830.427 74.008 Q 829.053 74.823 826.925 75.573 A 36.127 36.127 0 0 1 825.95 75.901 A 28.333 28.333 0 0 1 821.804 76.911 A 22.011 22.011 0 0 1 818.3 77.201 A 22.316 22.316 0 0 1 813.033 76.612 A 15.876 15.876 0 0 1 806.4 73.301 A 14.574 14.574 0 0 1 802.304 76.1 A 12.736 12.736 0 0 1 797.05 77.201 A 11.115 11.115 0 0 1 790.8 75.228 Q 789.019 74.045 787.35 72.151 A 24.573 24.573 0 0 1 784.353 67.99 A 17.27 17.27 0 0 1 782.2 61.701 L 785 59.901 Q 785.377 60.505 786.324 60.653 A 4.387 4.387 0 0 0 787 60.701 A 3.277 3.277 0 0 0 790.121 58.613 Q 790.861 57.061 790.978 54.358 A 24.456 24.456 0 0 0 791 53.301 L 790 53.301 L 785 47.301 L 785 40.001 Q 789.13 40.001 790.843 40.291 A 8.454 8.454 0 0 1 790.9 40.301 L 790.9 21.301 L 790.1 21.301 L 785.1 15.301 L 785.1 1.201 L 815.5 1.201 L 820.5 7.201 Z M 199.4 46.001 L 199.4 53.301 A 98.773 98.773 0 0 0 198.316 53.307 Q 196.975 53.321 196.271 53.376 A 8.268 8.268 0 0 0 196 53.401 A 7.233 7.233 0 0 0 193.51 54.355 Q 191.685 55.518 191.085 57.831 A 9.647 9.647 0 0 0 190.8 59.901 L 193.3 61.801 L 198.3 67.801 A 16.858 16.858 0 0 1 196.861 71.114 A 11.829 11.829 0 0 1 193.55 74.851 A 12.508 12.508 0 0 1 189.861 76.719 A 11.129 11.129 0 0 1 186.6 77.201 A 11.828 11.828 0 0 1 181.917 76.2 A 16.34 16.34 0 0 1 179.2 74.701 A 20.928 20.928 0 0 1 175.837 76.296 Q 173.346 77.201 171 77.201 Q 165.5 77.201 161.55 72.251 A 19.323 19.323 0 0 1 158.85 67.814 A 15.138 15.138 0 0 1 157.6 61.801 L 160.5 59.901 Q 161.1 60.901 162.4 60.901 Q 164.735 60.901 166.061 59.046 A 5.884 5.884 0 0 0 166.35 58.601 A 10.514 10.514 0 0 0 167.672 54.757 A 13.094 13.094 0 0 0 167.8 53.301 L 162.8 47.301 L 162.8 40.001 L 167.2 40.001 A 20.305 20.305 0 0 1 168.714 40.054 Q 169.447 40.109 170.085 40.221 A 10.984 10.984 0 0 1 170.5 40.301 L 174.3 21.301 L 168.1 21.301 L 168.1 31.601 L 156.5 31.601 L 151.5 25.601 L 151.5 1.201 L 200.4 1.201 L 205.4 7.201 L 205.4 21.301 L 199.7 21.301 L 195.3 41.101 L 199.4 46.001 Z M 780.1 46.001 L 780.1 53.301 A 15.645 15.645 0 0 0 778.489 53.378 Q 776.802 53.553 775.844 54.13 A 2.68 2.68 0 0 0 775 54.901 A 4.718 4.718 0 0 0 774.432 56.09 Q 774.023 57.32 773.928 59.208 A 23.92 23.92 0 0 0 773.9 60.401 A 13.988 13.988 0 0 1 765.825 73.752 Q 759.808 76.854 749.307 77.166 A 81.002 81.002 0 0 1 746.9 77.201 A 96.171 96.171 0 0 1 743.494 77.145 Q 738.75 76.976 736.2 76.301 Q 732.8 75.401 729.9 73.301 A 14.294 14.294 0 0 1 727.137 75.6 A 10.068 10.068 0 0 1 721.7 77.201 A 12.918 12.918 0 0 1 712.959 73.804 A 18.302 18.302 0 0 1 711.35 72.201 A 24.402 24.402 0 0 1 708.245 67.893 A 17.929 17.929 0 0 1 706.1 61.701 L 708.8 59.901 A 1.746 1.746 0 0 0 709.541 60.458 Q 710.119 60.701 711 60.701 A 3.31 3.31 0 0 0 712.43 60.398 Q 713.092 60.086 713.6 59.451 A 6.282 6.282 0 0 0 714.362 58.257 A 4.87 4.87 0 0 0 714.8 56.851 A 15.084 15.084 0 0 0 714.905 55.924 Q 715 54.814 715 53.301 L 713.8 53.301 L 708.8 47.301 L 708.8 40.001 Q 713.127 40.001 714.939 40.291 A 9.528 9.528 0 0 1 715 40.301 L 715 21.301 L 713.9 21.301 L 708.9 15.301 L 708.9 1.201 L 745.1 1.201 A 35.59 35.59 0 0 1 752.837 1.995 Q 758.403 3.234 762.507 6.405 A 22.279 22.279 0 0 1 763.65 7.351 A 19.707 19.707 0 0 1 769.623 17.285 Q 770.6 20.939 770.6 25.401 A 20.51 20.51 0 0 1 769.261 32.883 A 19.083 19.083 0 0 1 766.9 37.201 Q 768.1 38.501 769.4 40.201 A 17.105 17.105 0 0 1 770.348 40.114 Q 771.941 40.006 774.821 40.001 A 162.946 162.946 0 0 1 775.1 40.001 L 780.1 46.001 Z M 67.7 25.401 L 67.7 40.001 L 69 40.001 L 74 46.001 L 74 53.301 A 15.645 15.645 0 0 0 72.389 53.378 Q 70.702 53.553 69.744 54.13 A 2.68 2.68 0 0 0 68.9 54.901 A 4.718 4.718 0 0 0 68.332 56.09 Q 67.923 57.32 67.828 59.208 A 23.92 23.92 0 0 0 67.8 60.401 A 13.988 13.988 0 0 1 59.725 73.752 Q 53.708 76.854 43.207 77.166 A 81.002 81.002 0 0 1 40.8 77.201 A 96.171 96.171 0 0 1 37.394 77.145 Q 32.65 76.976 30.1 76.301 Q 26.7 75.401 23.8 73.301 A 14.294 14.294 0 0 1 21.037 75.6 A 10.068 10.068 0 0 1 15.6 77.201 A 12.918 12.918 0 0 1 6.859 73.804 A 18.302 18.302 0 0 1 5.25 72.201 A 24.402 24.402 0 0 1 2.145 67.893 A 17.929 17.929 0 0 1 0 61.701 L 2.7 59.901 A 1.746 1.746 0 0 0 3.441 60.458 Q 4.019 60.701 4.9 60.701 A 3.31 3.31 0 0 0 6.33 60.398 Q 6.992 60.086 7.5 59.451 A 6.282 6.282 0 0 0 8.262 58.257 A 4.87 4.87 0 0 0 8.7 56.851 A 15.084 15.084 0 0 0 8.805 55.924 Q 8.9 54.814 8.9 53.301 L 7.7 53.301 L 2.7 47.301 L 2.7 40.001 Q 7.027 40.001 8.839 40.291 A 9.528 9.528 0 0 1 8.9 40.301 L 8.9 21.301 L 8.1 21.301 L 3.1 15.301 L 3.1 1.201 L 37.5 1.201 Q 49.5 1.201 58.2 6.601 Q 62.6 9.401 65.15 14.251 A 22.073 22.073 0 0 1 67.451 21.605 A 28.095 28.095 0 0 1 67.7 25.401 Z M 442.4 65.101 L 443 65.101 A 20.219 20.219 0 0 0 445.917 67.002 Q 448.761 68.501 451.45 68.501 Q 455.5 68.501 456.8 63.301 Q 456.39 63.629 455.711 63.688 A 3.593 3.593 0 0 1 455.4 63.701 A 7.086 7.086 0 0 1 450.393 61.635 A 11.185 11.185 0 0 1 448.95 59.951 Q 446.3 56.201 446.3 52.801 A 13.677 13.677 0 0 1 446.563 49.996 Q 447.455 45.753 451.373 44.974 A 8.382 8.382 0 0 1 451.8 44.901 L 451.4 42.501 Q 449.5 42.501 448.55 42.651 A 2.922 2.922 0 0 0 447.864 42.857 Q 447.257 43.116 446.538 43.664 A 10.839 10.839 0 0 0 446.3 43.851 Q 445 44.901 444.1 47.101 A 5.779 5.779 0 0 1 442.453 46.521 Q 441.038 45.792 439.431 44.233 A 23.443 23.443 0 0 1 438.9 43.701 A 8.69 8.69 0 0 1 438.06 44.988 A 6.964 6.964 0 0 1 437.25 45.851 Q 436.3 46.701 435.1 47.101 A 11.984 11.984 0 0 0 429.602 43.356 Q 427.57 42.647 425.063 42.415 A 27.775 27.775 0 0 0 422.5 42.301 A 24.766 24.766 0 0 0 418.002 42.681 Q 415.544 43.136 413.655 44.135 A 10.793 10.793 0 0 0 410.1 47.101 Q 407.8 46.701 406.2 43.701 Q 404.187 45.882 402.033 46.796 A 8.611 8.611 0 0 1 401.2 47.101 A 10.927 10.927 0 0 0 400.528 45.724 Q 399.836 44.54 398.95 43.851 Q 397.675 42.859 396.712 42.67 A 2.54 2.54 0 0 0 396.6 42.651 A 10.677 10.677 0 0 0 395.907 42.573 Q 395.166 42.511 394.142 42.502 A 40.457 40.457 0 0 0 393.8 42.501 L 393.4 44.901 A 7.404 7.404 0 0 1 395.225 45.389 A 5.216 5.216 0 0 1 397.55 47.251 A 6.758 6.758 0 0 1 398.449 49.172 Q 398.9 50.678 398.9 52.701 A 10.413 10.413 0 0 1 398.174 56.434 Q 397.647 57.812 396.738 59.227 A 19.769 19.769 0 0 1 396.25 59.951 A 10.972 10.972 0 0 1 394.494 61.926 A 6.837 6.837 0 0 1 389.9 63.701 L 388.5 63.301 Q 389.159 65.938 390.499 67.237 A 4.484 4.484 0 0 0 393.75 68.501 A 10.692 10.692 0 0 0 397.443 67.803 Q 399.739 66.96 402.2 65.101 L 402.8 65.101 Q 406.2 68.501 409.6 68.501 A 7.639 7.639 0 0 0 414.58 66.619 Q 416.085 65.373 417.4 63.301 A 3.807 3.807 0 0 1 416.058 63.679 A 4.675 4.675 0 0 1 415.6 63.701 A 7.757 7.757 0 0 1 413.35 63.403 Q 410 62.387 410 57.901 Q 410 52.101 413.8 48.751 Q 417.6 45.401 422.6 45.401 Q 427.6 45.401 431.4 48.751 A 11.011 11.011 0 0 1 435.061 55.77 A 15.756 15.756 0 0 1 435.2 57.901 Q 435.2 62.956 430.946 63.605 A 8.933 8.933 0 0 1 429.6 63.701 L 427.7 63.301 A 14.559 14.559 0 0 0 429.619 65.815 Q 431.022 67.263 432.65 67.93 A 7.701 7.701 0 0 0 435.6 68.501 Q 438.691 68.501 441.626 65.849 A 16.425 16.425 0 0 0 442.4 65.101 Z M 850.6 54.401 L 850.6 53.301 L 849.6 53.301 L 844.6 47.301 L 844.6 40.001 A 102.23 102.23 0 0 1 846.573 40.019 Q 849.282 40.071 850.579 40.281 A 8.42 8.42 0 0 1 850.7 40.301 L 850.7 18.101 A 17.771 17.771 0 0 1 851.26 13.545 A 14.211 14.211 0 0 1 853.25 9.151 Q 855.8 5.401 860.1 3.501 A 39.942 39.942 0 0 1 870.216 0.601 A 53.507 53.507 0 0 1 878.4 0.001 A 52.29 52.29 0 0 1 888.374 0.898 Q 894.274 2.044 898.949 4.658 A 29.721 29.721 0 0 1 902.05 6.651 A 23.186 23.186 0 0 1 907.91 12.739 Q 911.1 17.689 911.1 24.101 L 911.1 40.001 L 912.2 40.001 L 917.2 46.001 L 917.2 53.301 Q 913.4 53.301 912.3 54.701 A 4.291 4.291 0 0 0 911.64 55.945 Q 911.229 57.12 911.202 58.855 A 15.828 15.828 0 0 0 911.2 59.101 L 911.2 60.401 A 17.74 17.74 0 0 1 910.676 64.806 A 13.93 13.93 0 0 1 908.65 69.301 A 15.73 15.73 0 0 1 902.243 74.656 A 18.894 18.894 0 0 1 901.7 74.901 Q 893.7 78.401 883.4 78.401 Q 869 78.401 859.8 71.551 A 25.384 25.384 0 0 1 854.376 66.182 A 19.502 19.502 0 0 1 850.6 54.401 Z M 946.1 45.001 L 946.1 42.601 Q 944.2 42.601 943.25 42.751 Q 942.418 42.882 941.202 43.704 A 13.331 13.331 0 0 0 940.85 43.951 A 8.284 8.284 0 0 0 939.621 45.059 Q 938.836 45.912 938.1 47.101 A 6.143 6.143 0 0 1 935.785 46.079 Q 934.985 45.521 934.22 44.687 A 13.757 13.757 0 0 1 933.4 43.701 A 9.825 9.825 0 0 1 931.705 45.603 A 7.571 7.571 0 0 1 929 47.101 A 14.103 14.103 0 0 0 927.997 45.674 Q 927.413 44.949 926.793 44.414 A 7.418 7.418 0 0 0 926.2 43.951 A 12.659 12.659 0 0 0 925.41 43.438 Q 924.631 42.975 924.036 42.813 A 2.69 2.69 0 0 0 923.75 42.751 A 9.401 9.401 0 0 0 923.111 42.675 Q 922.266 42.601 921 42.601 L 921 45.001 A 6.094 6.094 0 0 1 924.201 45.799 Q 926.651 47.275 927.225 51.477 A 20.963 20.963 0 0 1 927.4 54.301 A 12.537 12.537 0 0 0 928.235 58.946 A 11.48 11.48 0 0 0 931.2 63.201 Q 937.9 69.501 951.6 69.501 Q 955.598 69.501 958.66 68.842 A 21.638 21.638 0 0 0 959.85 68.551 Q 963.3 67.601 964.65 66.701 Q 966 65.801 968.2 63.901 L 969 63.901 A 32.159 32.159 0 0 0 970.331 65.274 Q 971.036 65.957 971.689 66.487 A 12.906 12.906 0 0 0 972.95 67.401 A 7.19 7.19 0 0 0 976.123 68.459 A 8.995 8.995 0 0 0 977 68.501 A 7.158 7.158 0 0 0 982.896 65.637 A 11.608 11.608 0 0 0 984.3 63.301 A 3.099 3.099 0 0 1 983.876 63.406 Q 983.356 63.501 982.6 63.501 A 9.006 9.006 0 0 1 980.867 63.345 Q 979.841 63.143 979.05 62.682 A 4.636 4.636 0 0 1 978.05 61.901 A 7.764 7.764 0 0 1 976.861 60.335 A 6.159 6.159 0 0 1 976.15 58.401 A 17.076 17.076 0 0 1 975.965 57.087 Q 975.811 55.606 975.801 53.59 A 56.894 56.894 0 0 1 975.8 53.301 A 15.784 15.784 0 0 1 976.064 50.272 Q 977.1 45.001 982.2 45.001 L 982.2 42.601 Q 980.716 42.601 979.776 42.703 A 9.298 9.298 0 0 0 979.4 42.751 Q 978.5 42.886 977.195 43.75 A 13.781 13.781 0 0 0 976.9 43.951 A 8.233 8.233 0 0 0 975.582 45.118 Q 975.016 45.731 974.482 46.513 A 15.746 15.746 0 0 0 974.1 47.101 Q 971.9 46.601 969.7 43.701 A 9.407 9.407 0 0 1 967.849 45.715 A 7.717 7.717 0 0 1 965.2 47.101 A 14.103 14.103 0 0 0 964.197 45.674 Q 963.613 44.949 962.993 44.414 A 7.418 7.418 0 0 0 962.4 43.951 A 11.94 11.94 0 0 0 961.596 43.432 Q 960.782 42.954 960.147 42.8 A 2.807 2.807 0 0 0 959.9 42.751 A 10.677 10.677 0 0 0 959.207 42.673 Q 958.466 42.611 957.442 42.602 A 40.457 40.457 0 0 0 957.1 42.601 L 957.1 45.001 A 8.789 8.789 0 0 1 958.853 45.164 Q 959.867 45.371 960.632 45.839 A 4.307 4.307 0 0 1 961.85 46.951 A 8.948 8.948 0 0 1 962.676 48.274 Q 963.3 49.52 963.3 50.701 A 15.142 15.142 0 0 1 962.93 54.151 Q 962.325 56.741 960.726 58.556 A 9.418 9.418 0 0 1 960.1 59.201 A 10.83 10.83 0 0 1 954.744 61.901 A 15.66 15.66 0 0 1 951.6 62.201 Q 946.3 62.201 943.15 59.201 Q 940 56.201 940 50.701 A 5.601 5.601 0 0 1 940.507 48.415 Q 940.837 47.67 941.383 46.925 A 9.899 9.899 0 0 1 941.4 46.901 Q 942.605 45.265 945.218 45.038 A 10.167 10.167 0 0 1 946.1 45.001 Z M 30.3 45.001 L 30.3 42.601 Q 28.816 42.601 27.876 42.703 A 9.298 9.298 0 0 0 27.5 42.751 Q 26.6 42.886 25.295 43.75 A 13.781 13.781 0 0 0 25 43.951 A 8.233 8.233 0 0 0 23.682 45.118 Q 23.116 45.731 22.582 46.513 A 15.746 15.746 0 0 0 22.2 47.101 Q 20.295 46.704 18.579 44.796 A 13.329 13.329 0 0 1 17.7 43.701 A 12.485 12.485 0 0 1 16.144 45.398 Q 15.136 46.3 14.04 46.807 A 7.141 7.141 0 0 1 13.3 47.101 A 14.103 14.103 0 0 0 12.297 45.674 Q 11.713 44.949 11.093 44.414 A 7.418 7.418 0 0 0 10.5 43.951 A 11.94 11.94 0 0 0 9.696 43.432 Q 8.882 42.954 8.247 42.8 A 2.807 2.807 0 0 0 8 42.751 A 10.677 10.677 0 0 0 7.307 42.673 Q 6.566 42.611 5.542 42.602 A 40.457 40.457 0 0 0 5.2 42.601 L 5.2 45.001 Q 10.858 45.001 11.514 51.488 A 18.054 18.054 0 0 1 11.6 53.301 A 48.038 48.038 0 0 1 11.566 55.174 Q 11.496 56.967 11.281 58.225 A 13.439 13.439 0 0 1 11.25 58.401 A 6.343 6.343 0 0 1 10.127 60.977 A 8.294 8.294 0 0 1 9.35 61.901 A 4.932 4.932 0 0 1 7.221 63.173 Q 6.429 63.418 5.471 63.48 A 10.354 10.354 0 0 1 4.8 63.501 L 3.1 63.301 A 11.373 11.373 0 0 0 4.648 65.815 A 7.134 7.134 0 0 0 10.4 68.501 A 8.155 8.155 0 0 0 12.689 68.191 A 6.934 6.934 0 0 0 14.45 67.401 A 12.893 12.893 0 0 0 15.706 66.491 Q 16.956 65.476 18.4 63.901 L 19.2 63.901 Q 21.9 66.301 25.25 67.301 A 17.53 17.53 0 0 0 27.439 67.784 Q 29.816 68.17 33.3 68.268 A 89.202 89.202 0 0 0 35.8 68.301 A 62.518 62.518 0 0 0 44.024 67.809 Q 60 65.676 60 54.301 Q 60 45.001 66.4 45.001 L 66.4 42.601 Q 64.916 42.601 64.01 42.703 A 8.175 8.175 0 0 0 63.65 42.751 A 3.196 3.196 0 0 0 63.02 42.926 Q 62.416 43.155 61.651 43.647 A 14.025 14.025 0 0 0 61.2 43.951 A 8.233 8.233 0 0 0 59.882 45.118 Q 59.316 45.731 58.782 46.513 A 15.746 15.746 0 0 0 58.4 47.101 A 5.441 5.441 0 0 1 56.46 46.228 Q 55.198 45.355 54 43.701 A 10.844 10.844 0 0 1 52.116 45.631 A 8.381 8.381 0 0 1 49.3 47.101 Q 48 45.001 46.55 43.951 A 11.73 11.73 0 0 0 45.776 43.433 Q 44.834 42.859 44.15 42.751 Q 43.36 42.626 41.913 42.605 A 42.29 42.29 0 0 0 41.3 42.601 L 41.3 45.001 Q 44.6 45.001 46 46.901 Q 47.372 48.763 47.399 50.624 A 5.157 5.157 0 0 1 47.4 50.701 Q 47.4 60.685 36.453 60.991 A 25.167 25.167 0 0 1 35.75 61.001 Q 25.776 61.001 24.341 53.452 A 14.741 14.741 0 0 1 24.1 50.701 Q 24.1 48.901 25.55 46.951 A 4.53 4.53 0 0 1 27.884 45.335 Q 28.67 45.085 29.634 45.022 A 10.237 10.237 0 0 1 30.3 45.001 Z M 736.4 45.001 L 736.4 42.601 Q 734.916 42.601 733.976 42.703 A 9.298 9.298 0 0 0 733.6 42.751 Q 732.7 42.886 731.395 43.75 A 13.781 13.781 0 0 0 731.1 43.951 A 8.233 8.233 0 0 0 729.782 45.118 Q 729.216 45.731 728.682 46.513 A 15.746 15.746 0 0 0 728.3 47.101 Q 726.395 46.704 724.679 44.796 A 13.329 13.329 0 0 1 723.8 43.701 Q 722.113 45.895 720.14 46.807 A 7.141 7.141 0 0 1 719.4 47.101 A 14.103 14.103 0 0 0 718.397 45.674 Q 717.813 44.949 717.193 44.414 A 7.418 7.418 0 0 0 716.6 43.951 A 11.94 11.94 0 0 0 715.796 43.432 Q 714.982 42.954 714.347 42.8 A 2.807 2.807 0 0 0 714.1 42.751 A 10.677 10.677 0 0 0 713.407 42.673 Q 712.666 42.611 711.642 42.602 A 40.457 40.457 0 0 0 711.3 42.601 L 711.3 45.001 Q 716.958 45.001 717.614 51.488 A 18.054 18.054 0 0 1 717.7 53.301 A 48.038 48.038 0 0 1 717.666 55.174 Q 717.596 56.967 717.381 58.225 A 13.439 13.439 0 0 1 717.35 58.401 A 6.343 6.343 0 0 1 716.227 60.977 A 8.294 8.294 0 0 1 715.45 61.901 A 4.932 4.932 0 0 1 713.321 63.173 Q 712.529 63.418 711.571 63.48 A 10.354 10.354 0 0 1 710.9 63.501 L 709.2 63.301 A 11.373 11.373 0 0 0 710.748 65.815 A 7.134 7.134 0 0 0 716.5 68.501 A 8.155 8.155 0 0 0 718.789 68.191 A 6.934 6.934 0 0 0 720.55 67.401 A 12.893 12.893 0 0 0 721.806 66.491 Q 723.056 65.476 724.5 63.901 L 725.3 63.901 Q 728 66.301 731.35 67.301 A 17.53 17.53 0 0 0 733.539 67.784 Q 735.916 68.17 739.4 68.268 A 89.202 89.202 0 0 0 741.9 68.301 A 62.518 62.518 0 0 0 750.124 67.809 Q 766.1 65.676 766.1 54.301 Q 766.1 45.001 772.5 45.001 L 772.5 42.601 Q 771.016 42.601 770.11 42.703 A 8.175 8.175 0 0 0 769.75 42.751 A 3.196 3.196 0 0 0 769.12 42.926 Q 768.516 43.155 767.751 43.647 A 14.025 14.025 0 0 0 767.3 43.951 A 8.233 8.233 0 0 0 765.982 45.118 Q 765.416 45.731 764.882 46.513 A 15.746 15.746 0 0 0 764.5 47.101 A 5.441 5.441 0 0 1 762.56 46.228 Q 761.298 45.355 760.1 43.701 A 10.844 10.844 0 0 1 758.216 45.631 A 8.381 8.381 0 0 1 755.4 47.101 Q 754.1 45.001 752.65 43.951 A 11.73 11.73 0 0 0 751.876 43.433 Q 750.934 42.859 750.25 42.751 Q 749.46 42.626 748.013 42.605 A 42.29 42.29 0 0 0 747.4 42.601 L 747.4 45.001 Q 750.7 45.001 752.1 46.901 Q 753.472 48.763 753.499 50.624 A 5.157 5.157 0 0 1 753.5 50.701 Q 753.5 60.685 742.553 60.991 A 25.167 25.167 0 0 1 741.85 61.001 Q 731.876 61.001 730.441 53.452 A 14.741 14.741 0 0 1 730.2 50.701 Q 730.2 48.901 731.65 46.951 A 4.53 4.53 0 0 1 733.984 45.335 Q 734.77 45.085 735.734 45.022 A 10.237 10.237 0 0 1 736.4 45.001 Z M 52.6 40.901 L 55.3 40.901 A 10.061 10.061 0 0 0 55.993 41.903 Q 56.358 42.365 56.734 42.701 A 3.978 3.978 0 0 0 57.6 43.301 A 7.722 7.722 0 0 1 58.93 41.939 A 6.645 6.645 0 0 1 59.9 41.301 L 59.9 19.501 Q 59.9 11.501 53.5 7.751 A 25.921 25.921 0 0 0 46.049 4.881 Q 42.15 4.001 37.5 4.001 L 5.9 4.001 L 5.9 12.501 L 11.9 12.501 L 11.9 41.401 A 4.586 4.586 0 0 1 12.611 41.851 Q 13.29 42.365 14.05 43.243 A 15.462 15.462 0 0 1 14.1 43.301 Q 14.9 42.801 16.4 40.901 L 19 40.901 A 17.567 17.567 0 0 0 19.631 41.726 Q 20.335 42.587 20.939 43.053 A 3.787 3.787 0 0 0 21.3 43.301 A 9.184 9.184 0 0 1 22.847 41.815 A 7.291 7.291 0 0 1 24.7 40.801 L 24.7 12.501 L 35.7 12.501 Q 40.174 12.501 43.047 14.583 A 9.584 9.584 0 0 1 43.7 15.101 A 8.41 8.41 0 0 1 46.4 19.73 A 12.933 12.933 0 0 1 46.7 22.601 L 46.7 40.701 Q 48.8 41.501 50.3 43.301 Q 51.3 42.501 52.6 40.901 Z M 349.3 42.401 L 344.1 42.401 Q 342.616 42.401 341.71 42.503 A 8.175 8.175 0 0 0 341.35 42.551 Q 340.547 42.678 339.351 43.483 A 13.811 13.811 0 0 0 338.9 43.801 A 7.737 7.737 0 0 0 337.581 45.049 Q 337.042 45.685 336.55 46.494 A 14.814 14.814 0 0 0 336.2 47.101 A 5.796 5.796 0 0 1 333.89 46.043 Q 333.122 45.477 332.398 44.634 A 13.251 13.251 0 0 1 331.6 43.601 A 12.923 12.923 0 0 1 329.978 45.351 Q 328.925 46.282 327.786 46.798 A 7.307 7.307 0 0 1 327 47.101 A 13.221 13.221 0 0 0 326.058 45.606 Q 325.495 44.84 324.878 44.276 A 6.967 6.967 0 0 0 324.3 43.801 A 12.562 12.562 0 0 0 323.542 43.284 Q 322.781 42.807 322.193 42.631 A 2.619 2.619 0 0 0 321.85 42.551 Q 320.9 42.401 319.2 42.401 L 319.2 44.901 A 6.844 6.844 0 0 1 322.112 45.476 Q 325.022 46.831 325.504 51.372 A 18.31 18.31 0 0 1 325.6 53.301 Q 325.6 56.401 325.25 58.351 Q 324.9 60.301 323.3 61.951 Q 321.824 63.473 319.157 63.591 A 10.335 10.335 0 0 1 318.7 63.601 L 317.2 63.201 A 11.076 11.076 0 0 0 318.404 65.476 Q 320.325 68.201 323.5 68.201 A 11.273 11.273 0 0 0 330.581 65.699 A 14.643 14.643 0 0 0 331.3 65.101 L 331.9 65.101 A 12.822 12.822 0 0 0 335.286 67.3 A 10.834 10.834 0 0 0 339.65 68.201 Q 343.9 68.201 346.1 63.201 A 1.209 1.209 0 0 1 345.756 63.383 Q 345.213 63.58 344.137 63.599 A 13.384 13.384 0 0 1 343.9 63.601 Q 342.2 63.601 340.75 62.751 Q 339.3 61.901 338.7 60.301 Q 337.973 58.339 337.775 55.533 A 31.66 31.66 0 0 1 337.7 53.301 A 16.174 16.174 0 0 1 337.963 50.242 Q 338.917 45.312 343.339 44.933 A 8.908 8.908 0 0 1 344.1 44.901 L 349.3 44.901 A 7.076 7.076 0 0 1 352.22 45.459 Q 355.25 46.82 355.715 51.493 A 18.258 18.258 0 0 1 355.8 53.301 L 355.8 55.901 A 21.203 21.203 0 0 0 356.254 60.505 Q 357.704 66.996 363.784 68.012 A 14.663 14.663 0 0 0 366.2 68.201 Q 370.44 68.201 372.632 67.049 A 5.19 5.19 0 0 0 373.6 66.401 Q 375.6 64.801 375.9 63.201 Q 375.316 63.59 374.447 63.601 A 3.998 3.998 0 0 1 374.4 63.601 A 9.207 9.207 0 0 1 372.446 63.409 Q 371.319 63.164 370.506 62.606 A 4.377 4.377 0 0 1 369 60.801 A 11.57 11.57 0 0 1 368.26 58.604 Q 367.7 56.248 367.7 52.901 A 14.028 14.028 0 0 0 367.311 49.463 Q 366.185 45.013 361.8 43.601 Q 359.9 46.301 357.4 47.101 Q 356.1 44.901 354.6 43.801 A 11.734 11.734 0 0 0 353.796 43.257 Q 352.819 42.659 352.1 42.551 A 10.677 10.677 0 0 0 351.407 42.473 Q 350.666 42.411 349.642 42.402 A 40.457 40.457 0 0 0 349.3 42.401 Z M 274.8 40.901 L 277.4 40.901 A 14.737 14.737 0 0 0 278.115 41.819 Q 278.873 42.709 279.556 43.154 A 3.623 3.623 0 0 0 279.8 43.301 Q 280.8 41.901 282.4 41.101 L 282.4 12.501 L 296.4 12.501 L 296.4 22.801 L 302.1 22.801 L 302.1 4.001 L 250.1 4.001 L 250.1 22.801 L 256.1 22.801 L 256.1 12.501 L 269.8 12.501 L 269.8 41.101 A 6.918 6.918 0 0 1 271.312 42.142 A 9.536 9.536 0 0 1 272.4 43.301 A 4.638 4.638 0 0 0 272.994 42.869 Q 273.794 42.195 274.8 40.901 Z M 858.4 40.901 L 860.9 40.901 A 14.737 14.737 0 0 0 861.615 41.819 Q 862.373 42.709 863.056 43.154 A 3.623 3.623 0 0 0 863.3 43.301 A 9.401 9.401 0 0 1 865.034 41.706 A 7.316 7.316 0 0 1 867.4 40.601 L 867.4 20.901 A 13.473 13.473 0 0 1 867.783 17.593 A 9.223 9.223 0 0 1 870.5 12.951 Q 873.6 10.101 878.5 10.101 A 13.934 13.934 0 0 1 881.973 10.511 A 10.026 10.026 0 0 1 886.4 12.901 Q 889.323 15.629 889.398 20.634 A 17.709 17.709 0 0 1 889.4 20.901 L 889.4 40.601 A 7.511 7.511 0 0 1 892.387 42.186 A 9.968 9.968 0 0 1 893.5 43.301 A 4.638 4.638 0 0 0 894.094 42.869 Q 894.894 42.195 895.9 40.901 L 898.4 40.901 A 12.76 12.76 0 0 0 899.183 41.886 Q 900.066 42.884 900.9 43.301 A 7.722 7.722 0 0 1 902.23 41.939 A 6.645 6.645 0 0 1 903.2 41.301 L 903.2 18.301 A 13.483 13.483 0 0 0 902.615 14.262 A 11.547 11.547 0 0 0 901 11.001 A 14.331 14.331 0 0 0 895.669 6.475 A 17.089 17.089 0 0 0 895.1 6.201 Q 891.4 4.501 887.2 3.701 A 46.224 46.224 0 0 0 879.686 2.917 A 51.949 51.949 0 0 0 878.4 2.901 Q 873.8 2.901 869.65 3.701 Q 865.5 4.501 861.75 6.201 A 15.178 15.178 0 0 0 857.679 8.863 A 13.688 13.688 0 0 0 855.8 11.001 A 11.929 11.929 0 0 0 853.659 16.953 A 15.074 15.074 0 0 0 853.6 18.301 L 853.6 41.301 A 10.932 10.932 0 0 1 854.946 42.314 A 8.611 8.611 0 0 1 855.9 43.301 Q 857.1 42.601 858.4 40.901 Z M 903.2 54.301 L 903.2 53.301 A 15.548 15.548 0 0 1 903.468 50.272 Q 904.52 45.001 909.7 45.001 L 909.7 42.601 Q 908.216 42.601 907.31 42.703 A 8.175 8.175 0 0 0 906.95 42.751 Q 906.157 42.876 904.945 43.629 A 14.987 14.987 0 0 0 904.45 43.951 Q 903.106 44.862 901.95 46.562 A 14.994 14.994 0 0 0 901.6 47.101 Q 899.4 46.601 897.2 43.701 Q 895.4 46.301 892.6 47.101 A 12.461 12.461 0 0 0 891.617 45.621 Q 891.027 44.864 890.378 44.318 A 6.831 6.831 0 0 0 889.9 43.951 A 11.94 11.94 0 0 0 889.096 43.432 Q 888.282 42.954 887.647 42.8 A 2.807 2.807 0 0 0 887.4 42.751 A 10.677 10.677 0 0 0 886.707 42.673 Q 885.966 42.611 884.942 42.602 A 40.457 40.457 0 0 0 884.6 42.601 L 884.6 45.001 Q 887.9 45.001 889.3 46.901 Q 890.672 48.763 890.699 50.624 A 5.157 5.157 0 0 1 890.7 50.701 Q 890.7 56.101 887.2 59.151 A 12.274 12.274 0 0 1 880.633 62.055 A 16.562 16.562 0 0 1 878.4 62.201 A 15.177 15.177 0 0 1 874.248 61.658 A 11.939 11.939 0 0 1 869.6 59.151 A 9.991 9.991 0 0 1 866.268 52.952 A 14.529 14.529 0 0 1 866.1 50.701 A 5.601 5.601 0 0 1 866.607 48.415 Q 866.937 47.67 867.483 46.925 A 9.899 9.899 0 0 1 867.5 46.901 Q 868.705 45.265 871.318 45.038 A 10.167 10.167 0 0 1 872.2 45.001 L 872.2 42.601 Q 870.716 42.601 869.776 42.703 A 9.298 9.298 0 0 0 869.4 42.751 Q 868.5 42.886 867.195 43.75 A 13.781 13.781 0 0 0 866.9 43.951 A 7.625 7.625 0 0 0 865.56 45.166 Q 864.838 45.985 864.2 47.101 A 6.105 6.105 0 0 1 861.483 45.794 Q 860.733 45.184 860.049 44.312 A 12.386 12.386 0 0 1 859.6 43.701 Q 857.913 45.895 855.94 46.807 A 7.141 7.141 0 0 1 855.2 47.101 Q 853.9 45.001 852.35 43.951 A 13.665 13.665 0 0 0 851.547 43.444 Q 850.766 42.991 850.176 42.824 A 2.804 2.804 0 0 0 849.85 42.751 A 9.401 9.401 0 0 0 849.211 42.675 Q 848.366 42.601 847.1 42.601 L 847.1 45.001 A 7.154 7.154 0 0 1 850.015 45.551 Q 853.6 47.137 853.6 53.301 L 853.6 54.301 A 12.047 12.047 0 0 0 854.65 59.378 A 11.802 11.802 0 0 0 857.55 63.251 Q 861.5 66.801 866.8 68.101 A 44.876 44.876 0 0 0 873.816 69.218 A 55.915 55.915 0 0 0 878.4 69.401 A 53.567 53.567 0 0 0 885.171 68.99 A 43.174 43.174 0 0 0 890 68.101 Q 895.3 66.801 899.25 63.251 A 11.445 11.445 0 0 0 903.185 54.969 A 14.309 14.309 0 0 0 903.2 54.301 Z M 555 40.901 L 557.7 40.901 Q 558.771 42.385 559.639 43.053 A 3.787 3.787 0 0 0 560 43.301 Q 561.1 41.901 562.7 41.101 L 562.7 35.901 L 575 35.901 L 575 29.901 L 562.7 29.901 L 562.7 12.501 L 584.2 12.501 L 584.2 22.801 L 590.2 22.801 L 590.2 4.001 L 542.1 4.001 L 542.1 12.501 L 550.1 12.501 L 550.1 41.201 A 7.617 7.617 0 0 1 551.434 42.126 Q 551.991 42.602 552.528 43.218 A 12.646 12.646 0 0 1 552.6 43.301 A 4.638 4.638 0 0 0 553.194 42.869 Q 553.994 42.195 555 40.901 Z M 133 54.301 L 133 53.401 Q 133 45.422 138.728 44.933 A 9.08 9.08 0 0 1 139.5 44.901 L 139.5 42.501 A 13.387 13.387 0 0 0 137.251 42.677 Q 136.033 42.885 135.073 43.338 A 5.909 5.909 0 0 0 133.4 44.501 Q 132.541 45.36 131.681 46.663 A 21.144 21.144 0 0 0 131.4 47.101 Q 129.3 46.701 127 43.701 A 9.407 9.407 0 0 1 125.149 45.715 A 7.717 7.717 0 0 1 122.5 47.101 Q 121.369 45.274 120.048 44.204 A 7.831 7.831 0 0 0 119.65 43.901 A 13.485 13.485 0 0 0 118.869 43.384 Q 118.087 42.907 117.495 42.731 A 2.675 2.675 0 0 0 117.15 42.651 Q 116.2 42.501 114.5 42.501 L 114.5 44.901 A 7.584 7.584 0 0 1 116.191 45.077 Q 117.346 45.341 118.164 46.002 A 4.361 4.361 0 0 1 119 46.901 A 9.438 9.438 0 0 1 119.797 48.252 Q 120.4 49.52 120.4 50.701 Q 120.4 61.297 108.91 61.301 A 16.871 16.871 0 0 1 108.9 61.301 A 18.09 18.09 0 0 1 104.489 60.812 Q 98.754 59.365 97.659 53.642 A 15.66 15.66 0 0 1 97.4 50.701 A 5.68 5.68 0 0 1 97.862 48.503 Q 98.172 47.758 98.69 47.007 A 10.181 10.181 0 0 1 98.8 46.851 Q 100.138 44.987 103.031 44.905 A 9.507 9.507 0 0 1 103.3 44.901 L 103.3 42.501 Q 101.816 42.501 100.91 42.603 A 8.175 8.175 0 0 0 100.55 42.651 A 3.196 3.196 0 0 0 99.92 42.826 Q 99.316 43.055 98.551 43.547 A 14.025 14.025 0 0 0 98.1 43.851 Q 96.881 44.705 95.794 46.318 A 15.637 15.637 0 0 0 95.3 47.101 Q 93.454 46.793 91.785 44.947 A 12.823 12.823 0 0 1 90.8 43.701 Q 89.113 45.895 87.14 46.807 A 7.141 7.141 0 0 1 86.4 47.101 A 14.6 14.6 0 0 0 85.322 45.573 Q 84.716 44.828 84.071 44.275 A 7.923 7.923 0 0 0 83.6 43.901 A 11.734 11.734 0 0 0 82.796 43.357 Q 81.819 42.759 81.1 42.651 A 10.677 10.677 0 0 0 80.407 42.573 Q 79.666 42.511 78.642 42.502 A 40.457 40.457 0 0 0 78.3 42.501 L 78.3 44.901 A 6.973 6.973 0 0 1 81.257 45.483 Q 84.8 47.126 84.8 53.401 L 84.8 54.301 Q 84.8 59.801 88.6 63.401 Q 92.4 67.001 97.55 68.351 A 40.897 40.897 0 0 0 104.216 69.495 A 51.645 51.645 0 0 0 108.9 69.701 A 49.528 49.528 0 0 0 115.543 69.274 A 39.395 39.395 0 0 0 120.25 68.351 Q 125.4 67.001 129.2 63.401 A 11.926 11.926 0 0 0 132.994 54.728 A 15.606 15.606 0 0 0 133 54.301 Z M 722.5 40.901 L 725.1 40.901 Q 726.171 42.385 727.039 43.053 A 3.787 3.787 0 0 0 727.4 43.301 A 9.413 9.413 0 0 1 728.754 41.946 A 7.073 7.073 0 0 1 730.5 40.901 L 730.5 35.701 L 742.4 35.701 Q 746.594 35.701 749.126 37.33 A 7.586 7.586 0 0 1 751.9 40.501 Q 754.6 41.101 756.4 43.301 Q 757.4 42.501 758.7 40.901 L 761.4 40.901 A 10.061 10.061 0 0 0 762.093 41.903 Q 762.458 42.365 762.834 42.701 A 3.978 3.978 0 0 0 763.7 43.301 A 6.394 6.394 0 0 1 764.739 42.157 A 8.314 8.314 0 0 1 765.6 41.501 A 16.165 16.165 0 0 0 762.251 36.413 Q 760.202 34.26 757.2 32.401 A 16.581 16.581 0 0 0 762.783 20.346 A 21.132 21.132 0 0 0 762.8 19.501 A 18.186 18.186 0 0 0 761.667 12.811 Q 758.198 4.001 744.1 4.001 L 711.7 4.001 L 711.7 12.501 L 718 12.501 L 718 41.401 A 4.586 4.586 0 0 1 718.711 41.851 Q 719.39 42.365 720.15 43.243 A 15.462 15.462 0 0 1 720.2 43.301 Q 721 42.801 722.5 40.901 Z M 568.8 45.001 L 568.8 42.601 Q 567.316 42.601 566.41 42.703 A 8.175 8.175 0 0 0 566.05 42.751 A 3.196 3.196 0 0 0 565.42 42.926 Q 564.816 43.155 564.051 43.647 A 14.025 14.025 0 0 0 563.6 43.951 A 7.625 7.625 0 0 0 562.26 45.166 Q 561.538 45.985 560.9 47.101 A 5.861 5.861 0 0 1 558.802 46.18 Q 558.041 45.663 557.302 44.886 A 13.93 13.93 0 0 1 556.3 43.701 A 9.407 9.407 0 0 1 554.449 45.715 A 7.717 7.717 0 0 1 551.8 47.101 A 14.103 14.103 0 0 0 550.797 45.674 Q 550.213 44.949 549.593 44.414 A 7.418 7.418 0 0 0 549 43.951 A 12.659 12.659 0 0 0 548.21 43.438 Q 547.431 42.975 546.836 42.813 A 2.69 2.69 0 0 0 546.55 42.751 A 9.401 9.401 0 0 0 545.911 42.675 Q 545.066 42.601 543.8 42.601 L 543.8 45.001 A 7.714 7.714 0 0 1 545.744 45.231 A 4.968 4.968 0 0 1 548.75 47.351 A 8.303 8.303 0 0 1 549.768 49.614 Q 550.067 50.641 550.198 51.869 A 19.19 19.19 0 0 1 550.3 53.901 Q 550.3 57.092 549.521 59.417 A 10.677 10.677 0 0 1 548.95 60.801 A 4.485 4.485 0 0 1 546.307 63.055 Q 545.047 63.501 543.3 63.501 L 541.9 63.301 A 10.49 10.49 0 0 0 543.008 65.592 Q 544.86 68.401 548.2 68.401 A 9.777 9.777 0 0 0 552.89 67.15 Q 554.318 66.378 555.725 65.132 A 21.323 21.323 0 0 0 557 63.901 L 557.9 63.901 L 558.3 64.301 Q 563.1 68.301 569.95 68.301 A 20.02 20.02 0 0 0 580.391 65.316 A 26.033 26.033 0 0 0 582.9 63.601 A 6.619 6.619 0 0 0 583.468 64.097 Q 584.452 64.876 586.41 66.039 A 64.243 64.243 0 0 0 586.6 66.151 Q 589.4 67.801 591 68.101 Q 590.214 67.228 590.115 63.916 A 33.772 33.772 0 0 1 590.1 62.901 L 590.1 48.901 L 584 48.901 Q 584.5 50.601 584.5 52.401 A 8.409 8.409 0 0 1 583.997 55.37 A 7.364 7.364 0 0 1 581.45 58.701 A 11.318 11.318 0 0 1 576.179 60.848 A 15.04 15.04 0 0 1 574 61.001 Q 569.6 61.001 566.15 58.451 A 8.226 8.226 0 0 1 562.943 53.277 A 12.893 12.893 0 0 1 562.7 50.701 Q 562.7 48.901 564.15 46.951 Q 565.6 45.001 568.8 45.001 Z M 634.1 45.001 L 634.1 42.601 Q 632.616 42.601 631.71 42.703 A 8.175 8.175 0 0 0 631.35 42.751 A 3.196 3.196 0 0 0 630.72 42.926 Q 630.116 43.155 629.351 43.647 A 14.025 14.025 0 0 0 628.9 43.951 A 7.625 7.625 0 0 0 627.56 45.166 Q 626.838 45.985 626.2 47.101 A 5.861 5.861 0 0 1 624.102 46.18 Q 623.341 45.663 622.602 44.886 A 13.93 13.93 0 0 1 621.6 43.701 A 9.407 9.407 0 0 1 619.749 45.715 A 7.717 7.717 0 0 1 617.1 47.101 A 14.103 14.103 0 0 0 616.097 45.674 Q 615.513 44.949 614.893 44.414 A 7.418 7.418 0 0 0 614.3 43.951 A 12.659 12.659 0 0 0 613.51 43.438 Q 612.731 42.975 612.136 42.813 A 2.69 2.69 0 0 0 611.85 42.751 A 9.401 9.401 0 0 0 611.211 42.675 Q 610.366 42.601 609.1 42.601 L 609.1 45.001 A 7.714 7.714 0 0 1 611.044 45.231 A 4.968 4.968 0 0 1 614.05 47.351 A 8.303 8.303 0 0 1 615.068 49.614 Q 615.367 50.641 615.498 51.869 A 19.19 19.19 0 0 1 615.6 53.901 Q 615.6 57.092 614.821 59.417 A 10.677 10.677 0 0 1 614.25 60.801 A 4.485 4.485 0 0 1 611.607 63.055 Q 610.347 63.501 608.6 63.501 L 607.2 63.301 A 10.49 10.49 0 0 0 608.308 65.592 Q 610.16 68.401 613.5 68.401 A 9.777 9.777 0 0 0 618.19 67.15 Q 619.618 66.378 621.025 65.132 A 21.323 21.323 0 0 0 622.3 63.901 L 623.2 63.901 L 623.6 64.301 Q 628.4 68.301 635.25 68.301 A 20.02 20.02 0 0 0 645.691 65.316 A 26.033 26.033 0 0 0 648.2 63.601 A 6.619 6.619 0 0 0 648.768 64.097 Q 649.752 64.876 651.71 66.039 A 64.243 64.243 0 0 0 651.9 66.151 Q 654.7 67.801 656.3 68.101 Q 655.514 67.228 655.415 63.916 A 33.772 33.772 0 0 1 655.4 62.901 L 655.4 48.901 L 649.3 48.901 Q 649.8 50.601 649.8 52.401 A 8.409 8.409 0 0 1 649.297 55.37 A 7.364 7.364 0 0 1 646.75 58.701 A 11.318 11.318 0 0 1 641.479 60.848 A 15.04 15.04 0 0 1 639.3 61.001 Q 634.9 61.001 631.45 58.451 A 8.226 8.226 0 0 1 628.243 53.277 A 12.893 12.893 0 0 1 628 50.701 Q 628 48.901 629.45 46.951 Q 630.9 45.001 634.1 45.001 Z M 812.6 45.001 L 812.6 42.601 Q 811.116 42.601 810.21 42.703 A 8.175 8.175 0 0 0 809.85 42.751 A 3.196 3.196 0 0 0 809.22 42.926 Q 808.616 43.155 807.851 43.647 A 14.025 14.025 0 0 0 807.4 43.951 A 7.625 7.625 0 0 0 806.06 45.166 Q 805.338 45.985 804.7 47.101 A 5.861 5.861 0 0 1 802.602 46.18 Q 801.841 45.663 801.102 44.886 A 13.93 13.93 0 0 1 800.1 43.701 A 9.407 9.407 0 0 1 798.249 45.715 A 7.717 7.717 0 0 1 795.6 47.101 A 14.103 14.103 0 0 0 794.597 45.674 Q 794.013 44.949 793.393 44.414 A 7.418 7.418 0 0 0 792.8 43.951 A 12.659 12.659 0 0 0 792.01 43.438 Q 791.231 42.975 790.636 42.813 A 2.69 2.69 0 0 0 790.35 42.751 A 9.401 9.401 0 0 0 789.711 42.675 Q 788.866 42.601 787.6 42.601 L 787.6 45.001 A 7.714 7.714 0 0 1 789.544 45.231 A 4.968 4.968 0 0 1 792.55 47.351 A 8.303 8.303 0 0 1 793.568 49.614 Q 793.867 50.641 793.998 51.869 A 19.19 19.19 0 0 1 794.1 53.901 Q 794.1 57.092 793.321 59.417 A 10.677 10.677 0 0 1 792.75 60.801 A 4.485 4.485 0 0 1 790.107 63.055 Q 788.847 63.501 787.1 63.501 L 785.7 63.301 A 10.49 10.49 0 0 0 786.808 65.592 Q 788.66 68.401 792 68.401 A 9.777 9.777 0 0 0 796.69 67.15 Q 798.118 66.378 799.525 65.132 A 21.323 21.323 0 0 0 800.8 63.901 L 801.7 63.901 L 802.1 64.301 Q 806.9 68.301 813.75 68.301 A 20.02 20.02 0 0 0 824.191 65.316 A 26.033 26.033 0 0 0 826.7 63.601 A 6.619 6.619 0 0 0 827.268 64.097 Q 828.252 64.876 830.21 66.039 A 64.243 64.243 0 0 0 830.4 66.151 Q 833.2 67.801 834.8 68.101 Q 834.014 67.228 833.915 63.916 A 33.772 33.772 0 0 1 833.9 62.901 L 833.9 48.901 L 827.8 48.901 Q 828.3 50.601 828.3 52.401 A 8.409 8.409 0 0 1 827.797 55.37 A 7.364 7.364 0 0 1 825.25 58.701 A 11.318 11.318 0 0 1 819.979 60.848 A 15.04 15.04 0 0 1 817.8 61.001 Q 813.4 61.001 809.95 58.451 A 8.226 8.226 0 0 1 806.743 53.277 A 12.893 12.893 0 0 1 806.5 50.701 Q 806.5 48.901 807.95 46.951 Q 809.4 45.001 812.6 45.001 Z M 177.7 40.901 L 180.2 40.901 Q 181.2 42.801 182.2 43.401 Q 184 41.601 186.2 40.801 L 192.3 12.501 L 197.6 12.501 L 197.6 4.001 L 154.3 4.001 L 154.3 22.801 L 160.3 22.801 L 160.3 12.501 L 178.7 12.501 L 173.2 41.701 A 5.742 5.742 0 0 1 174.148 42.645 A 7.801 7.801 0 0 1 174.8 43.601 Q 176 43.001 177.7 40.901 Z M 518.9 44.801 L 518.9 42.301 A 9.052 9.052 0 0 0 515.022 43.107 Q 512.582 44.247 511 47.001 A 23.246 23.246 0 0 1 507.202 43.548 A 26.626 26.626 0 0 1 506.4 42.601 L 502.4 42.601 L 502.4 44.601 A 3.932 3.932 0 0 1 504.242 47.204 A 6.618 6.618 0 0 1 504.4 48.701 A 8.397 8.397 0 0 1 504.034 51.061 Q 503.72 52.13 503.138 53.302 A 21.685 21.685 0 0 1 501.9 55.451 Q 499.4 59.301 498 60.101 A 4.177 4.177 0 0 1 497.325 59.558 Q 496.114 58.399 494.2 55.451 Q 491.7 51.601 491.7 48.751 A 6.374 6.374 0 0 1 491.895 47.121 A 4.169 4.169 0 0 1 493.7 44.601 L 493.7 42.601 L 489.7 42.601 A 15.903 15.903 0 0 1 488.139 44.526 Q 487.284 45.435 486.208 46.344 A 29.599 29.599 0 0 1 485.4 47.001 A 9.759 9.759 0 0 0 482.236 43.738 Q 480.432 42.618 478.082 42.358 A 12.734 12.734 0 0 0 477.4 42.301 L 477.4 44.801 A 7.335 7.335 0 0 1 481.785 47.072 Q 482.682 47.995 483.444 49.281 A 15.164 15.164 0 0 1 483.6 49.551 A 19.174 19.174 0 0 1 485.437 53.947 A 15.771 15.771 0 0 1 486 58.101 A 17.121 17.121 0 0 1 485.831 60.616 Q 485.167 65.064 481.9 65.701 L 481.9 68.701 Q 486.35 68.701 488.469 66.998 A 5.189 5.189 0 0 0 488.7 66.801 Q 489.8 65.901 490.7 64.301 Q 493.1 67.001 495.2 69.901 L 500.8 69.901 L 505.4 64.301 A 12.439 12.439 0 0 0 506.709 66.057 Q 507.531 66.966 508.438 67.522 A 5.93 5.93 0 0 0 510 68.201 Q 512.2 68.701 514.4 68.701 L 514.4 65.701 Q 510.4 64.901 510.4 58.101 A 16.342 16.342 0 0 1 511.694 51.812 A 20.63 20.63 0 0 1 512.8 49.551 A 12.671 12.671 0 0 1 514.34 47.358 Q 515.472 46.083 516.819 45.428 A 6.81 6.81 0 0 1 518.9 44.801 Z M 89.6 40.901 L 92.2 40.901 Q 93.322 42.678 94.444 43.318 A 3.233 3.233 0 0 0 94.6 43.401 Q 96.1 41.501 98.5 40.701 L 98.5 20.901 A 16.035 16.035 0 0 1 98.791 17.747 Q 99.386 14.782 101.2 12.901 A 8.817 8.817 0 0 1 105.53 10.471 Q 107.02 10.101 108.8 10.101 A 14.071 14.071 0 0 1 111.986 10.441 Q 114.431 11.009 116.152 12.527 A 8.894 8.894 0 0 1 116.5 12.851 A 8.776 8.776 0 0 1 118.725 16.621 Q 119.3 18.499 119.3 20.901 L 119.3 25.401 L 133 25.401 L 133 18.301 A 13.196 13.196 0 0 0 132.176 13.562 A 11.856 11.856 0 0 0 129.25 9.201 Q 125.5 5.601 120.3 4.251 Q 115.1 2.901 109.6 2.901 A 63.763 63.763 0 0 0 105.217 3.043 Q 102.391 3.239 100.05 3.701 Q 96 4.501 92.45 6.201 Q 88.9 7.901 86.8 11.001 A 12.2 12.2 0 0 0 84.79 16.609 A 15.545 15.545 0 0 0 84.7 18.301 L 84.7 41.301 A 7.617 7.617 0 0 1 86.034 42.226 Q 86.591 42.702 87.128 43.318 A 12.646 12.646 0 0 1 87.2 43.401 Q 88.2 42.601 89.6 40.901 Z M 932.1 40.901 L 934.8 40.901 A 17.567 17.567 0 0 0 935.431 41.726 Q 936.135 42.587 936.739 43.053 A 3.787 3.787 0 0 0 937.1 43.301 A 9.401 9.401 0 0 1 938.834 41.706 A 7.316 7.316 0 0 1 941.2 40.601 L 941.2 20.901 A 16.035 16.035 0 0 1 941.491 17.747 Q 942.086 14.782 943.9 12.901 A 8.817 8.817 0 0 1 948.23 10.471 Q 949.72 10.101 951.5 10.101 A 14.071 14.071 0 0 1 954.686 10.441 Q 957.131 11.009 958.852 12.527 A 8.894 8.894 0 0 1 959.2 12.851 A 8.776 8.776 0 0 1 961.425 16.621 Q 962 18.499 962 20.901 L 962 25.401 L 975.7 25.401 L 975.7 18.301 A 13.196 13.196 0 0 0 974.876 13.562 A 11.856 11.856 0 0 0 971.95 9.201 Q 968.2 5.601 963 4.251 Q 957.8 2.901 952.3 2.901 A 63.763 63.763 0 0 0 947.917 3.043 Q 945.091 3.239 942.75 3.701 Q 938.7 4.501 935.15 6.201 Q 931.6 7.901 929.5 11.001 A 12.2 12.2 0 0 0 927.49 16.609 A 15.545 15.545 0 0 0 927.4 18.301 L 927.4 41.201 Q 928.8 42.001 929.8 43.301 Q 931 42.601 932.1 40.901 Z M 437.2 40.901 L 439.8 40.901 A 16.299 16.299 0 0 0 440.724 41.915 Q 441.674 42.867 442.505 43.305 A 4.145 4.145 0 0 0 442.7 43.401 A 3.391 3.391 0 0 1 443.008 42.959 Q 443.356 42.528 443.944 42.007 A 15.306 15.306 0 0 1 444.3 41.701 L 438.6 12.201 L 444.3 12.201 L 444.3 4.001 L 400.9 4.001 L 400.9 12.201 L 406.6 12.201 L 400.8 41.701 A 13.283 13.283 0 0 1 401.554 42.308 Q 401.911 42.619 402.19 42.916 A 5.787 5.787 0 0 1 402.6 43.401 Q 403.8 42.701 405.4 40.901 L 408 40.901 A 11.304 11.304 0 0 0 408.432 41.819 Q 408.906 42.71 409.412 43.174 A 2.391 2.391 0 0 0 409.7 43.401 A 10.939 10.939 0 0 1 413.47 41.012 Q 416.791 39.698 421.804 39.608 A 41.564 41.564 0 0 1 422.55 39.601 A 33.856 33.856 0 0 1 426.914 39.861 Q 431.674 40.482 434.309 42.585 A 8.688 8.688 0 0 1 435.2 43.401 A 4.858 4.858 0 0 0 435.775 42.864 Q 436.439 42.146 437.2 40.901 Z M 349.7 4.001 L 317.3 4.001 L 317.3 12.501 L 325.3 12.501 L 325.3 41.101 Q 326.8 41.901 327.9 43.301 A 4.638 4.638 0 0 0 328.494 42.869 Q 329.294 42.195 330.3 40.901 L 332.9 40.901 A 12.76 12.76 0 0 0 333.683 41.886 Q 334.566 42.884 335.4 43.301 A 7.905 7.905 0 0 1 340.347 40.281 A 11.162 11.162 0 0 1 341.7 40.101 Q 343.081 40.009 346.116 40.002 A 222.449 222.449 0 0 1 346.65 40.001 Q 350.1 40.001 351.7 40.101 A 10.872 10.872 0 0 1 354.492 40.643 A 7.682 7.682 0 0 1 358.2 43.301 Q 359.4 42.601 360.7 40.901 Q 361.7 40.901 362.1 41.001 A 15.425 15.425 0 0 0 370.757 30.482 Q 371.553 27.593 371.677 24.04 A 38.282 38.282 0 0 0 371.7 22.701 A 24.415 24.415 0 0 0 371.387 18.689 Q 370.981 16.255 370.05 14.251 A 20.934 20.934 0 0 0 368.625 11.653 Q 367.777 10.351 366.809 9.369 A 11.601 11.601 0 0 0 366.15 8.751 A 12.881 12.881 0 0 0 364.181 7.366 Q 363.127 6.753 361.825 6.208 A 29.692 29.692 0 0 0 359.65 5.401 A 26.488 26.488 0 0 0 355.115 4.362 Q 352.595 4.001 349.7 4.001 Z M 165.3 42.401 L 165.3 44.901 A 15.916 15.916 0 0 1 166.116 44.921 Q 166.95 44.964 167.5 45.101 Q 171.2 45.901 171.2 50.751 Q 171.2 55.601 169 59.651 Q 167.04 63.259 163.096 63.653 A 10.025 10.025 0 0 1 162.1 63.701 L 160.5 63.301 A 10.348 10.348 0 0 0 161.29 65.484 Q 162.825 68.501 166.1 68.501 A 11.393 11.393 0 0 0 171.55 67.071 A 16.395 16.395 0 0 0 174.4 65.101 L 175.1 65.101 A 10.355 10.355 0 0 0 178.03 67.455 A 9.229 9.229 0 0 0 182.4 68.501 A 6.697 6.697 0 0 0 187.163 66.495 Q 188.439 65.271 189.5 63.301 A 1.588 1.588 0 0 1 189.011 63.56 Q 188.789 63.635 188.518 63.67 A 4.048 4.048 0 0 1 188 63.701 A 7.634 7.634 0 0 1 185.75 63.398 Q 182.4 62.364 182.4 57.801 Q 182.4 53.101 184.2 49.401 A 7.485 7.485 0 0 1 186.851 46.228 Q 188.859 44.901 191.9 44.901 L 191.9 42.401 Q 190.2 42.401 189.5 42.501 A 8.358 8.358 0 0 0 185.714 43.924 Q 184.541 44.705 183.423 45.903 A 18.557 18.557 0 0 0 182.4 47.101 A 4.453 4.453 0 0 1 179.941 45.784 Q 179.364 45.205 178.872 44.382 A 10.318 10.318 0 0 1 178.5 43.701 A 14.421 14.421 0 0 1 176.5 45.516 Q 175.167 46.505 173.749 46.99 A 8.832 8.832 0 0 1 173.4 47.101 A 10.701 10.701 0 0 0 172.699 45.577 Q 172.257 44.799 171.731 44.256 A 4.046 4.046 0 0 0 170.1 43.201 Q 168.709 42.679 166.108 42.46 A 37.37 37.37 0 0 0 165.3 42.401 Z M 275.8 65.101 L 276.4 65.101 Q 280 68.201 284.35 68.201 A 5.966 5.966 0 0 0 289.347 65.674 Q 290.061 64.727 290.608 63.424 A 14.025 14.025 0 0 0 290.7 63.201 Q 290 63.601 289.1 63.601 A 6.561 6.561 0 0 1 285.532 62.675 Q 282.1 60.513 282.1 53.301 Q 282.1 45.556 287.711 44.952 A 9.246 9.246 0 0 1 288.7 44.901 L 288.7 42.401 Q 287.134 42.401 286.179 42.503 A 9.021 9.021 0 0 0 285.8 42.551 Q 284.8 42.701 283.3 43.801 A 7.737 7.737 0 0 0 281.981 45.049 Q 281.442 45.685 280.95 46.494 A 14.814 14.814 0 0 0 280.6 47.101 Q 278.2 46.601 276.1 43.601 A 13.706 13.706 0 0 1 274.621 45.233 Q 273.717 46.072 272.763 46.592 A 7.163 7.163 0 0 1 271.6 47.101 Q 270.3 44.901 268.8 43.801 A 11.734 11.734 0 0 0 267.996 43.257 Q 267.019 42.659 266.3 42.551 A 10.677 10.677 0 0 0 265.607 42.473 Q 264.866 42.411 263.842 42.402 A 40.457 40.457 0 0 0 263.5 42.401 L 263.5 44.901 Q 270.1 44.901 270.1 53.301 Q 270.1 58.744 268.458 61.264 A 4.778 4.778 0 0 1 266.9 62.801 Q 265.625 63.481 263.772 63.583 A 12.23 12.23 0 0 1 263.1 63.601 L 261.5 63.201 Q 262.798 66.446 265.086 67.585 A 6.116 6.116 0 0 0 267.85 68.201 A 11.663 11.663 0 0 0 274.975 65.764 A 15.12 15.12 0 0 0 275.8 65.101 Z M 620.3 40.901 L 623 40.901 A 17.567 17.567 0 0 0 623.631 41.726 Q 624.335 42.587 624.939 43.053 A 3.787 3.787 0 0 0 625.3 43.301 Q 626.4 41.901 628 41.101 L 628 12.501 L 634.2 12.501 L 634.2 4.001 L 609.4 4.001 L 609.4 12.501 L 615.4 12.501 L 615.4 41.201 A 7.617 7.617 0 0 1 616.734 42.126 Q 617.291 42.602 617.828 43.218 A 12.646 12.646 0 0 1 617.9 43.301 A 4.638 4.638 0 0 0 618.494 42.869 Q 619.294 42.195 620.3 40.901 Z M 798.8 40.901 L 801.5 40.901 A 17.567 17.567 0 0 0 802.131 41.726 Q 802.835 42.587 803.439 43.053 A 3.787 3.787 0 0 0 803.8 43.301 Q 804.9 41.901 806.5 41.101 L 806.5 12.501 L 812.7 12.501 L 812.7 4.001 L 787.9 4.001 L 787.9 12.501 L 793.9 12.501 L 793.9 41.201 A 7.617 7.617 0 0 1 795.234 42.126 Q 795.791 42.602 796.328 43.218 A 12.646 12.646 0 0 1 796.4 43.301 A 4.638 4.638 0 0 0 796.994 42.869 Q 797.794 42.195 798.8 40.901 Z M 521.8 12.501 L 527.8 12.501 L 527.8 4.001 L 505.6 4.001 L 505.6 12.501 L 511.2 12.501 L 505.6 40.001 L 507.7 40.001 Q 509.533 42.509 510.621 43.156 A 2.454 2.454 0 0 0 510.7 43.201 Q 512.5 40.901 515.5 40.301 L 521.8 12.501 Z M 488.5 40.001 L 490.3 40.001 L 484.8 12.501 L 490.4 12.501 L 490.4 4.001 L 468.2 4.001 L 468.2 12.501 L 474.2 12.501 L 480.4 40.301 Q 483.5 40.701 485.6 43.201 Q 486.6 42.401 488.5 40.001 Z M 875.3 27.001 L 875.3 40.501 L 879.9 46.001 L 879.9 53.301 Q 878.2 53.401 877.2 53.551 Q 876.417 53.668 875.542 54.246 A 7.518 7.518 0 0 0 875.05 54.601 A 2.921 2.921 0 0 0 873.951 56.519 A 4.355 4.355 0 0 0 873.9 57.201 A 1.709 1.709 0 0 0 874.988 58.82 Q 875.808 59.215 877.247 59.286 A 13.377 13.377 0 0 0 877.9 59.301 A 15.917 15.917 0 0 0 880.467 59.106 Q 881.889 58.873 883.05 58.363 A 8.289 8.289 0 0 0 884.35 57.651 Q 886.8 56.001 887.6 53.301 L 886.9 53.301 L 881.9 47.301 L 881.9 40.001 Q 885.1 40.001 886.5 40.101 L 886.5 21.001 A 1.157 1.157 0 0 0 886.191 20.223 Q 886.037 20.047 885.806 19.888 A 3.39 3.39 0 0 0 885.4 19.651 Q 884.537 19.219 883.796 19.126 A 3.184 3.184 0 0 0 883.4 19.101 A 10.853 10.853 0 0 0 880.934 19.366 A 7.396 7.396 0 0 0 877.5 21.151 Q 875.3 23.201 875.3 27.001 Z M 38.7 47.301 L 38.7 40.001 Q 42.339 40.001 43.85 40.194 A 9.702 9.702 0 0 1 43.9 40.201 L 43.9 23.001 L 43.8 21.701 A 6.771 6.771 0 0 0 42.802 21.457 Q 41.888 21.301 40.7 21.301 L 32.5 21.301 L 32.5 40.001 L 32.9 40.001 L 37.9 46.001 L 37.9 53.301 A 14.024 14.024 0 0 0 35.82 53.513 Q 32 54.224 32 57.201 L 32 57.701 A 12.373 12.373 0 0 0 33.515 57.974 Q 34.301 58.069 35.193 58.093 A 22.839 22.839 0 0 0 35.8 58.101 A 16.891 16.891 0 0 0 38.707 57.871 Q 40.242 57.602 41.382 57.018 A 5.678 5.678 0 0 0 44.4 53.301 L 43.7 53.301 L 38.7 47.301 Z M 338.1 37.101 L 338.1 12.501 L 344.4 12.501 Q 357.704 12.501 358.631 22.108 A 15.548 15.548 0 0 1 358.7 23.601 A 16.516 16.516 0 0 1 358.109 28.127 A 12.784 12.784 0 0 1 355.25 33.301 Q 352.384 36.458 346.86 36.992 A 24.538 24.538 0 0 1 344.5 37.101 L 338.1 37.101 Z M 431.9 37.201 L 413.5 37.201 L 418.9 12.201 L 426.3 12.201 L 431.9 37.201 Z M 738.2 30.501 L 730.5 30.501 L 730.5 12.501 L 738.2 12.501 A 37.292 37.292 0 0 1 741.102 12.605 Q 743.944 12.828 745.697 13.527 A 5.969 5.969 0 0 1 747.25 14.401 Q 749.515 16.232 749.597 20.944 A 20.572 20.572 0 0 1 749.6 21.301 Q 749.6 29.661 740.187 30.424 A 24.608 24.608 0 0 1 738.2 30.501 Z M 744.8 47.301 L 744.8 44.401 L 742.6 44.401 L 744 46.001 L 744 53.301 A 14.024 14.024 0 0 0 741.92 53.513 Q 738.1 54.224 738.1 57.201 L 738.1 57.701 A 12.373 12.373 0 0 0 739.615 57.974 Q 740.401 58.069 741.293 58.093 A 22.839 22.839 0 0 0 741.9 58.101 A 16.891 16.891 0 0 0 744.807 57.871 Q 746.342 57.602 747.482 57.018 A 5.678 5.678 0 0 0 750.5 53.301 L 749.8 53.301 L 744.8 47.301 Z M 349.1 21.201 L 345.9 21.201 L 345.9 34.201 A 15.016 15.016 0 0 0 350.038 33.332 Q 354.618 31.591 355.62 26.631 A 15.32 15.32 0 0 0 355.9 23.601 L 355.8 22.101 Q 354.358 21.418 351.245 21.253 A 40.795 40.795 0 0 0 349.1 21.201 Z M 428.5 34.601 L 425.8 22.701 L 423.2 34.601 L 428.5 34.601 Z M 743.2 21.201 L 738.3 21.201 L 738.3 27.801 A 23.872 23.872 0 0 0 740.739 27.687 Q 744.706 27.277 745.8 25.401 A 7.178 7.178 0 0 0 746.697 22.813 A 9.392 9.392 0 0 0 746.8 21.401 A 0.134 0.134 0 0 0 746.722 21.354 Q 746.263 21.201 743.2 21.201 Z\"\n            fill=\"#FFC000\"\n          />\n        </g>\n      </animated.svg></div></div>\n    </h4>\n    </div>\n    <div className='col-md-2'>\n       </div>\n      </div>\n\n \n\n{/* \n      <div className='row'>\n<div className='col-md-2'>\n       </div>\n<div className='col-md-8'>\n      <ul class=\"nav\">\n  <li onClick={showLogin()}>Login</li>\n  <li onClick={showSignup()}>Sign up</li>\n  <li onClick={showForgotPassword()}>Forgot password</li>\n  <li onClick={showSubscribe()}>Subscribe</li>\n  <li onClick={showContactUs()}>Contact us</li>\n</ul>\n<div class=\"wrapper\">\n  <div class=\"rec-prism\">\n    <div class=\"face face-top\">\n      <div class=\"content\">\n        <h2>Subscribe</h2>\n        <small>Enter your email so we can send you the latest updates!</small>\n        <form onsubmit=\"event.preventDefault()\">\n          <div class=\"field-wrapper\">\n            <input type=\"text\" name=\"email\" placeholder=\"email\"/>\n            <label>e-mail</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"submit\" onclick=\"showThankYou()\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n    <div class=\"face face-front\">\n      <div class=\"content\">\n        <h2>Sign in</h2>\n        <form onsubmit=\"event.preventDefault()\">\n          <div class=\"field-wrapper\">\n            <input type=\"text\" name=\"username\" placeholder=\"username\"/>\n            <label>username</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"password\" name=\"password\" placeholder=\"password\" autocomplete=\"new-password\"/>\n            <label>password</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"submit\" onclick=\"showThankYou()\"/>\n          </div>\n          <span class=\"psw\" onclick=\"showForgotPassword()\">Forgot Password?   </span>\n          <span class=\"signup\" onclick=\"showSignup()\">Not a user?  Sign up</span>\n        </form>\n      </div>\n    </div>\n    <div class=\"face face-back\">\n      <div class=\"content\">\n        <h2>Forgot your password?</h2>\n        <small>Enter your email so we can send you a reset link for your password</small>\n        <form onsubmit=\"event.preventDefault()\">\n          <div class=\"field-wrapper\">\n            <input type=\"text\" name=\"email\" placeholder=\"email\"/>\n            <label>e-mail</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"submit\" onclick=\"showThankYou()\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n    <div class=\"face face-right\">\n      <div class=\"content\">\n        <h2>Sign up</h2>\n        <form onsubmit=\"event.preventDefault()\">\n          <div class=\"field-wrapper\">\n            <input type=\"text\" name=\"email\" placeholder=\"email\"/>\n            <label>e-mail</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"password\" name=\"password\" placeholder=\"password\" autocomplete=\"new-password\"/>\n            <label>password</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"password\" name=\"password2\" placeholder=\"password\" autocomplete=\"new-password\"/>\n            <label>re-enter password</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"submit\" onclick=\"showThankYou()\"/>\n          </div>\n          <span class=\"singin\" onclick=\"showLogin()\">Already a user?  Sign in</span>\n        </form>\n      </div>\n    </div>\n    <div class=\"face face-left\">\n      <div class=\"content\">\n        <h2>Contact us</h2>\n        <form onsubmit=\"event.preventDefault()\">\n          <div class=\"field-wrapper\">\n            <input type=\"text\" name=\"name\" placeholder=\"name\"/>\n            <label>Name</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"text\" name=\"email\" placeholder=\"email\"/>\n            <label>e-mail</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <textarea placeholder=\"your message\"></textarea>\n            <label>your message</label>\n          </div>\n          <div class=\"field-wrapper\">\n            <input type=\"submit\" onclick=\"showThankYou()\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n    <div class=\"face face-bottom\">\n      <div class=\"content\">\n        <div class=\"thank-you-msg\">\n          Thank you!\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n<div className='col-md-2'>\n       </div>\n</div> */}\n\n\n      <div className='row center'>\n      <div className='col-md-3'>\n</div>\n<div className='col-md-6'>\n      {/* <div className=\"loging\">\n        <div></div>\n      <form  className=\"table table-hover table-dark\" onSubmit={handleLogin}>\n        <div>\n          <label style={{color:'gold', fontSize:'2rem'}} htmlFor=\"username\">Username:</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <label style={{color:'gold', fontSize:'2rem'}}  htmlFor=\"password\">Password:</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <br/>\n        <br/>\n        <br/>\n        <button className=\"btn\" type=\"submit\">Login</button>\n        <br/>\n      <br/><br/>\n      <br/>\n      </form>\n      <br/>\n      <br/>\n    </div> */}\n\n    <div className=\"bodies\">\n     <div class=\"main\">  \t\n\t\t<input            className=\"ainput\"\ntype=\"checkbox\" id=\"chk\" aria-hidden=\"true\"/>\n\n\t\t\t<div class=\"signup\">\n\t\t\t\t<form onSubmit={handleSubmit}> \n\t\t\t\t\t<label  for=\"chk\" className=\"alabel\" aria-hidden=\"true\">Sign up</label>\n\t\t\t\t\t<input id=\"username\"\n            value={username}\n            className=\"ainput\"\n\n            onChange={(e) => setUsername(e.target.value)} type=\"username\" name=\"username\" placeholder=\"username\" required=\"\"/>\n\t\t\t\t\t<input id=\"password\"\n            type=\"password\"\n            className=\"ainput\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)} name=\"pswd\" placeholder=\"Password\" required=\"\"/>\n\t\t\t\t\t<button data-toggle=\"modal\" data-target=\"#exampleModal\"  className=\"abutton\" >Sign up</button>\n          <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Success</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        You have now registered successfully, please Log In!\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<div class=\"login\">\n\t\t\t\t<form onSubmit={handleLogin}>\n\t\t\t\t\t<label className=\"alabel\" for=\"chk\" aria-hidden=\"true\">Login</label>\n\t\t\t\t\t<input id=\"username\"\n            value={username}\n            className=\"ainput\"\n\n            onChange={(e) => setUsername(e.target.value)} type=\"username\" name=\"username\" placeholder=\"username\" required=\"\"/>\n\t\t\t\t\t<input type=\"password\"\n            className=\"ainput\"\n\nvalue={password}\n            onChange={(e) => setPassword(e.target.value)} name=\"pswd\" placeholder=\"Password\" required=\"\"/>\n\t\t\t\t\t<button className=\"abutton\">Login</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t</div>\n</div>\n\n      </div>\n      </div>\n      </div>\n      <div className='col-md-3'>\n</div>\n    </>\n  );\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n","import { BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport { history } from './helpers/history.js';\nimport './App.css';\nimport React from 'react';\nimport CreateTrip from './components/CreateTrip.js';\nimport ShowTripList from './components/ShowTripList.js';\nimport ShowTripDetails from './components/ShowTripDetails.js';\nimport ShowPublicTrip from './components/ShowPublicTrip.js';\nimport ShowPublicProfile from './components/ShowPublicProfile.js';\nimport Dashboard from './components/Dashboard.js';\nimport { ProtectedRoute } from \"./components/ProtectedRoute\";\nimport { AuthProvider } from \"./hooks/useAuth\";\n\nimport UpdateTripInfo from './components/UpdateTripInfo.js';\nimport UpdateProfileInfo from './components/UpdateProfileInfo.js';\nimport ShowProfile from './components/ShowProfile.js';\n\n\nimport Profile from './components/Profile.js';\nimport Login from './components/Login.js';\n// function setToken(userToken) {\n//   sessionStorage.setItem('token', JSON.stringify(userToken));\n// }\n\n// function getToken() {\n//   const tokenString = sessionStorage.getItem('token');\n//   const userToken = JSON.parse(tokenString);\n//   return userToken?.token\n// }\n// import MyComponent\nconst App = () => {\n  \n  \n  return (\n    <Router history={history}>\n       <AuthProvider>\n        <Routes>\n      \n          <Route   path='/' element={<ShowTripList />}/>\n          <Route  path='/create-trip' element={<ProtectedRoute><CreateTrip /></ProtectedRoute>}/>\n          <Route  path='/create-profile' element={<ProtectedRoute><Profile/></ProtectedRoute>}/>\n          <Route  path='/edit-profile/:id' element={<ProtectedRoute><UpdateProfileInfo/></ProtectedRoute>}/>\n\n          <Route  path='/dashboard' element={<ProtectedRoute><Dashboard/></ProtectedRoute>}/>\n          <Route  path='/login' element={<Login/>}/>\n\n\n          <Route  path='/edit-trip/:id' element={<ProtectedRoute><UpdateTripInfo /></ProtectedRoute>}/>\n          <Route  path='/show-profile/:id' element={<ProtectedRoute><ShowProfile /></ProtectedRoute>}/>\n          <Route  path='/show-profileinfo/:id' element={<ShowPublicProfile/>}/>\n\n\n          <Route  path='/show-trip/:id' element={<ProtectedRoute><ShowTripDetails /></ProtectedRoute>}/>\n          <Route  path='/show-tripinfo/:id' element={<ShowPublicTrip />}/>\n\n        </Routes>\n    </AuthProvider>\n\n    </Router>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport reportWebVitals from './reportWebVitals.js';\nimport '@aws-amplify/ui-react/styles.css'; // default theme\n\n\n\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","require","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","aa","ca","p","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","hasOwnProperty","ka","la","ma","v","f","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","forEach","ra","sa","toUpperCase","ta","pa","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","match","Na","Oa","prepareStackTrace","Reflect","construct","l","h","k","displayName","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","Ua","Wa","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","t","J","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","q","r","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","props","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","uh","vh","index","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","resetWarningCache","o","isRequired","bigint","bool","func","object","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","__esModule","default","toStringTag","pageClassName","pageLinkClassName","page","activeClassName","activeLinkClassName","getEventListener","pageSelectedHandler","extraAriaContext","pageLabelBuilder","rel","ariaLabel","className","role","tabIndex","onKeyPress","propTypes","breakLabel","breakAriaLabel","breakClassName","breakLinkClassName","breakHandler","__proto__","ReferenceError","getPrototypeOf","sham","Proxy","Boolean","handleClick","isPrevious","pageCount","isNext","callActiveCallback","isActive","setState","callCallback","eventListener","isBreak","nextSelectedPage","handlePageChange","getForwardJump","getBackwardJump","onPageChange","onPageActive","nextPageRel","prevPageRel","selectedPageRel","pageRangeDisplayed","marginPagesDisplayed","breakAriaLabels","getPageElement","backward","forward","handleBreakClick","initialPage","forcePage","warn","disableInitialCallback","hrefBuilder","hrefAllControls","ariaLabelBuilder","handlePageSelected","getElementPageRel","getElementHref","renderOnZeroPageCount","disabledClassName","disabledLinkClassName","containerClassName","previousLabel","previousClassName","previousLinkClassName","previousAriaLabel","prevRel","nextLabel","nextClassName","nextLinkClassName","nextAriaLabel","nextRel","handlePreviousPage","pagination","handleNextPage","__self","__source","Fragment","jsx","jsxs","forceUpdate","escape","_status","_result","Children","map","count","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","leafPrototypes","getProto","ns","def","getOwnPropertyNames","definition","chunkId","all","reduce","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","head","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Action","PopStateEventType","invariant","warning","cond","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","createPath","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useParams","routeMatch","useResolvedPath","_temp2","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","revalidation","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","findIndex","renderFallback","fallbackIndex","v7_partialHydration","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","ctx","useRouteContext","thisRoute","Navigate","_ref4","isStatic","jsonPath","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","startTransitionImpl","ReactDOM","BrowserRouter","historyRef","setStateImpl","v7_startTransition","newState","isBrowser","ABSOLUTE_URL_REGEX","Link","_ref7","absoluteHref","reloadDocument","preventScrollReset","unstable_viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","createBrowserHistory","thisArg","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","isDate","isFile","isBlob","isFileList","isURLSearchParams","allOwnKeys","findKey","_key","_global","globalThis","global","isContextDefined","isTypedArray","TypedArray","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isAsyncFn","isFormData","kind","FormData","append","isArrayBufferView","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","stripBOM","content","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","searchString","position","lastIndex","forEachEntry","pair","matchAll","regExp","exec","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","define","toCamelCase","p1","p2","noop","toFiniteNumber","generateString","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","AxiosError","config","response","captureStackTrace","utils","description","fileName","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","token","predicates","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","isFlatArray","exposedHelpers","build","encode","charMap","AxiosURLSearchParams","_pairs","toFormData","encoder","_encode","buildURL","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","clear","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","classes","URLSearchParams","protocols","hasBrowserEnv","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","line","parseHeaders","tokens","tokensRE","parseTokens","deleted","deleteHeader","normalize","format","normalized","formatHeader","_len","targets","asStrings","computed","_len2","_key2","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","_ref2","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","expires","domain","secure","cookie","toGMTString","remove","buildFullPath","baseURL","requestedURL","isAbsoluteURL","relativeURL","combineURLs","msie","userAgent","urlParsingNode","originURL","resolveURL","host","hostname","port","requestURL","samplesCount","timestamps","firstSampleTS","chunkLength","startedAt","bytesCount","passed","round","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","XMLHttpRequest","requestData","requestHeaders","onCanceled","withXSRFToken","cancelToken","unsubscribe","signal","auth","username","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","ERR_BAD_REQUEST","settle","responseText","open","paramsSerializer","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","isURLSameOrigin","xsrfValue","cookies","setRequestHeader","withCredentials","onDownloadProgress","onUploadProgress","upload","cancel","abort","subscribe","aborted","parseProtocol","send","knownAdapters","http","xhr","xhrAdapter","renderReason","reason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","validator","formatMessage","opt","desc","opts","ERR_DEPRECATED","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","_request","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","Cancel","spread","isAxiosError","formToJSON","getAdapter","globals_exports","__export","colors","createStringInterpolator","skipAnimation","willAdvance","makeQueue","raf","schedule","writeQueue","onStartQueue","onStart","onFrameQueue","onFrame","onFinishQueue","onFinish","timeouts","handler","ms","pendingCount","findTimeout","sync","batchedUpdates","throttle","lastArgs","queuedFn","throttled","args","nativeRaf","requestAnimationFrame","impl","frameLoop","advance","update","ts","loop","prevTs","eachSafely","flush","values","each2","fun","und","isEqual","each","eachProp","items","flushCalls","isSSR","globals","startQueue","currentFrame","prevFrame","idle","flushStartQueue","startSafely","prevIndex","startUnsafely","other","dt","nextFrame","NUMBER","PERCENTAGE","_len3","_key3","rgb","rgba","hsl","hsla","hex3","hex4","hex6","hex8","hue2rgb","hslToRgb","parse255","int","parse360","parseFloat","parse1","parsePercentage","colorToRgba","int32Color","normalizeColor","createInterpolator","extrapolate","outputRange","inputRange","extrapolateLeft","extrapolateRight","easing","range2","findRange","inputMin","inputMax","outputMin","outputMax","interpolate","c1","c2","c3","c4","PI","c5","bounceOut","n1","d1","easings","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","easeInElastic","easeOutElastic","easeInOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","steps","steps2","direction","progress2","expanded","rounded","clamp","$get","$observers","hasFluidValue","getFluidValue","getFluidObservers","callFluidObservers","observers","observer2","eventObserved","callFluidObserver","FluidValue","setFluidGetter","setHidden","addFluidObserver","observerAdded","removeFluidObserver","observerRemoved","namedColorRegex","numberRegex","colorRegex","unitRegex","rgbaRegex","cssVariableRegex","variableToRgba","parseCSSVariable","getComputedStyle","getPropertyValue","value2","rgbaRound","p3","p4","createStringInterpolator2","keyframes","interpolators","output2","_output$find","missingUnit","find","prefix","once","called","warnInterpolate","warnDirectCall","isAnimatedString","useIsMounted","useRef2","useForceUpdate","update2","useOnce","effect","useEffect3","emptyDeps","usePrev","prevRef","useRef4","useEffect4","$node","getAnimated","owner","setAnimated","defineHidden","getPayload","Animated","AnimatedValue","durationProgress","lastPosition","step","reset","lastVelocity","v0","AnimatedString","_string","_toString","is2","goal","TreeContext","AnimatedObject","animated","_makePayload","_addToPayload","AnimatedArray","makeAnimated","getAnimatedType","is3","isAnimatedString2","withAnimated","hasInstance","is4","givenProps","givenRef","instanceRef","updateRef","createAnimatedStyle","getAnimatedState","applyAnimatedValues","observer","PropsObserver","observerRef","dep","usedProps","getComponentProps","cacheKey","getDisplayName","is5","callProp","matchProp","resolveProp","getDefaultProp","noopTransform","getDefaultProps","transform","DEFAULT_PROPS","defaults2","RESERVED_PROPS","pause","reverse","immediate","onProps","onChange","onPause","onResume","onRest","onResolve","trail","initial","enter","leave","onDestroyed","callId","parentId","inferTo","to2","getForwardProps","computeGoal","hasProps","isAsyncTo","detachRefs","ctrl","_ctrl$ref","replaceRef","_ctrl$ref2","tension","friction","mass","damping","AnimationConfig","velocity","sanitizeConfig","decay","isTensionConfig","frequency","duration","emptyArray","Animation","changed","toValues","fromValues","scheduleProps","actions","_props$cancel","paused","resumeQueue","resume","G2","delayed","pauseQueue","cancelId","getCombinedResult","results","cancelled","getCancelledResult","getNoopResult","getFinishedResult","finished","runAsync","asyncTo","prevTo","prevPromise","asyncId","preventBail","bail","bailPromise","bailIfEnded","bailSignal","bailResult","animate","BailSignal","skipAnimationSignal","SkipAnimationSignal","G3","stopAsync","props2","eachProp2","result2","animating","async","stop","raf2","item","isFrameValue","FrameValue","nextId","FluidValue2","_priority","_onPriorityChange","G4","_attach","_detach","_onChange","parent","$P","hasAnimated","isAnimating","isPaused","setActiveBit","active","IS_ANIMATING","setPausedBit","SpringValue","_state","_pendingCalls","_lastCallId","_lastToId","_memoizedDuration","getFluidValue2","getAnimated2","node2","isDelayed","anim","toArray2","elapsed","precision","exp","restVelocity","bounceFactor","bounce","canBounce","isGrowing","isMoving","isBouncing","numSteps","currVal","finalVal","_stop","raf3","_focus","_set","_update","finish","_onStart","_start","_prepareNode","isLoop","mergeActiveFn","sendEvent","isFrozen","checkFinished","_resume","_merge","nextProps","createLoopUpdate","hasToProp","hasFromProp","prevFrom","hasFromChanged","hasToChanged","hasAsyncTo","isAnimatable","goalType","started","hasValueChanged","ACTIVE_EVENTS","_anim$onStart","oldNode","G5","frameLoop2","callFluidObservers2","loopRet","overrides","createUpdate","findDefined","declareUpdate","eachProp3","_target$animation$typ","_target$animation","_target$defaultProps$","_target$defaultProps","_len4","_key4","BATCHED_EVENTS","nextId2","Controller","flush3","springs","_lastAsyncId","_active","_changed","_started","_events","_onFrame","_flush","spring","_item","is6","toArray3","prepareKeys","flushUpdateQueue","each3","eachProp4","flush2","_ref3","onStart2","onChange2","onRest2","raf4","flushUpdate","flushCalls2","getSprings","prepareSprings","createSpring","setSprings","addFluidObserver2","init","SpringContext","inherited","getResult","inputs","useState2","committed","useRef3","prevCache","areInputsEqual","useEffect2","useMemoOne","SpringRef","SpringRef2","each4","is7","_getProps","useSprings","propsFn","is8","layoutId","ctrls","updates2","springs2","updates","prevLength","declareUpdates","endIndex","each5","useContext2","prevContext","hasContext","useIsomorphicLayoutEffect2","useSpring","isFn","is9","Interpolation","calc","_get","getAnimatedType2","setAnimated2","_dt","isEqual2","getAnimated3","checkIdle","becomeIdle","is14","getFluidValue3","toArray5","each10","getPayload2","G6","raf5","frameLoop3","hasFluidValue2","addFluidObserver3","removeFluidObserver2","highest","isIdle","callFluidObservers3","Globals","frameLoop4","isCustomPropRE","dangerousStyleValue","isUnitlessNumber","attributeCache","prefixes","acc","prefixKey","domTransforms","pxTransforms","degTransforms","addUnit","unit","isValueIdentity","AnimatedStyle","transforms","xyz","x2","y2","z2","deg","FluidTransform","identity","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","components","hostConfig","createHost","isFilterElement","viewBox","attributes","names","hasAttribute","AuthContext","AuthProvider","user","setUser","useLocalStorage","keyName","storedValue","setStoredValue","localStorage","getItem","setItem","newValue","login","logout","_jsx","useAuth","AnimFeTurbulence","AnimFeDisplacementMap","url2","toggle","freq","factor","scale","instance2","profile","setProfile","trip","setTrip","userid","notes","quality","departing","photo","_jsxs","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","scrollTo","behavior","svg","baseFrequency","numOctaves","seed","xChannelSelector","yChannelSelector","in","in2","noValidate","onSubmit","_id","post","encType","placeholder","accept","files","_inprofile$","inprofile","img2","alt","trips","setTrips","trips1","setTrips1","profiles1","setProfiles1","searchField","setSearchField","searchShow","setSearchShow","currentPage","setCurrentPage","currentPageData","TripCard","searchList","ReactPaginate","selectedPage","TripItem","scope","_Fragment","onDeleteClick","tripa","setTripa","userInfo","setUserInfo","pprofile","setPProfile","ProfileItem","fontFamily","bio","age","gender","_myprofile$","myprofile","profiles2","setProfiles2","activeprofile","setActiveprofile","TripCard2","handleLogout","fontsize","ProtectedRoute","file","filename","put","htmlFor","profiles","setProfiles","fontSize","textTransform","Login","_location$state","_location$state$from","setToken","setAuth","setPassword","setError","API","setUsername","class","tabindex","credentials","fetch","json","loginUser","App","ShowTripList","CreateTrip","Profile","UpdateProfileInfo","Dashboard","UpdateTripInfo","ShowProfile","ShowPublicProfile","ShowTripDetails","ShowPublicTrip","getElementById","reportWebVitals"],"sourceRoot":""}